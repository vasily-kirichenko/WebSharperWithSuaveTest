{
"version": 3,
"sourceRoot": "FSharpSource",
"sources": ["WebSharper.Main/CollectionInternals.fs", "WebSharper.Main/Html.fs", "WebSharper.Main/Exception.fs", "WebSharper.Main/ArrayModule.fs", "WebSharper.Main/IntrinsicFunctions.fs", "WebSharper.Main/ExtraTopLevelOperators.fs", "WebSharper.Main/Array.fs", "WebSharper.Main/Array2DModule.fs", "WebSharper.Main/Async.fs", "WebSharper.Main/Char.fs", "WebSharper.Main/Concurrency.fs", "WebSharper.Main/RuntimeHelpers.fs", "WebSharper.Main/DateTime.fs", "WebSharper.Main/Enumerable.fs", "WebSharper.Main/Enumerator.fs", "WebSharper.Main/JavaScript.Pervasives.fs", "WebSharper.Main/Json.fs", "WebSharper.Main/LazyExtensions.fs", "WebSharper.Main/List.fs", "WebSharper.Main/ListModule.fs", "WebSharper.Main/Nullable.fs", "WebSharper.Main/Operators.fs", "WebSharper.Main/OptionModule.fs", "WebSharper.Main/PrintfHelpers.fs", "WebSharper.Main/Queue.fs", "WebSharper.Main/Random.fs", "WebSharper.Main/Remoting.fs", "WebSharper.Main/SeqModule.fs", "WebSharper.Main/OperatorIntrinsics.fs", "WebSharper.Main/Stack.fs", "WebSharper.Main/String.fs", "WebSharper.Main/Unchecked.fs", "WebSharper.Main/CommonExtensions.fs"],
"sourcesContent": ["// $begin{copyright}\n//\n// This file is part of WebSharper\n//\n// Copyright (c) 2008-2015 IntelliFactory\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you\n// may not use this file except in compliance with the License.  You may\n// obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n// implied.  See the License for the specific language governing\n// permissions and limitations under the License.\n//\n// $end{copyright}\n\n/// Provides seq/list/array proxies\nmodule internal WebSharper.CollectionInternals\n\nopen WebSharper.JavaScript\n\n[<JavaScript>]\n[<Name \"Arrays.splitInto\">]\nlet ArraySplitInto count (arr: 'T[]) =\n    if count <= 0 then failwith \"Count must be positive\"\n    let len = arr.Length\n    if len = 0 then\n        [| |]\n    else\n        let count = min count len\n        let res = Array.zeroCreate count : 'T[][]\n        let minChunkSize = len / count\n        let mutable startIndex = 0\n        for i = 0 to len % count - 1 do\n            res.[i] <- Array.sub arr startIndex (minChunkSize + 1)\n            startIndex <- startIndex + minChunkSize + 1\n        for i = len % count to count - 1 do\n            res.[i] <-  Array.sub arr startIndex minChunkSize\n            startIndex <- startIndex + minChunkSize\n        res\n\n[<JavaScript>]\n[<Name \"Arrays.contains\">]\nlet ArrayContains (item: 'T) (arr: Array<'T>)  =\n    let mutable c = true\n    let mutable i = 0\n    let l = arr.Length\n    while c && i < l do\n        if arr.[i] = item then\n            c <- false\n        else\n            i <- i + 1\n    not c\n\n[<JavaScript>]\n[<Name \"Arrays.tryFindBack\">]\nlet ArrayTryFindBack f (arr: _ []) =\n    let mutable res = None\n    let mutable i = Array.length arr - 1\n    while i > 0 && Option.isNone res do\n        if f arr.[i] then res <- Some arr.[i]\n        i <- i - 1\n    res\n\n[<JavaScript>]\n[<Name \"Arrays.tryFindIndexBack\">]\nlet ArrayTryFindIndexBack f (arr: _ []) =\n    let mutable res = None\n    let mutable i = Array.length arr - 1\n    while i > 0 && Option.isNone res do\n        if f arr.[i] then res <- Some i\n        i <- i - 1\n    res\n\n[<JavaScript>]\n[<Name \"Arrays.mapFold\">]\nlet ArrayMapFold (f: 'S -> 'T -> 'R * 'S) (zero: 'S) (arr: 'T[]) : 'R[] * 'S =\n    let r = Array.zeroCreate<'R>(Array.length arr)\n    let mutable acc = zero\n    for i = 0 to Array.length arr - 1 do\n        let a, b = f acc arr.[i]\n        r.[i] <- a\n        acc <- b \n    r, acc\n\n[<JavaScript>]\n[<Name \"Arrays.mapFoldBack\">]\nlet ArrayMapFoldBack (f: 'T -> 'S -> 'R * 'S) (arr: 'T[]) (zero: 'S) : 'R[] * 'S =\n    let r = Array.zeroCreate<'R>(Array.length arr)\n    let mutable acc = zero\n    let len = Array.length arr\n    for j = 1 to len do\n        let i = len - j\n        let a, b = f arr.[i] acc\n        r.[i] <- a\n        acc <- b \n    r, acc\n\n[<JavaScript>]\n[<Name \"Arrays.sortInPlaceByDescending\">]\nlet ArraySortInPlaceByDescending<'T,'U when 'U: comparison> (f: 'T -> 'U) (arr: 'T []) =\n    As<unit> (arr.JS.Sort(fun (x, y) -> - compare (f x) (f y)))\n\n[<JavaScript>]\n[<Name \"Seq.tryHead\">]\nlet SeqTryHead (s: seq<'T>) =\n    use e = Enumerator.Get s\n    if e.MoveNext() then Some e.Current else None\n\n[<JavaScript>]\n[<Name \"Seq.tryItem\">]\nlet SeqTryItem i (s: seq<'T>) =\n    if i < 0 then None else\n    let mutable j = 0\n    use e = Enumerator.Get s\n    let mutable go = true\n    while go && j <= i do\n        if e.MoveNext() then\n            j <- j + 1\n        else\n            go <- false\n    if go then Some e.Current else None\n\n[<JavaScript>]\n[<Name \"Seq.tryLast\">]\nlet SeqTryLast (s: seq<'T>) =\n    use e = Enumerator.Get s\n    if e.MoveNext() then \n        while e.MoveNext() do ()\n        Some e.Current \n    else None\n\n[<JavaScript>]\n[<Name \"Seq.chunkBySize\">]\nlet SeqChunkBySize (size: int) (s: seq<'T>) =\n    if size <= 0 then failwith \"Chunk size must be positive\"\n    Enumerable.Of <| fun () ->\n        let enum = Enumerator.Get s\n        Enumerator.NewDisposing () (fun _ -> enum.Dispose()) <| fun e ->\n            if enum.MoveNext() then\n                let res = [|enum.Current|]\n                while res.Length < size && enum.MoveNext() do \n                    res.JS.Push enum.Current |> ignore\n                e.Current <- res\n                true\n            else false\n\n[<JavaScript>]\n[<Name \"Seq.compareWith\">]\nlet SeqCompareWith  (f: 'T -> 'T -> int) (s1: seq<'T>) (s2: seq<'T>) : int =\n    use e1 = Enumerator.Get s1\n    use e2 = Enumerator.Get s2\n    let mutable r = 0\n    let mutable loop = true\n    while loop && r = 0 do\n        match e1.MoveNext(), e2.MoveNext() with\n        | true, false ->\n            r <- 1\n        | false, true ->\n            r <- -1\n        | false, false ->\n            loop <- false\n        | true, true ->\n            r <- f e1.Current e2.Current\n    r\n\n[<JavaScript>]\n[<Name \"Seq.countBy\">]\nlet SeqCountBy (f: 'T -> 'K) (s: seq<'T>) : seq<'K * int> =\n    Seq.delay <| fun () ->\n        let d = new obj()\n        use e = Enumerator.Get s\n        let keys = System.Collections.Generic.Queue<_>()\n        while e.MoveNext() do\n            let k = f e.Current\n            let h = As<string> (Unchecked.hash k)\n            if JS.HasOwnProperty d (As h) then\n                (?<-) d h ((?) d h + 1)\n            else\n                keys.Enqueue k\n                (?<-) d h 1\n        keys.ToArray()\n        |> Array.map (fun k -> (k, (?) d (As (hash k))))\n        |> As<_>\n\n[<JavaScript>]\n[<Name \"Seq.distinct\">]\nlet SeqDistinct<'T when 'T : equality> (s: seq<'T>) : seq<'T> =\n    Seq.distinctBy id s\n\n[<JavaScript>]\n[<Name \"Seq.distinctBy\">]\nlet SeqDistinctBy<'T,'K when 'K : equality>\n        (f: 'T -> 'K) (s: seq<'T>) : seq<'T> =\n    Enumerable.Of <| fun () ->\n        let enum        = Enumerator.Get s\n        let seen        = Array<Array<'K>>()\n        let add c =\n            let k = f c\n            let h = hash k\n            let cont = seen.[h]\n            if cont = JS.Undefined then\n                seen.[h] <- [|k|].JS\n                true\n            else\n                if cont |> ArrayContains k then\n                    false\n                else\n                    cont.Push(k) |> ignore\n                    true         \n        Enumerator.NewDisposing () (fun _ -> enum.Dispose()) <| fun e ->\n            if enum.MoveNext() then\n                let mutable cur = enum.Current\n                let mutable has = add cur\n                while not has && enum.MoveNext() do\n                    cur <- enum.Current\n                    has <- add cur\n                if has then\n                    e.Current <- cur\n                    true\n                else\n                    false\n            else\n                false\n\n[<JavaScript>]\n[<Name \"Seq.except\">]\nlet SeqExcept (itemsToExclude: seq<'T>) (s: seq<'T>) =\n    Enumerable.Of <| fun () ->\n        let enum        = Enumerator.Get s\n        let seen        = Array<Array<'T>>()\n        let add c =\n            let h = hash c\n            let cont = seen.[h]\n            if cont = JS.Undefined then\n                seen.[h] <- [|c|].JS\n                true\n            else\n                if cont |> ArrayContains c then\n                    false\n                else\n                    cont.Push(c) |> ignore\n                    true         \n        for i in itemsToExclude do\n            add i |> ignore\n        Enumerator.NewDisposing () (fun _ -> enum.Dispose()) <| fun e ->\n            if enum.MoveNext() then\n                let mutable cur = enum.Current\n                let mutable has = add cur\n                while not has && enum.MoveNext() do\n                    cur <- enum.Current\n                    has <- add cur\n                if has then\n                    e.Current <- cur\n                    true\n                else\n                    false\n            else\n                false\n\n[<JavaScript>]\n[<Name \"List.skip\">]\nlet ListSkip i (l : list<'T>) =\n    let mutable res = l\n    for j = 1 to i do\n        match res with \n        | _ :: t ->\n            res <- t\n        | [] -> failwith \"Input list too short.\"\n    res\n\n[<Inline \"$x.push($y)\">]\nlet arrayPush (x: obj) (y: obj) = ()\n\n[<JavaScript>]\n[<Name \"Seq.groupBy\">]\nlet SeqGroupBy (f: 'T -> 'K when 'K : equality)\n            (s: seq<'T>) : seq<'K * seq<'T>> =\n    Seq.delay (fun () ->\n        let d  = obj ()\n        let d1 = obj ()\n        let keys : obj [] = [||]\n        use e = Enumerator.Get s\n        while e.MoveNext() do\n            let c = e.Current\n            let k = f c\n            let h = As<string> (hash k)\n            if not (JS.HasOwnProperty d h) then\n                arrayPush keys k\n            (?<-) d1 h k\n            if JS.HasOwnProperty d h then\n                arrayPush ((?) d h) c\n            else\n                (?<-) d h [| c |]\n        As<_> (Array.map (fun k -> (k, (?) d (As (hash k)))) keys))\n\n[<JavaScript>]\n[<Name \"Seq.insufficient\">]\nlet InsufficientElements() =\n    failwith \"The input sequence has an insufficient number of elements.\"\n\n[<JavaScript>]\n[<Name \"Seq.last\">]\nlet SeqLast (s: seq<_>) =\n    use e = Enumerator.Get s\n    if not <| e.MoveNext() then InsufficientElements()\n    else \n        while e.MoveNext() do ()\n        e.Current\n\n[<JavaScript>]\n[<Name \"List.map3\">]\nlet ListMap3 f (l1: list<_>) (l2: list<_>) (l3: list<_>) =\n    Array.map2\n        ( <| )\n        (Array.map2 f (Array.ofSeq l1) (Array.ofSeq l2))\n        (Array.ofSeq l3)\n    |> List.ofArray\n\n[<JavaScript>]\n[<Name \"Seq.contains\">]\nlet SeqContains (el: 'T) (s: seq<'T>) =\n    use e = Enumerator.Get s\n    let mutable r = false\n    while not r && e.MoveNext() do\n        r <- e.Current = el\n    r\n\n[<JavaScript>]\n[<Name \"Seq.pairwise\">]\nlet SeqPairwise (s: seq<'T>) : seq<'T * 'T> =\n    Seq.windowed 2 s\n    |> Seq.map (fun x -> (x.[0], x.[1]))\n\n[<JavaScript>]\n[<Name \"List.skipWhile\">]\nlet rec ListSkipWhile<'T> (predicate : 'T -> bool) (list : list<'T>) : list<'T> =\n    let mutable rest = list\n    while not (List.isEmpty rest) && predicate (List.head rest) do\n        rest <- List.tail rest \n    rest\n\n[<JavaScript>]\n[<Name \"Seq.unfold\">]\nlet SeqUnfold (f: 'S -> option<'T * 'S>) (s: 'S) : seq<'T> =\n    Enumerable.Of <| fun () ->\n        Enumerator.New s <| fun e ->\n            match f e.State with\n            | Some (t, s) ->\n                e.Current <- t\n                e.State  <- s\n                true\n            | None ->\n                false\n\n[<JavaScript>]\n[<Name \"Seq.truncate\">]\nlet SeqTruncate (n: int) (s: seq<'T>) : seq<'T> =\n    seq {\n        use e = Enumerator.Get s\n        let i = ref 0\n        while e.MoveNext() && !i < n do\n            incr i\n            yield e.Current\n    }\n\n[<JavaScript>]\n[<Name \"Seq.nonNegative\">]\nlet InputMustBeNonNegative() =\n    failwith \"The input must be non-negative.\"\n\n[<JavaScript>]\n[<Name \"Seq.windowed\">]\nlet SeqWindowed (windowSize: int) (s: seq<'T>) : seq<'T []> =\n    if windowSize <= 0 then\n        failwith \"The input must be positive.\"\n    seq {\n        use e = Enumerator.Get s\n        let q = new System.Collections.Generic.Queue<'T>()\n        while q.Count < windowSize && e.MoveNext() do\n            q.Enqueue e.Current\n        if q.Count = windowSize then\n            yield q.ToArray()\n            while e.MoveNext() do\n                ignore (q.Dequeue())\n                q.Enqueue e.Current\n                yield q.ToArray()\n    }\n", "// $begin{copyright}\n//\n// This file is part of WebSharper\n//\n// Copyright (c) 2008-2015 IntelliFactory\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you\n// may not use this file except in compliance with the License.  You may\n// obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n// implied.  See the License for the specific language governing\n// permissions and limitations under the License.\n//\n// $end{copyright}\n\nnamespace WebSharper\n\nopen WebSharper\nopen WebSharper.JavaScript\nopen WebSharper.JQuery\nmodule M = WebSharper.Core.Metadata\nmodule J = WebSharper.Core.Json\n\n/// An interface that has to be implemented by controls\n/// that depend on resources.\ntype IRequiresResources =\n    abstract member Requires : seq<M.Node>\n    abstract member Encode : M.Info * J.Provider -> list<string * J.Encoded>\n\n/// HTML content that can be used as the Body of a web Control.\n/// Can be zero, one or many DOM nodes.\ntype IControlBody =\n    /// Replace the given node with the HTML content.\n    /// The node is guaranteed to be present in the DOM.\n    /// Called exactly once on startup on an IControl's Body.\n    abstract ReplaceInDom : Dom.Node -> unit\n\n/// An interface that has to be implemented by controls that\n/// are subject to activation, ie. server-side controls that\n/// contain client-side elements.\ntype IControl =\n    inherit IRequiresResources\n    abstract member Body : IControlBody\n    abstract member Id : string\n\n[<AutoOpen>]\n[<JavaScript>]\nmodule HtmlContentExtensions =\n\n    type private SingleNode(node: Dom.Node) =\n        interface IControlBody with\n            member this.ReplaceInDom(old) =\n                node.ParentNode.ReplaceChild(node, old) |> ignore\n\n    type IControlBody with\n        /// Create HTML content comprised of a single DOM node.\n        static member SingleNode (node: Dom.Node) =\n            new SingleNode(node) :> IControlBody\n\nmodule Activator =\n\n    /// The identifier of the meta tag holding the controls.\n    [<Literal>]\n    let META_ID = \"websharper-data\"\n\n    [<Direct \"typeof document !== 'undefined'\">]\n    let private hasDocument () = false\n\n    [<JavaScript>]\n    let private Activate =\n        if hasDocument () then\n            let meta = JS.Document.GetElementById(META_ID)\n            if (As meta) then\n                JQuery.Of(JS.Document).Ready(fun () ->\n                    let text = meta.GetAttribute(\"content\")\n                    let obj = Json.Activate (Json.Parse text)\n                    JS.GetFields obj\n                    |> Array.iter (fun (k, v) ->\n                        let p = (As<IControl> v).Body\n                        let old = JS.Document.GetElementById k\n                        p.ReplaceInDom old)\n                ).Ignore\n\n", "// $begin{copyright}\n//\n// This file is part of WebSharper\n//\n// Copyright (c) 2008-2015 IntelliFactory\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you\n// may not use this file except in compliance with the License.  You may\n// obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n// implied.  See the License for the specific language governing\n// permissions and limitations under the License.\n//\n// $end{copyright}\n\nnamespace WebSharper\n\nopen WebSharper.JavaScript\n\n[<Name \"Exception\">]\n[<Proxy(typeof<System.Exception>)>]\ntype private ExceptionProxy [<Direct \"new Error($message)\">] (message: string) =\n\n    [<JavaScript>]\n    new () = ExceptionProxy \"Exception of type 'System.Exception' was thrown.\"\n\n    member this.Message with [<Inline \"$this.message\">] get () = X<string>\n\n[<Proxy(typeof<MatchFailureException>)>]\n[<Name \"MatchFailureException\">]\n[<JavaScript>]\ntype private MatchFailureExceptionProxy (message: string, line: int, column: int) =\n    inherit ExceptionProxy (message + \" at \" + string line + \":\" + string column)\n\n[<Proxy(typeof<System.IndexOutOfRangeException>)>]\n[<Name \"IndexOutOfRangeException\">]\n[<JavaScript>]\ntype private IndexOutOfRangeExceptionProxy(message: string) =\n    inherit ExceptionProxy(message)\n\n    new () = IndexOutOfRangeExceptionProxy \"Index was outside the bounds of the array.\"\n\n[<Proxy(typeof<System.OperationCanceledException>)>]\n[<Name \"OperationCanceledException\">]\n[<JavaScript>]\ntype private OperationCanceledExceptionProxy(message: string) =\n    inherit ExceptionProxy(message)\n\n    new () = OperationCanceledExceptionProxy \"The operation was canceled.\"\n\n[<Proxy(typeof<System.ArgumentException>)>]\n[<Name \"ArgumentException\">]\n[<JavaScript>]\ntype private ArgumentExceptionProxy(message: string) =\n    inherit ExceptionProxy(message)\n    \n    new () = ArgumentExceptionProxy \"Value does not fall within the expected range.\"\n\n[<Proxy(typeof<System.InvalidOperationException>)>]\n[<Name \"InvalidOperationException\">]\n[<JavaScript>]\ntype private InvalidOperationExceptionProxy(message: string) =\n    inherit ExceptionProxy(message)\n    \n    new () = InvalidOperationExceptionProxy \"Operation is not valid due to the current state of the object.\"\n\n[<Proxy(typeof<System.AggregateException>)>]\n[<Name \"AggregateException\">]\n[<JavaScript>]\ntype private AggregateExceptionProxy(message: string, innerExceptions: exn[]) =\n    inherit ExceptionProxy(message)\n\n    new (innerExceptions: exn[]) = AggregateExceptionProxy(\"One or more errors occurred.\", innerExceptions)\n\n    member this.InnerExceptions \n        with [<Inline \"$this.InnerExceptions\">] get() = X<System.Collections.ObjectModel.ReadOnlyCollection<exn>>\n", "// $begin{copyright}\n//\n// This file is part of WebSharper\n//\n// Copyright (c) 2008-2015 IntelliFactory\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you\n// may not use this file except in compliance with the License.  You may\n// obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n// implied.  See the License for the specific language governing\n// permissions and limitations under the License.\n//\n// $end{copyright}\n\n[<WebSharper.Core.Attributes.Name \"Arrays\">]\n[<WebSharper.Core.Attributes.Proxy\n    \"Microsoft.FSharp.Collections.ArrayModule, \\\n     FSharp.Core, Culture=neutral, \\\n     PublicKeyToken=b03f5f7f11d50a3a\">]\nmodule private WebSharper.ArrayModuleProxy\n\nopen WebSharper.JavaScript\nopen WebSharper.CollectionInternals\n\nmodule F = WebSharper.IntrinsicFunctionProxy\n\n[<JavaScript>]\nlet checkLength (arr1: 'T1[]) (arr2: 'T2[]) =\n    if Array.length arr1 <> Array.length arr2 then\n        failwith \"Arrays differ in length.\"\n\n[<Inline \"$x.push($y)\">]\nlet push (x: obj) (y: obj) = ()\n\n[<Inline \"$arr1.concat($arr2)\">]\nlet Append<'T> (arr1: 'T []) (arr2: 'T []) : 'T [] = arr1\n\n[<JavaScript>]\n[<Name \"average\">]\nlet inline Average (arr: 'T []): 'T = As (float (Array.sum arr) / float (Array.length arr))\n\n[<JavaScript>]\n[<Name \"averageBy\">]\nlet inline AverageBy (f: 'T -> 'U) (arr: 'T []) : 'U = As (float (Array.sumBy f arr) / float (Array.length arr))\n\n[<JavaScript>]\n[<Name \"blit\">]\nlet CopyTo<'T> (arr1: 'T [], start1, arr2: 'T [], start2, length) =\n    F.checkRange arr1 start1 length\n    F.checkRange arr2 start2 length\n    for i = 0 to length - 1 do\n        arr2.[start2 + i] <- arr1.[start1 + i]\n\n[<JavaScript>]\n[<Name \"choose\">]\nlet Choose<'T,'U> (f: 'T -> option<'U>) (arr: 'T []) : 'U [] =\n    let q : 'U [] = [||]\n    for i = 0 to Array.length arr - 1 do\n        match f arr.[i] with\n        | Some x -> push q x\n        | None   -> ()\n    q\n\n[<Inline \"Array.prototype.concat.apply([], $x)\">]\nlet concatArray (x: 'T[][]) = X<'T[]>\n\n[<JavaScript>]\n[<Name \"collect\">]\nlet Collect<'T,'U> (f: 'T -> 'U[]) (x: 'T []) : 'U[] =\n    concatArray (Array.map f x)\n\n[<JavaScript>]\n[<Name \"concat\">]\nlet Concat<'T> (xs: seq<'T []>) : 'T [] =\n    concatArray (Array.ofSeq xs)\n\n[<JavaScript>]\n[<Inline>]\nlet SplitInto count (arr: 'T[]) = ArraySplitInto count arr\n\n[<Inline \"$x.slice()\">]\nlet Copy (x: 'T []) = X<'T []>\n\n[<JavaScript>]\n[<Name \"create\">]\nlet Create size value =\n    let r = Array.zeroCreate size\n    for i = 0 to size - 1 do\n        r.[i] <- value\n    r\n\n[<Inline \"[]\">]\nlet Empty () = X<'T []>\n\n[<Inline>]\n[<JavaScript>]\nlet Exists<'T> (f: 'T -> bool) (arr: 'T []) = Seq.exists f arr\n\n[<JavaScript>]\n[<Name \"exists2\">]\nlet Exists2 f (arr1: _ []) (arr2: _ []) =\n    checkLength arr1 arr2\n    Seq.exists2 f arr1 arr2\n\n[<JavaScript>]\n[<Name \"fill\">]\nlet Fill<'T> (arr: 'T []) (start: int) (length: int) (value: 'T) =\n    F.checkRange arr start length\n    for i = start to start + length - 1 do\n        arr.[i] <- value\n\n[<JavaScript>]\n[<Name \"filter\">]\nlet Filter<'T> f (arr: 'T []) : 'T [] =\n    let r : 'T [] = [||]\n    for i = 0 to Array.length arr - 1 do\n        if f arr.[i] then\n            push r arr.[i]\n    r\n\n[<JavaScript>]\n[<Name \"find\">]\nlet Find f (arr: _ []) =\n    match Array.tryFind f arr with\n    | Some x -> x\n    | None   -> failwith \"KeyNotFoundException\"\n\n[<JavaScript>]\n[<Name \"findINdex\">]\nlet FindIndex f (arr: _ []) =\n    match Array.tryFindIndex f arr with\n    | Some x -> x\n    | None   -> failwith \"KeyNotFoundException\"\n\n[<JavaScript>]\n[<Name \"fold\">]\nlet Fold<'T,'S> (f: 'S -> 'T -> 'S) (zero: 'S) (arr: 'T []) : 'S =\n    let mutable acc = zero\n    for i = 0 to Array.length arr - 1 do\n        acc <- f acc arr.[i]\n    acc\n\n[<JavaScript>]\n[<Name \"fold2\">]\nlet Fold2<'T1,'T2,'S> f (zero: 'S) (arr1: 'T1 []) (arr2: 'T2 []) : 'S =\n    checkLength arr1 arr2\n    let mutable accum = zero\n    for i in 0 .. Array.length arr1 - 1 do\n        accum <- f accum arr1.[i] arr2.[i]\n    accum\n\n[<JavaScript>]\n[<Name \"foldBack\">]\nlet FoldBack f (arr: _ []) zero =\n    let mutable acc = zero\n    let len = Array.length arr\n    for i = 1 to len do\n        acc <- f arr.[len - i] acc\n    acc\n\n[<JavaScript>]\n[<Name \"foldBack2\">]\nlet FoldBack2 f (arr1: _ []) (arr2: _ []) zero =\n    checkLength arr1 arr2\n    let len = Array.length arr1\n    let mutable accum = zero\n    for i in 1 .. len do\n        accum <- f arr1.[len - i] arr2.[len - i] accum\n    accum\n\n[<Inline>]\n[<JavaScript>]\nlet ForAll f (arr: _ []) = Seq.forall f arr\n\n[<JavaScript>]\n[<Name \"forall2\">]\nlet ForAll2 f (arr1: _ []) (arr2: _ []) =\n    checkLength arr1 arr2\n    Seq.forall2 f arr1 arr2\n\n[<Inline>]\n[<JavaScript>]\nlet Get (arr: _ []) index =\n    F.GetArray arr index\n\n[<Inline>]\n[<JavaScript>]\nlet Item index (arr: _ []) =\n    F.GetArray arr index\n\n[<JavaScript>]\n[<Name \"init\">]\nlet Initialize size f =\n    if size < 0 then\n        failwith \"Negative size given.\"\n    let r = Array.zeroCreate size\n    for i = 0 to size - 1 do\n        r.[i] <- f i\n    r\n\n[<Inline \"$arr.length == 0\">]\nlet IsEmpty (arr: _ []) = X<bool>\n\n[<JavaScript>]\n[<Name \"iter\">]\nlet Iterate f (arr: 'T []) =\n    for i = 0 to Array.length arr - 1 do\n        f arr.[i]\n\n[<JavaScript>]\n[<Name \"iter2\">]\nlet Iterate2 f (arr1: _ []) (arr2: _ []) =\n    checkLength arr1 arr2\n    for i = 0 to Array.length arr1 - 1 do\n        f arr1.[i] arr2.[i]\n\n[<JavaScript>]\n[<Name \"iteri\">]\nlet IterateIndexed f (arr: 'T []) =\n    for i = 0 to Array.length arr - 1 do\n        f i arr.[i]\n\n[<JavaScript>]\n[<Name \"iteri2\">]\nlet IterateIndexed2 f (arr1: _ []) (arr2: _ []) =\n    checkLength arr1 arr2\n    for i = 0 to Array.length arr1 - 1 do\n        f i arr1.[i] arr2.[i]\n\n[<Inline \"$arr.length\">]\nlet Length<'T> (arr: 'T []) = X<int>\n\n[<JavaScript>]\n[<Name \"map\">]\nlet Map<'T1,'T2> (f: 'T1 -> 'T2) (arr: 'T1 []) : 'T2 [] =\n    let r = Array.zeroCreate<'T2>(Array.length arr)\n    for i = 0 to Array.length arr - 1 do\n        r.[i] <- f arr.[i]\n    r\n\n[<JavaScript>]\n[<Name \"map2\">]\nlet Map2 (f: 'T1 -> 'T2 -> 'T3) (arr1: 'T1 []) (arr2: 'T2 []) : 'T3 [] =\n    checkLength arr1 arr2\n    let r = Array.zeroCreate<'T3>(Array.length arr2)\n    for i = 0 to Array.length arr2 - 1 do\n        r.[i] <- f arr1.[i] arr2.[i]\n    r\n\n[<JavaScript>]\n[<Name \"mapi\">]\nlet MapIndexed f (arr: _ []) =\n    let y = Array.zeroCreate(Array.length arr)\n    for i = 0 to Array.length arr - 1 do\n        y.[i] <- f i arr.[i]\n    y\n\n[<JavaScript>]\n[<Name \"mapi2\">]\nlet MapIndexed2 f (arr1: 'T1 []) (arr2: 'T2 []): 'U[] =\n    checkLength arr1 arr2\n    let res = Array.zeroCreate(Array.length arr1)\n    for i = 0 to Array.length arr1 - 1 do\n        res.[i] <- f i arr1.[i] arr2.[i]\n    res\n\n[<JavaScript>]\n[<Inline>]\nlet MapFold f zero arr = ArrayMapFold f zero arr\n\n[<JavaScript>]\n[<Inline>]\nlet MapFoldBack f arr zero = ArrayMapFoldBack f arr zero\n\n[<JavaScript>]\n[<Name \"max\">]\nlet Max x = Array.reduce max x\n\n[<JavaScript>]\n[<Name \"maxBy\">]\nlet MaxBy (f, arr) =\n    Array.reduce (fun x y -> if f x > f y then x else y) arr\n\n[<JavaScript>]\n[<Name \"min\">]\nlet Min x = Array.reduce min x\n\n[<JavaScript>]\n[<Name \"minBy\">]\nlet MinBy f arr =\n    Array.reduce (fun x y -> if f x < f y then x else y) arr\n\n[<Inline>]\n[<JavaScript>]\nlet OfList<'T> (xs: list<'T>) = Array.ofSeq xs\n\n[<JavaScript>]\n[<Name \"ofSeq\">]\nlet OfSeq<'T> (xs: seq<'T>) : 'T [] =\n    let q : 'T [] = [||]\n    use enum = Enumerator.Get xs\n    while enum.MoveNext() do\n        push q enum.Current\n    q\n\n[<JavaScript>]\n[<Name \"partition\">]\nlet Partition f (arr: 'T []) : 'T [] * 'T [] =\n    let ret1 : 'T [] = [||]\n    let ret2 : 'T [] = [||]\n    for i = 0 to Array.length arr - 1 do\n        if f arr.[i] then\n            push ret1 arr.[i]\n        else\n            push ret2 arr.[i]\n    (ret1, ret2)\n\n[<JavaScript>]\n[<Name \"permute\">]\nlet Permute f (arr: 'T []) =\n    let ret = Array.zeroCreate (Array.length arr)\n    for i = 0 to Array.length arr - 1 do\n        ret.[f i] <- arr.[i]\n    ret\n\n[<JavaScript>]\n[<Name \"pick\">]\nlet Pick f (arr: _ []) =\n    match Array.tryPick f arr with\n    | Some x -> x\n    | None   -> failwith \"KeyNotFoundException\"\n\n[<JavaScript>]\nlet private nonEmpty (arr: _ []) =\n    if Array.length arr = 0 then\n        failwith \"The input array was empty.\"\n\n[<JavaScript>]\n[<Name \"reduce\">]\nlet Reduce f (arr: _ []) =\n    nonEmpty arr\n    let mutable acc = arr.[0]\n    for i = 1 to Array.length arr - 1 do\n        acc <- f acc arr.[i]\n    acc\n\n[<JavaScript>]\n[<Name \"reduceBack\">]\nlet ReduceBack f (arr: _ []) =\n    nonEmpty arr\n    let len = Array.length arr\n    let mutable acc = arr.[len - 1]\n    for i = 2 to len do\n        acc <- f arr.[len - i] acc\n    acc\n\n[<Inline \"$x.slice().reverse()\">]\n[<Name \"rev\">]\nlet Reverse (x: 'T []) = X<'T []>\n\n[<JavaScript>]\n[<Name \"scan\">]\nlet Scan<'T,'S> (f: 'S -> 'T -> 'S) (zero: 'S) (arr: 'T []) : 'S [] =\n    let ret = Array.zeroCreate (1 + Array.length arr)\n    ret.[0] <- zero\n    for i = 0 to Array.length arr - 1 do\n        ret.[i + 1] <- f ret.[i] arr.[i]\n    ret\n\n[<JavaScript>]\n[<Name \"scanBack\">]\nlet ScanBack (f: 'T -> 'S -> 'S) (arr: 'T []) (zero: 'S) : 'S [] =\n    let len = Array.length arr\n    let ret = Array.zeroCreate (1 + len)\n    ret.[len] <- zero\n    for i = 0 to len - 1 do\n        ret.[len - i - 1] <- f arr.[len - i - 1] ret.[len - i]\n    ret\n\n[<Inline>]\n[<JavaScript>]\nlet Set (arr: _ []) i v =\n    F.SetArray arr i v\n\n[<Inline \"$x.sort($wsruntime.CreateFuncWithArgs($f))\">]\nlet private sortArray (x: 'T[]) (f: 'T * 'T -> int) = X<'T[]>\n\n[<JavaScript>]\n[<Name \"sort\">]\nlet Sort<'T when 'T: comparison> (arr: 'T []) : 'T [] =\n    Array.sortBy id arr\n\n[<JavaScript>]\n[<Name \"sortBy\">]\nlet SortBy<'T,'U when 'U: comparison> (f: 'T -> 'U) (arr: 'T []) : 'T [] =\n    sortArray (Array.copy arr) (fun (x, y) -> compare (f x) (f y))\n\n[<JavaScript>]\n[<Name \"sortInPlace\">]\nlet SortInPlace<'T when 'T: comparison> (arr: 'T []) =\n    Array.sortInPlaceBy id arr\n\n[<JavaScript>]\n[<Name \"sortInPlaceBy\">]\nlet SortInPlaceBy<'T,'U when 'U: comparison> (f: 'T -> 'U) (arr: 'T []) =\n    As<unit> (sortArray arr (fun (x, y) -> compare (f x) (f y)))\n\n[<JavaScript>]\n[<Name \"sortInPlaceWith\">]\nlet SortInPlaceWith<'T> (comparer: 'T -> 'T -> int) (arr: 'T []) =\n    As<unit> (sortArray arr (fun (x, y) -> comparer x y))\n\n[<JavaScript>]\n[<Name \"sortWith\">]\nlet SortWith<'T> (comparer: 'T -> 'T -> int) (arr: 'T []) : 'T [] =\n    sortArray (Array.copy arr) (fun (x, y) -> comparer x y)\n\n[<JavaScript>]\n[<Name \"sortByDescending\">]\nlet SortByDescending<'T,'U when 'U: comparison> (f: 'T -> 'U) (arr: 'T []) : 'T [] =\n    sortArray (Array.copy arr) (fun (x, y) -> - compare (f x) (f y))\n\n[<JavaScript>]\n[<Name \"sortDescending\">]\nlet SortDescending<'T when 'T: comparison> (arr: 'T []) : 'T [] =\n    SortByDescending id arr\n\n[<Inline \"$x.slice($start,$start+$length)\">]\nlet private subArray (x: 'T) start length = X<'T>\n\n[<Inline>]\n[<JavaScript>]\nlet GetSubArray (arr: 'T []) (start: int) (length: int) : 'T []=\n    F.GetArraySub arr start length\n\n[<Direct \"var sum = 0; for (var i = 0; i < $arr.length; i++) sum += $arr[i]; return sum\">]\n[<Name \"sum\">]\nlet Sum (arr: 'T []) : 'T = X<'T>\n\n[<Direct \"var sum = 0; for (var i = 0; i < $arr.length; i++) sum += $f($arr[i]); return sum\">]\n[<Name \"sumBy\">]\nlet SumBy (f: 'T -> 'U) (arr: 'T []) : 'U =  X<'U>\n\n[<JavaScript>]\n[<Inline>]\nlet ToList arr = List.ofArray arr\n\n[<Inline \"$arr\">]\nlet ToSeq (arr: _ []) = arr :> seq<_>\n\n[<JavaScript>]\n[<Name \"tryFind\">]\nlet TryFind f (arr: _ []) =\n    let mutable res = None\n    let mutable i = 0\n    while i < Array.length arr && Option.isNone res do\n        if f arr.[i] then res <- Some arr.[i]\n        i <- i + 1\n    res\n\n[<JavaScript>]\n[<Inline>]\nlet TryFindBack f (arr: _ []) = ArrayTryFindBack f arr\n\n[<JavaScript>]\n[<Name \"tryFindIndex\">]\nlet TryFindIndex f (arr: _ []) =\n    let mutable res = None\n    let mutable i = 0\n    while i < Array.length arr && Option.isNone res do\n        if f arr.[i] then res <- Some i\n        i <- i + 1\n    res\n\n[<JavaScript>]\n[<Inline>]\nlet TryFindIndexBack f (arr: _ []) = ArrayTryFindIndexBack f arr\n\n[<JavaScript>]\n[<Name \"tryHead\">]\nlet TryHead (arr: 'T[]) =\n    if arr.Length = 0 then None else Some arr.JS.[0]\n\n[<JavaScript>]\n[<Name \"tryItem\">]\nlet TryItem i (arr: 'T[]) =\n    if arr.Length <= i || i < 0 then None else Some arr.JS.[i]\n\n[<JavaScript>]\n[<Name \"tryLast\">]\nlet TryLast (arr: 'T[]) =\n    let len = arr.Length\n    if len = 0 then None else Some arr.JS.[len - 1]\n\n[<JavaScript>]\n[<Name \"tryPick\">]\nlet TryPick f (arr: _ []) =\n    let mutable res = None\n    let mutable i = 0\n    while i < Array.length arr && Option.isNone res do\n        match f arr.[i] with\n        | Some _ as r -> res <- r\n        | _ -> ()\n        i <- i + 1\n    res\n\n[<JavaScript>]\n[<Name \"unzip\">]\nlet Unzip<'T1,'T2> (arr: ('T1 * 'T2) []) : 'T1 [] * 'T2 [] =\n    let x : 'T1 [] = [||]\n    let y : 'T2 [] = [||]\n    for i = 0 to Array.length arr - 1 do\n        let (a, b) = arr.[i]\n        push x a\n        push y b\n    (x, y)\n\n[<JavaScript>]\n[<Name \"unzip3\">]\nlet Unzip3<'T1,'T2,'T3> (arr: ('T1 * 'T2 * 'T3) []) =\n    let x : 'T1 [] = [||]\n    let y : 'T2 [] = [||]\n    let z : 'T3 [] = [||]\n    for i = 0 to Array.length arr - 1 do\n        match arr.[i] with\n        | (a, b, c) ->\n            push x a\n            push y b\n            push z c\n    (x, y, z)\n\n[<Inline \"Array($size)\">]\n[<Name \"zeroCreate\">]\nlet ZeroCreate (size: int) = X<'T []>\n\n[<JavaScript>]\n[<Name \"zip\">]\nlet Zip (arr1: 'T1 []) (arr2: 'T2 []) =\n    checkLength arr1 arr2\n    let res = Array.zeroCreate (Array.length arr1)\n    for i = 0 to Array.length arr1 - 1 do\n        res.[i] <- (arr1.[i], arr2.[i])\n    res\n\n[<JavaScript>]\n[<Name \"zip3\">]\nlet Zip3 (arr1: _ [], arr2: _ [], arr3: _ []) =\n    checkLength arr1 arr2\n    checkLength arr2 arr3\n    let res = Array.zeroCreate (Array.length arr1)\n    for i = 0 to Array.length arr1 - 1 do\n        res.[i] <- (arr1.[i], arr2.[i], arr3.[i])\n    res\n        \n[<JavaScript>]\n[<Name \"chunkBySize\">]\nlet ChunkBySize size array =\n    SeqChunkBySize size (Array.toSeq array)\n    |> Seq.toArray\n    \n[<JavaScript>]\n[<Name \"compareWith\">]\nlet CompareWith  (f: 'T -> 'T -> int) (a1: 'T []) (a2: 'T []) : int =\n    SeqCompareWith f (Array.toSeq a1) (Array.toSeq a2)\n        \n[<JavaScript>]\n[<Name \"countBy\">]\nlet CountBy (f: 'T -> 'K) (a: 'T []) : ('K * int) [] =\n    SeqCountBy f (Array.toSeq a)\n    |> Seq.toArray\n\n[<JavaScript>]\n[<Name \"distinct\">]\nlet Distinct<'T when 'T : equality> (l: 'T []) : 'T [] =\n    SeqDistinct (Array.toSeq l)\n    |> Seq.toArray\n\n[<JavaScript>]\n[<Name \"distinctBy\">]\nlet DistinctBy<'T,'K when 'K : equality>\n        (f: 'T -> 'K) (a: 'T []) : 'T [] =\n    SeqDistinctBy f (Array.toSeq a)\n    |> Seq.toArray\n\n[<JavaScript>]\n[<Name \"except\">]\nlet Except (itemsToExclude: seq<'T>) (a: 'T []) =\n    SeqExcept itemsToExclude (Array.toSeq a)\n    |> Seq.toArray\n\n[<JavaScript>]\n[<Name \"findBack\">]\nlet FindBack p (s: _ []) =\n    match TryFindBack p s with\n    | Some x -> x\n    | None   -> failwith \"KeyNotFoundException\"\n\n[<JavaScript>]\n[<Name \"findIndexBack\">]\nlet FindIndexBack p (s: _ []) =\n    match TryFindIndexBack p s with\n    | Some x -> x\n    | None   -> failwith \"KeyNotFoundException\"\n\n[<JavaScript>]\n[<Name \"groupBy\">]\nlet GroupBy (f: 'T -> 'K when 'K : equality)\n            (a: 'T []) : ('K * 'T []) [] =\n    SeqGroupBy f (Array.toSeq a)\n    |> Seq.toArray\n    |> Array.map (fun (k, s) ->\n        (k, Seq.toArray s)\n    )\n\n[<JavaScript>]\n[<Name \"head\">]\nlet Head (ar : 'T []) : 'T =\n    List.head (Array.toList ar)\n\n[<JavaScript>]\n[<Name \"last\">]\nlet Last (ar : 'T []) : 'T =\n    SeqLast (Array.toSeq ar)\n\n[<JavaScript>]\n[<Name \"map3\">]\nlet Map3 f (l1: _ []) (l2: _ []) (l3: _ []) =\n    ListMap3 f (Array.toList l1) (Array.toList l2) (Array.toList l3)\n    |> List.toArray\n\n[<JavaScript>]\n[<Name \"contains\">]\nlet Contains (el: 'T) (a: 'T []) =\n    SeqContains el (Array.toSeq a)\n\n[<JavaScript>]\n[<Name \"pairwise\">]\nlet Pairwise (a: 'T []) : ('T * 'T) [] =\n    SeqPairwise (Array.toSeq a)\n    |> Seq.toArray\n\n[<JavaScript>]\n[<Name \"replicate\">]\nlet Replicate size value =\n    Array.create size value\n\n[<JavaScript>]\n[<Name \"indexed\">]\nlet Indexed (ar : 'T []) : (int * 'T) [] =\n    Array.mapi (fun a b -> (a, b)) ar\n\n[<JavaScript>]\n[<Inline>]\nlet Singleton<'T> (x: 'T) =\n    [| x |]\n\n[<JavaScript>]\n[<Name \"skip\">]\nlet Skip<'T> i (ar : 'T []) =\n    if i < 0 then InputMustBeNonNegative() else\n    if i > ar.Length then InsufficientElements() else\n    ar.JS.Slice(i)\n\n[<JavaScript>]\n[<Name \"skipWhile\">]\nlet SkipWhile<'T> (predicate : 'T -> bool) (ar : 'T []) : 'T [] =\n    let len = ar.Length\n    let mutable i = 0\n    while i < len && predicate ar.[i] do\n        i <- i + 1\n    ar.JS.Slice(i)\n\n[<JavaScript>]\n[<Name \"tail\">]\nlet Tail<'T> (ar : 'T []) : 'T [] =\n    Skip 1 ar\n\n[<JavaScript>]\n[<Name \"take\">]\nlet Take<'T> n (ar: 'T []) =\n    if n < 0 then InputMustBeNonNegative() else\n    if n > ar.Length then InsufficientElements() else\n    ar.JS.Slice(0, n)\n\n[<JavaScript>]\n[<Name \"takeWhile\">]\nlet TakeWhile<'T> (predicate : 'T -> bool) (ar: 'T []) =\n    let len = ar.Length\n    let mutable i = 0\n    while i < len && predicate ar.[i] do\n        i <- i + 1\n    ar.JS.Slice(0, i)\n\n[<JavaScript>]\n[<Name \"truncate\">]\nlet Truncate<'T> n (ar: 'T []) =\n    ar.JS.Slice(n)\n\n[<JavaScript>]\n[<Name \"exactlyOne\">]\nlet ExactlyOne (ar : 'T []) =\n    if ar.Length = 1 then\n        ar.[0]\n    else\n        failwith \"The input does not have precisely one element.\"\n\n[<JavaScript>]\n[<Name \"unfold\">]\nlet Unfold (f: 'S -> option<'T * 'S>) (s: 'S) : 'T [] =\n    SeqUnfold f s\n    |> Seq.toArray\n\n[<JavaScript>]\n[<Inline>]\nlet Where (predicate : 'T -> bool) (s : 'T []) : 'T [] =\n    Filter predicate s\n\n[<JavaScript>]\n[<Name \"windowed\">]\nlet Windowed (windowSize: int) (s: 'T []) : array<'T []> =\n    SeqWindowed windowSize (Array.toSeq s)\n    |> Seq.toArray\n\n[<JavaScript>]\n[<Name \"splitAt\">]\nlet SplitAt (n: int) (ar: 'T []) =\n    Take n ar, Skip n ar\n", "// $begin{copyright}\n//\n// This file is part of WebSharper\n//\n// Copyright (c) 2008-2015 IntelliFactory\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you\n// may not use this file except in compliance with the License.  You may\n// obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n// implied.  See the License for the specific language governing\n// permissions and limitations under the License.\n//\n// $end{copyright}\n\n[<WebSharper.Core.Attributes.Proxy\n    \"Microsoft.FSharp.Core.LanguagePrimitives+IntrinsicFunctions, \\\n     FSharp.Core, Culture=neutral, \\\n     PublicKeyToken=b03f5f7f11d50a3a\">]\nmodule private WebSharper.IntrinsicFunctionProxy\n\nopen System\nopen WebSharper.JavaScript\n\n[<Inline \"$value\">]\nlet UnboxGeneric<'T> (value: obj) = X<'T>\n\n[<Inline \"$arr.length\">]\nlet GetArray2DLength1 (arr: 'T[,]) = X<int>\n\n[<Inline \"$arr.length ? $arr[0].length : 0\">]\nlet GetArray2DLength2 (arr: 'T[,]) =  X<int>\n\n[<JavaScript>]\n[<Name \"WebSharper.Arrays.checkBounds\">]\nlet checkBounds (arr: 'T[]) (n: int) =\n    if n < 0 || n >= Array.length arr then\n        failwith \"Index was outside the bounds of the array.\"\n\n[<JavaScript>]\n[<Name \"WebSharper.Arrays.checkBounds2D\">]\nlet checkBounds2D<'T> (arr: 'T[,]) (n1: int) (n2: int) =\n    if n1 < 0 || n2 < 0 || n1 >= GetArray2DLength1 arr\n        || n2 >= GetArray2DLength2 arr then\n        raise (new IndexOutOfRangeException())\n\n[<Name \"WebSharper.Arrays.checkRange\">]\n[<JavaScript>]\nlet checkRange (arr: 'T []) (start: int) (size: int) : unit =\n    if (size < 0) || (start < 0) || (Array.length arr < start + size) then\n        failwith \"Index was outside the bounds of the array.\"\n\n[<Inline \"$arr[$n]\">]\nlet GetArrayInternal<'T> (arr: 'T[]) (n:int) = X<'T>\n\n[<Inline \"void ($arr[$n] = $x)\">]\nlet SetArrayInternal<'T> (arr: 'T[]) (n:int) (x:'T) = ()\n\n[<JavaScript>]\n[<Name \"WebSharper.Arrays.set\">]\nlet SetArray<'T> (arr: 'T[]) (n: int) (x: 'T) =\n    checkBounds arr n\n    SetArrayInternal arr n x\n\n[<Inline \"$s.charCodeAt($ix)\">]\n[<Name \"WebSharper.Strings.get\">]\nlet GetString (s: string) (ix: int) = X<char>\n\n[<JavaScript>]\n[<Name \"WebSharper.Arrays.get\">]\nlet GetArray<'T> (arr: 'T[]) (n: int) =\n    checkBounds arr n\n    GetArrayInternal arr n\n\n[<Inline \"$x.slice($start,$start+$length)\">]\nlet private subArray (x: 'T) start length = X<'T>\n\n[<JavaScript>]\n[<Name \"WebSharper.Arrays.sub\">]\nlet GetArraySub<'T> (arr: 'T[]) start length =\n    checkRange arr start length\n    subArray arr start length\n\n[<JavaScript>]\n[<Name \"WebSharper.Arrays.setSub\" >]\nlet SetArraySub<'T> (arr: 'T[]) start len (src: 'T[]) =\n    for i = 0 to len - 1 do\n        arr.[start+i] <- src.[i]\n\n[<Inline \"$arr[$n1][$n2]\">]\nlet GetArray2DInternal (arr: 'T[,]) (n1:int) (n2:int) = X<'T>\n\n[<JavaScript>]\n[<Name \"WebSharper.Arrays.get2D\" >]\nlet GetArray2D (arr: 'T[,]) (n1: int) (n2: int) =\n    checkBounds2D arr n1 n2\n    GetArray2DInternal arr n1 n2\n\n[<Inline \"void ($arr[$n1][$n2] = $x)\">]\nlet SetArray2DInternal (arr: 'T[,]) (n1:int) (n2:int) (x:'T) = ()\n\n[<JavaScript>]\n[<Name \"WebSharper.Arrays.set2D\" >]\nlet SetArray2D (arr: 'T[,]) (n1: int) (n2: int) (x: 'T) =\n    checkBounds2D arr n1 n2\n    SetArray2DInternal arr n1 n2 x\n\n[<JavaScript>]\n[<Name \"WebSharper.Arrays.zeroCreate2D\" >]\nlet Array2DZeroCreate<'T> (n:int) (m:int) =\n    let arr = As<'T[,]>(Array.init n (fun _ -> Array.zeroCreate m))\n    arr?dims <- 2\n    arr\n\n[<JavaScript>]\n[<Name \"WebSharper.Arrays.sub2D\" >]\nlet GetArray2DSub<'T> (src: 'T[,]) src1 src2 len1 len2 =\n    let len1 = (if len1 < 0 then 0 else len1)\n    let len2 = (if len2 < 0 then 0 else len2)\n    let dst = Array2DZeroCreate len1 len2\n    for i = 0 to len1 - 1 do\n        for j = 0 to len2 - 1 do\n            dst.[i,j] <- src.[src1 + i, src2 + j]\n    dst\n\n[<JavaScript>]\n[<Name \"WebSharper.Arrays.setSub2D\" >]\nlet SetArray2DSub<'T> (dst: 'T[,]) src1 src2 len1 len2 (src: 'T[,]) =\n    for i = 0 to len1 - 1 do\n        for j = 0 to len2 - 1 do\n            dst.[src1+i, src2+j] <- src.[i, j]\n\n[<JavaScript>]\n[<Name \"WebSharper.Arrays.length\" >]\nlet GetLength<'T> (arr: System.Array) =\n    match arr?dims with\n    | 2 -> GetArray2DLength1 (As arr) * GetArray2DLength1 (As arr)\n    | _ -> Array.length (As arr)\n", "// $begin{copyright}\n//\n// This file is part of WebSharper\n//\n// Copyright (c) 2008-2015 IntelliFactory\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you\n// may not use this file except in compliance with the License.  You may\n// obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n// implied.  See the License for the specific language governing\n// permissions and limitations under the License.\n//\n// $end{copyright}\n\n[<WebSharper.Core.Attributes.Proxy\n    \"Microsoft.FSharp.Core.ExtraTopLevelOperators, \\\n     FSharp.Core, Culture=neutral, \\\n     PublicKeyToken=b03f5f7f11d50a3a\">]\nmodule private WebSharper.ExtraTopLevelOperatorsProxy\n\nopen WebSharper.JavaScript\nmodule M = WebSharper.Macro\n\n[<Inline \"null\">]\nlet DefaultAsyncBuilder : Control.AsyncBuilder =\n    As (AsyncBuilderProxy())\n\n[<JavaScript>]\n[<Name \"WebSharper.Arrays.create2D\" >]\nlet CreateArray2D (rows : seq<#seq<'T>>) =\n    let arr = rows |> Seq.map (Array.ofSeq) |> Array.ofSeq |> As<'T[,]>\n    arr?dims <- 2\n    arr\n\n[<Inline \"+$0\">]\nlet ToDouble<'T> (x: 'T) : double = X\n\n[<Inline \"$f(function(x){return x;})\">]\nlet PrintFormatToString (f: Printf.StringFormat<'T>) = X<'T>\n\n[<Inline; JavaScript>]\nlet PrintFormatToStringThen k f = Printf.ksprintf k f \n\n[<Inline; JavaScript>]\nlet PrintFormatLine f = Printf.printfn f \n\n[<Inline; JavaScript>]\nlet PrintFormatToStringThenFail f = Printf.failwithf f \n", "// $begin{copyright}\n//\n// This file is part of WebSharper\n//\n// Copyright (c) 2008-2015 IntelliFactory\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you\n// may not use this file except in compliance with the License.  You may\n// obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n// implied.  See the License for the specific language governing\n// permissions and limitations under the License.\n//\n// $end{copyright}\n\nnamespace WebSharper\n\nopen WebSharper.JavaScript\nmodule F = WebSharper.IntrinsicFunctionProxy\n\n[<Proxy(typeof<System.Array>)>]\ntype private ArrayProxy =\n\n    [<Inline \"$array.reverse()\">]\n    static member Reverse(array: System.Array) = X<unit>\n\n    [<JavaScript>]\n    [<Name \"WebSharper.Arrays.reverse\">]\n    static member Reverse(array: System.Array, offset: int, length: int) =\n        let a = Array.rev (Array.sub (As array) offset length)\n        Array.blit a 0 (As array) offset a.Length\n\n    member this.Length\n        with [<Inline; JavaScript>] get() = F.GetLength (As this)            \n", "// $begin{copyright}\n//\n// This file is part of WebSharper\n//\n// Copyright (c) 2008-2015 IntelliFactory\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you\n// may not use this file except in compliance with the License.  You may\n// obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n// implied.  See the License for the specific language governing\n// permissions and limitations under the License.\n//\n// $end{copyright}\n\n[<WebSharper.Core.Attributes.Name \"Arrays2D\">]\n[<WebSharper.Core.Attributes.Proxy\n    \"Microsoft.FSharp.Collections.Array2DModule, \\\n     FSharp.Core, Culture=neutral, \\\n     PublicKeyToken=b03f5f7f11d50a3a\">]\nmodule private WebSharper.Array2DModuleProxy\n\nopen WebSharper.JavaScript\nmodule F = WebSharper.IntrinsicFunctionProxy\n\n[<JavaScript>]\n[<Inline>]\nlet Length1 (arr: 'T[,]) = F.GetArray2DLength1 arr\n\n[<Inline>]\n[<JavaScript>]\nlet Length2 (arr: 'T[,]) = F.GetArray2DLength2 arr\n\n[<Inline>]\n[<JavaScript>]\nlet Get (array: 'T[,]) (n:int) (m:int) = F.GetArray2D array n m\n\n[<Inline>]\n[<JavaScript>]\nlet Set (array: 'T[,]) (n:int) (m:int) (x:'T) = F.SetArray2D array n m x\n\n[<JavaScript>]\n[<Inline>]\nlet ZeroCreate (n:int) (m:int) = F.Array2DZeroCreate n m\n    \n[<Inline>]\n[<JavaScript>]\nlet Create n m (x:'T) =\n    let arr = As<'T[,]>(Array.init n (fun _ -> Array.create m x))\n    arr?dims <- 2\n    arr\n     \n[<JavaScript>]\n[<Name \"init\">]\nlet Initialize n m f = \n    let array = ZeroCreate n m : 'T[,]  \n    for i = 0 to n - 1 do \n        for j = 0 to m - 1 do \n            array.[i, j] <- f i j\n    array\n\n[<JavaScript>]\n[<Name \"iter\">]\nlet Iterate f array = \n    let count1 = F.GetArray2DLength1 array \n    let count2 = F.GetArray2DLength2 array \n    for i = 0 to count1 - 1 do \n      for j = 0 to count2 - 1 do \n        f array.[i,j]\n\n[<JavaScript>]\n[<Name \"iteri\">]\nlet IterateIndexed (f : int -> int -> 'T -> unit) (array:'T[,]) =\n    let count1 = F.GetArray2DLength1 array \n    let count2 = F.GetArray2DLength2 array \n    for i = 0 to count1 - 1 do \n      for j = 0 to count2 - 1 do \n        f i j array.[i,j]\n\n[<JavaScript>]\n[<Name \"map\">]\nlet Map f array = \n    Initialize (F.GetArray2DLength1 array) (F.GetArray2DLength2 array) (fun i j -> f array.[i,j])\n\n[<JavaScript>]\n[<Name \"mapi\">]\nlet MapIndexed f array = \n    Initialize (F.GetArray2DLength1 array) (F.GetArray2DLength2 array) (fun i j -> f i j array.[i,j])\n\n[<JavaScript>]\n[<Name \"copy\">]\nlet Copy array = \n    Initialize (F.GetArray2DLength1 array) (F.GetArray2DLength2 array) (fun i j -> array.[i,j])\n", "// $begin{copyright}\n//\n// This file is part of WebSharper\n//\n// Copyright (c) 2008-2015 IntelliFactory\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you\n// may not use this file except in compliance with the License.  You may\n// obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n// implied.  See the License for the specific language governing\n// permissions and limitations under the License.\n//\n// $end{copyright}\n\nnamespace WebSharper\n\nopen WebSharper.JavaScript\n\ntype private CT  = System.Threading.CancellationToken\ntype private CTS  = System.Threading.CancellationTokenSource\ntype private CTR  = System.Threading.CancellationTokenRegistration\ntype private OCE = System.OperationCanceledException\nmodule C = WebSharper.Concurrency\n\n[<Proxy(typeof<Async>)>]\ntype private AsyncProxy =\n\n    [<Inline>]\n    [<JavaScript>]\n    static member Catch(a: Async<'T>) : Async<Choice<'T,exn>>  =\n        As (C.Catch (As a))\n\n    [<Inline>]\n    [<JavaScript>]\n    static member Start(computation: Async<unit>, ?t: CT) : unit =\n        C.Start (As computation, As t)\n\n    [<Inline>]\n    [<JavaScript>]\n    static member Ignore (computation: Async<'T>) : Async<unit> =\n        As (C.Ignore (As computation))\n\n    [<Inline>]\n    [<JavaScript>]\n    static member Sleep milliseconds : Async<unit> =\n        As (C.Sleep milliseconds)\n\n    [<Inline>]\n    [<JavaScript>]\n    static member StartWithContinuations(op: Async<'T>,\n                                         c1: 'T -> unit,\n                                         c2: exn -> unit,\n                                         c3: OCE -> unit,\n                                         ?t: CT) : unit =\n        C.StartWithContinuations (As op, c1, c2, c3, As t)\n\n    [<Inline>]\n    [<JavaScript>]\n    static member FromContinuations(callback: (('T -> unit) *\n                                               (exn -> unit) *\n                                               (OCE -> unit)) -> unit)\n                                    : Async<'T> =\n        As (C.FromContinuations callback)\n\n    [<Inline>]\n    [<JavaScript>]\n    static member AwaitEvent(ev: IEvent<'D,'T>, ?t: unit -> unit) : Async<'T> =\n        As (C.AwaitEvent (As ev))\n\n    [<Inline>]\n    [<JavaScript>]\n    static member StartChild(a: Async<'T>, ?timeOut: int) : Async<Async<'T>> =\n        As (C.StartChild (As a))\n\n    [<Inline>]\n    [<JavaScript>]\n    static member Parallel(cs: seq<Async<'T>>) : Async<'T []> =\n        As (C.Parallel (As cs))\n\n    [<Inline>]\n    [<JavaScript>]\n    static member StartImmediate(c: Async<unit>, ?t: CT) : unit =\n        C.Start (As c, As t)\n\n    [<Inline>]\n    [<JavaScript>]\n    static member DefaultCancellationToken : CT =\n        As !C.defCTS\n\n    [<Inline>]\n    [<JavaScript>]\n    static member CancelDefaultToken() : unit =\n        let cts = !C.defCTS\n        C.defCTS := new CTS()\n        cts.Cancel()    \n\n    [<Inline>]\n    [<JavaScript>]\n    static member CancellationToken : Async<CT> =\n        As C.GetCT\n\n    [<Inline>]\n    [<JavaScript>]\n    static member OnCancel(action: unit -> unit) : Async<System.IDisposable> =\n        As (C.OnCancel action)\n    \n    [<Inline>]\n    [<JavaScript>]\n    static member TryCancelled(p: Async<'T>, f: OCE -> unit) : Async<'T> =\n        As (C.TryCancelled(As p, f))\n\n[<Proxy(typeof<System.Action>)>]\ntype ActionProxy =\n    [<Inline \"$action\">]\n    new (action: unit -> unit) = {}\n        \n    [<Inline \"$this()\">]\n    member this.Invoke() = ()\n\n[<Proxy(typeof<CTR>)>]\ntype private CancellationTokenRegistrationProxy =\n    [<Stub>] abstract member Dispose : unit -> unit\n\n[<Proxy(typeof<CT>)>]\ntype private CancellationTokenProxy =\n    [<Inline \"$this.c\">]\n    member this.IsCancellationRequested = X<bool>\n\n    [<JavaScript>]\n    [<Inline>]\n    member this.Register(callback: System.Action) =\n        As<CTR> (C.Register (As this) callback.Invoke)\n        \n[<Proxy(typeof<CTS>)>]\n[<Name \"CancellationTokenSource\">]\ntype private CancellationTokenSourceProxy [<JavaScript>] () =\n    let mutable c = false\n\n    let mutable pending = None\n\n    let r = [||] : (unit -> unit)[]\n\n    [<JavaScript>]\n    [<Inline>]\n    member this.IsCancellationRequested = c\n\n    member this.Token \n        with [<Inline \"$this\">] get() = X<CT>\n\n    [<JavaScript>]\n    member this.Cancel() =\n        if not c then\n            c <- true\n            let errors = \n                r |> Array.choose (fun a -> \n                    try a()\n                        None\n                    with e -> Some e\n                )\n            if errors.Length > 0 then\n                raise (System.AggregateException(errors))    \n            \n    [<JavaScript>]\n    member this.Cancel(throwOnFirstException) =\n        if not throwOnFirstException then\n            this.Cancel()\n        else\n            if not c then\n                c <- true\n                r |> Array.iter (fun a -> a())   \n \n    [<JavaScript>]\n    member this.CancelAfter(delay: int) =\n        if not c then\n            pending |> Option.iter JS.ClearTimeout\n            pending <- Some <| JS.SetTimeout this.Cancel delay\n\n    [<JavaScript>]\n    [<Inline>]\n    member this.CancelAfter(delay: System.TimeSpan) = this.CancelAfter(As<int> delay)\n\n    [<JavaScript>]\n    static member CreateLinkedTokenSource(tokens: CT[]) =\n        let cts = new CTS()\n        tokens |> Array.iter (fun t -> t.Register(fun () -> cts.Cancel()) |> ignore)\n\n    [<JavaScript>]\n    static member CreateLinkedTokenSource(t1: CT, t2: CT) =\n        CancellationTokenSourceProxy.CreateLinkedTokenSource [| t1; t2 |]\n", "// $begin{copyright}\n//\n// This file is part of WebSharper\n//\n// Copyright (c) 2008-2015 IntelliFactory\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you\n// may not use this file except in compliance with the License.  You may\n// obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n// implied.  See the License for the specific language governing\n// permissions and limitations under the License.\n//\n// $end{copyright}\n\nnamespace WebSharper\n\nopen WebSharper.JavaScript\n\n[<Name \"Char\">]\n[<Proxy(typeof<System.Char>)>]\ntype private CharProxy =\n\n    [<JavaScript>]\n    static member GetNumericValue(c: char) : float =\n        if c >= '0' && c <= '9' then float c - float '0' else -1.\n\n    [<JavaScript>]\n    static member IsControl(c: char) : bool =\n        c >= '\\u0000' && c <= '\\u001f'\n        || c >= '\\u0080' && c <= '\\u009f'\n\n    [<JavaScript>]\n    static member IsDigit(c: char) : bool =\n        c >= '0' && c <= '9'\n\n    [<JavaScript>]\n    static member IsLetter(c: char) : bool =\n        c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z'\n\n    [<JavaScript>]\n    static member IsLetterOrDigit(c: char) : bool =\n        System.Char.IsLetter c || System.Char.IsDigit c\n\n    [<JavaScript>]\n    static member IsLower(c: char) : bool =\n        c >= 'a' && c <= 'z'\n\n    [<JavaScript>]\n    static member IsUpper(c: char) : bool =\n        c >= 'A' && c <= 'Z'\n\n    [<Direct @\"String.fromCharCode($c).match(/\\s/) !== null\">]\n    static member IsWhiteSpace(c: char) = X<bool>\n\n    [<Inline \"$s.charCodeAt(0)\">]\n    static member CharCodeAt0(s: string) = X<char>\n\n    [<JavaScript>]\n    static member Parse(s: string) =\n        if s.Length = 1 then CharProxy.CharCodeAt0(s) else\n            failwith \"String must be exactly one character long.\"\n\n", "// $begin{copyright}\n//\n// This file is part of WebSharper\n//\n// Copyright (c) 2008-2015 IntelliFactory\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you\n// may not use this file except in compliance with the License.  You may\n// obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n// implied.  See the License for the specific language governing\n// permissions and limitations under the License.\n//\n// $end{copyright}\n\n/// Implements concurrency primitives.\nmodule internal WebSharper.Concurrency\n\nopen WebSharper\nopen WebSharper.JavaScript\n\ntype private OCE = System.OperationCanceledException\n\ntype Result<'T> =\n    | Ok of 'T\n    | No of exn\n    | Cc of OCE\n  \ntype CT =\n    { \n        [<Name \"c\">] mutable IsCancellationRequested : bool \n        [<Name \"r\">] Registrations : (unit -> unit)[]\n    }\n\n[<Inline \"$arr.push($item)\">]\nlet private push arr item = X<int>\n\n[<JavaScript>]\nlet internal Register (ct: CT) (callback: unit -> unit) =\n    let i = push ct.Registrations callback - 1\n    New [\n        \"Dispose\" => fun () -> ct.Registrations.[i] <- ignore\n    ] : System.IDisposable\n\ntype AsyncBody<'T> =\n    {\n        k  : Result<'T> -> unit\n        ct : CT\n    }\n\ntype Concurrent<'T>     = AsyncBody<'T> -> unit\nand private C<'T>       = Concurrent<'T>\n\ntype private Queue<'T>  = System.Collections.Generic.Queue<'T>\ntype Milliseconds       = int\n\ntype private Scheduler [<JavaScript>]() =\n    let mutable idle    = true\n    let robin           = Queue<unit->unit>()\n\n    [<JavaScript>]\n    let rec tick () =\n        let t = System.DateTime.Now\n        let mutable loop = true\n        while loop do\n            match robin.Count with\n            | 0 ->\n                idle <- true\n                loop <- false\n            | _ ->\n                robin.Dequeue()()\n                if System.DateTime.Now - t > System.TimeSpan.FromMilliseconds 40. then\n                    JS.SetTimeout tick 0 |> ignore\n                    loop <- false\n\n    [<JavaScript>]\n    member this.Fork(action: unit -> unit) =\n        robin.Enqueue action\n        if idle then\n            idle <- false\n            JS.SetTimeout tick 0 |> ignore\n\n[<JavaScript>]\nlet private scheduler = Scheduler()\n\n[<JavaScript>]\nlet internal defCTS = ref(new System.Threading.CancellationTokenSource())\n\n[<JavaScript>]\n[<Inline>]\nlet private fork action = scheduler.Fork action\n\n[<JavaScript>]\n[<Inline>]\nlet private cancel c = c.k (Cc (new OCE()))\n\n[<JavaScript>]\nlet private checkCancel r =\n    ()\n    fun c -> if c.ct.IsCancellationRequested then cancel c else r c\n\n[<JavaScript>]\nlet Return (x: 'T) : C<'T> =\n    checkCancel <| fun c -> c.k (Ok x)\n\n[<JavaScript>]\nlet Bind (r: C<'T>, f: 'T -> C<'R>) =\n    checkCancel <| fun c ->\n        r { \n            k = function \n                | Ok x -> fork (fun () -> try f x c with e -> c.k (No e))\n                | res  -> fork (fun () -> c.k (As res)) // error or cancellation\n            ct = c.ct\n        }\n\n[<JavaScript>]\nlet Combine (a: C<unit>, b: C<'T>) : C<'T> = \n    Bind (a, fun _ -> b)\n\n[<JavaScript>]\nlet Ignore (r: C<'T>): C<unit> =\n    Bind (r, fun _ -> Return ())\n\n[<JavaScript>]\nlet Delay (mk: unit -> C<'T>) : C<'T> =\n    checkCancel <| fun c ->\n        try mk () c with e -> c.k (No e)\n\n[<JavaScript>]\nlet TryFinally (run: C<'T>, f: unit -> unit) =\n    checkCancel <| fun c ->\n        run {\n            k = fun r -> \n                try f ()\n                    c.k r \n                with e -> c.k (No e)\n            ct = c.ct\n        }\n\n[<JavaScript>]\nlet TryWith (r: C<'T>, f: exn -> C<'T>) =\n    checkCancel <| fun c ->\n        r {\n            k = function\n                | Ok x -> c.k (Ok x)\n                | No e as res -> try f e c with e -> c.k (As res)\n                | res -> c.k (As res)\n            ct = c.ct\n        }\n\n[<JavaScript>]\nlet Catch (r : C<'T>) : C<Choice<'T, exn>> =\n    checkCancel <| fun c ->\n        try r {\n                k = function \n                    | Ok x -> c.k (Ok (Choice1Of2 x))\n                    | No e -> c.k (Ok (Choice2Of2 e))\n                    | res  -> c.k (As res)\n                ct = c.ct\n            }\n        with e -> c.k (Ok (Choice2Of2 e))\n\n[<JavaScript>]\nlet GetCT : C<CT> =\n    checkCancel <| fun c -> c.k (Ok c.ct)\n\n[<JavaScript>]\nlet FromContinuations (subscribe: ('T -> unit) * (exn -> unit) * (OCE -> unit) -> unit) : C<'T> =\n    checkCancel <| fun c ->\n        let continued = ref false\n        let once cont : unit =\n            if !continued then failwith \"A continuation provided by Async.FromContinuations was invoked multiple times\" else\n            continued := true\n            fork cont   \n        subscribe (\n            fun a -> once (fun () -> c.k (Ok a))\n        ,   fun e -> once (fun () -> c.k (No e))\n        ,   fun e -> once (fun () -> c.k (Cc e))\n        )\n\n[<JavaScript>]\nlet StartWithContinuations (c: C<'T>, s: 'T -> unit, f: exn -> unit, cc: OCE -> unit, ctOpt) =\n    let ct = defaultArg ctOpt (As !defCTS)\n    fork (fun () -> \n        c {\n            k = function\n                | Ok x -> s x\n                | No e -> f e\n                | Cc e -> cc e\n            ct = ct\n        }\n    )\n\n[<JavaScript>]\nlet Start (c: C<unit>, ctOpt) =\n    StartWithContinuations (c, ignore, \n        fun exn -> Console.Log (\"WebSharper: Uncaught asynchronous exception\", exn)\n    , ignore, ctOpt)\n\n#nowarn \"40\"\n\n[<JavaScript>]\nlet AwaitEvent (e: IEvent<'T>) : C<'T> =\n    checkCancel <| fun c ->\n        let rec sub : System.IDisposable =\n            e.Subscribe (fun x -> \n                sub.Dispose()\n                creg.Dispose()\n                fork (fun () -> c.k (Ok x))        \n            )\n        and creg : System.IDisposable = \n            Register c.ct (fun () -> \n                sub.Dispose()\n                fork (fun () -> cancel c)    \n            ) \n        ()\n\n[<JavaScript>]\nlet Sleep (ms: Milliseconds) : C<unit> =\n    checkCancel <|  fun c ->\n        let rec pending =\n            JS.SetTimeout (fun () -> \n                creg.Dispose()\n                fork (fun () -> c.k (Ok ()))\n            ) ms\n        and creg : System.IDisposable =\n            Register c.ct (fun () -> \n                JS.ClearTimeout pending\n                fork (fun () -> cancel c)\n            )\n        ()\n\n[<JavaScript>]\nlet Parallel (cs: seq<C<'T>>) : C<'T[]> =\n    let cs = Array.ofSeq cs\n    if cs.Length = 0 then Return [||] else\n    checkCancel <| fun c ->\n        let n = Array.length cs\n        let o = ref n\n        let a = Array.create n Unchecked.defaultof<_>\n        let accept i x =\n            match !o, x with\n            | 0, _     -> ()\n            | 1, Ok x  -> a.[i] <- x; o := 0; c.k (Ok a)\n            | n, Ok x  -> a.[i] <- x; o := n - 1\n            | n, res   -> o := 0; c.k (As res)\n        Array.iteri (fun i run ->\n            fork (fun () -> run { k = accept i; ct = c.ct }))\n            cs\n\n[<JavaScript>]\nlet StartChild (r : C<'T>) : C<C<'T>> =\n    checkCancel <| fun c ->\n        let cached = ref None\n        let queue  = Queue()\n        fork (fun _ ->\n            r {\n                k = fun res ->\n                    cached := Some res\n                    while queue.Count > 0 do\n                        queue.Dequeue() res\n                ct = c.ct\n            }\n        )\n        let r2 =            \n            checkCancel <| fun c2 ->\n                match cached.Value with\n                | Some x    -> c2.k x\n                | None      -> queue.Enqueue c2.k\n        c.k (Ok r2)\n\n[<JavaScript>]\nlet OnCancel (action: unit -> unit) : C<System.IDisposable> =\n    checkCancel <| fun c -> c.k (Ok (Register c.ct action))\n\n[<JavaScript>]\nlet TryCancelled (run: C<'T>, comp: OCE -> unit) : C<'T> =\n    checkCancel <| fun c ->\n        run {\n            k = function\n                | Cc e as res ->\n                    comp e\n                    c.k res\n                | res -> c.k res\n            ct = c.ct\n        }\n\n[<JavaScript>]\nlet Using (x: 'U, f: 'U -> C<'T>) =\n    TryFinally (f x, fun () -> (x :> System.IDisposable).Dispose())\n\n[<JavaScript>]\nlet rec While (g: unit -> bool, c: C<unit>) : C<unit> = \n    if g() then \n        Bind (c, fun () -> While (g, c)) \n    else\n        Return ()\n\n[<JavaScript>]\nlet rec For (s: seq<'T>, b: 'T -> C<unit>) =\n    Using (s.GetEnumerator(), fun ie -> \n        While ((fun () -> ie.MoveNext()), \n            Delay (fun () -> b ie.Current)))\n", "// $begin{copyright}\n//\n// This file is part of WebSharper\n//\n// Copyright (c) 2008-2015 IntelliFactory\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you\n// may not use this file except in compliance with the License.  You may\n// obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n// implied.  See the License for the specific language governing\n// permissions and limitations under the License.\n//\n// $end{copyright}\n\n[<WebSharper.Core.Attributes.Proxy\n    \"Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers, \\\n     FSharp.Core, Culture=neutral, \\\n     PublicKeyToken=b03f5f7f11d50a3a\">]\nmodule private WebSharper.RuntimeHelpersProxy\n\n#nowarn \"40\"\n\nopen WebSharper.JavaScript\n\ntype IE<'T> = System.Collections.Generic.IEnumerator<'T>\n\n[<JavaScript>]\n[<Inline>]\nlet safeDispose (x: System.IDisposable) =\n    if x <> null then x.Dispose()\n\n[<JavaScript>]\n[<Name \"WebSharper.Seq.enumFinally\">]\nlet EnumerateThenFinally (s: seq<'T>) (f: unit -> unit) : seq<'T> =\n    Enumerable.Of <| fun () ->\n        let enum = try Enumerator.Get s with e -> f(); raise e\n        Enumerator.NewDisposing () (fun _ -> enum.Dispose(); f()) <| fun e ->\n            if enum.MoveNext() then\n                e.Current <- enum.Current\n                true\n            else\n                false\n\n[<JavaScript>]\n[<Name \"WebSharper.Seq.enumUsing\">]\nlet EnumerateUsing<'T1,'T2,'T3 when 'T1 :> System.IDisposable\n                                and 'T2 :> seq<'T3>>\n        (x: 'T1) (f: 'T1 -> 'T2) : seq<'T3> =\n\n    Enumerable.Of <| fun () ->\n        let enum = try Enumerator.Get (f x) with e -> x.Dispose(); raise e\n        Enumerator.NewDisposing () (fun _ -> enum.Dispose(); x.Dispose()) <| fun e ->\n            if enum.MoveNext() then\n                e.Current <- enum.Current\n                true\n            else\n                false\n\n[<JavaScript>]\n[<Name \"WebSharper.Seq.enumWhile\">]\nlet EnumerateWhile (f: unit -> bool) (s: seq<'T>) : seq<'T> =\n    Enumerable.Of (fun () ->\n        let rec next (en: Enumerator.T<IE<_>,'T>) =\n            match en.State with\n            | null ->\n                if f () then\n                    en.State <- Enumerator.Get s\n                    next en\n                else\n                    false\n            | e ->\n                if e.MoveNext() then\n                    en.Current <- e.Current\n                    true\n                else\n                    e.Dispose()\n                    en.State <- null\n                    next en\n        Enumerator.NewDisposing null (fun en -> safeDispose en.State) next)\n\n[<JavaScript>]\n[<Name \"WebSharper.Control.createEvent\">]\nlet CreateEvent<'D, 'A when 'D : delegate<'A, unit> and 'D :> System.Delegate> \n        (add: 'D -> unit) \n        (remove: 'D -> unit)\n        (create: (obj -> 'A -> unit) -> 'D) : IEvent<'D, 'A> =\n    New [\n        \"AddHandler\" => add\n        \"RemoveHandler\" => remove\n        \"Subscribe\" => \n            fun (r: System.IObserver<'A>) ->\n                let h = create (fun _ args -> r?OnNext(args))\n                add h\n                New [ \"Dispose\" => fun () -> remove h ] \n    ]\n    \n", "// $begin{copyright}\n//\n// This file is part of WebSharper\n//\n// Copyright (c) 2008-2015 IntelliFactory\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you\n// may not use this file except in compliance with the License.  You may\n// obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n// implied.  See the License for the specific language governing\n// permissions and limitations under the License.\n//\n// $end{copyright}\n\nnamespace WebSharper\n\nopen WebSharper.JavaScript\n\ntype private D = System.DateTime\ntype private K = System.DateTimeKind\ntype private TS = System.TimeSpan\n\n[<AbstractClass>]\ntype private E =\n    [<Inline \"new Date($d)\">]\n    static member FromDateTime(d: D) = X<E>\n    \n    [<Inline \"new Date($y,$mo,$d)\">]\n    static member Create3(y: int, mo: int, d: int) = X<E>\n\n    [<Inline \"new Date($y,$mo,$d,$h,$m,$s)\">]\n    static member Create6(y: int, mo: int, d: int, h: int, m: int, s: int) = X<E>\n\n    [<Inline \"new Date($y,$mo,$d,$h,$m,$s,$ms)\">]\n    static member Create7(y: int, mo: int, d: int, h: int, m: int, s: int, ms: int) = X<E>\n\n    [<Stub>] abstract member getTime         : unit -> D\n    [<Stub>] abstract member getFullYear     : unit -> int\n    [<Stub>] abstract member getMonth        : unit -> int\n    [<Stub>] abstract member getDate         : unit -> int\n    [<Stub>] abstract member getHours        : unit -> int\n    [<Stub>] abstract member getMinutes      : unit -> int\n    [<Stub>] abstract member getSeconds      : unit -> int\n    [<Stub>] abstract member getMilliseconds : unit -> int\n    [<Stub>] abstract member getDay          : unit -> int\n\nmodule private DateTimeHelpers =\n    [<JavaScript>]\n    let DatePortion d =\n        let e = E.FromDateTime(d)\n        E.Create3(       \n            e.getFullYear(),\n            e.getMonth(),\n            e.getDate()\n        ).getTime()        \n\n    [<JavaScript>]\n    let TimePortion d =\n        let e = E.FromDateTime(d)\n        TS(\n            0,\n            e.getHours(), \n            e.getMinutes(), \n            e.getSeconds(), \n            e.getMilliseconds()\n        )        \n\n    [<JavaScript>]\n    let AddYears(d, years) : D =\n        let e = E.FromDateTime(d)\n        E.Create7(   \n            e.getFullYear() + years,\n            e.getMonth(),\n            e.getDate(),\n            e.getHours(),\n            e.getMinutes(),\n            e.getSeconds(),\n            e.getMilliseconds()\n        ).getTime()\n\n    [<JavaScript>]\n    let AddMonths(d, months: int) : D =\n        let e = E.FromDateTime(d)\n        E.Create7(   \n            e.getFullYear(),\n            e.getMonth() + months,\n            e.getDate(),\n            e.getHours(),\n            e.getMinutes(),\n            e.getSeconds(),\n            e.getMilliseconds()\n        ).getTime()    \n\n    [<JavaScript>]\n    let Parse (s: string) =\n        let d = JavaScript.Date.Parse(s)   \n        if JS.IsNaN(d) then\n            failwith \"Failed to parse date string.\"\n        else d\n\n    [<Direct \"(new Date($d)).toLocaleDateString({}, {year: 'numeric', month: 'long', day: 'numeric', weekday: 'long'})\">]\n    let LongDate (d: obj) = X<string>\n     \n    [<Direct \"(new Date($d)).toLocaleTimeString({}, {hour: '2-digit', minute: '2-digit', hour12: false})\">]\n    let ShortTime (d: obj) = X<string>\n\n    [<Direct \"(new Date($d)).toLocaleTimeString({}, {hour: '2-digit', minute: '2-digit', second: '2-digit', hour12: false})\">]\n    let LongTime (d: obj) = X<string>\n             \n[<Proxy(typeof<System.DateTime>)>]\ntype private DateTimeProxy =\n    [<Inline \"0\">]\n    new () = {}\n\n    [<Inline \"new Date($y,$mo-1,$d).getTime()\">]\n    new (y: int, mo: int, d: int) = {}\n\n    [<Inline \"new Date($y,$mo-1,$d,$h,$m,$s).getTime()\">]\n    new (y: int, mo: int, d: int, h: int, m: int, s: int) = {}\n\n    [<Inline \"new Date($y,$mo-1,$d,$h,$m,$s,$ms).getTime()\">]\n    new (y: int, mo: int, d: int, h: int, m: int, s: int, ms: int) = {}\n\n    static member Now\n        with [<Inline \"Date.now()\">] get() = X<D>\n    \n    static member UtcNow\n        with [<Inline \"Date.now()\">] get() = X<D>\n    \n    [<Inline \"1\">]\n    member this.Kind = X<System.DateTimeKind>\n\n    member this.Date \n        with [<Inline; JavaScript>] get() : D = DateTimeHelpers.DatePortion(As this)\n\n    static member Today\n        with [<Inline; JavaScript>] get() = DateTimeProxy.Now.Date  \n\n    member this.TimeOfDay \n        with [<Inline; JavaScript>] get() = DateTimeHelpers.TimePortion(As this)\n\n    member this.Year\n        with [<Inline; JavaScript>] get() = E.FromDateTime(As this).getFullYear()\n\n    member this.Month \n        with [<Inline; JavaScript>] get() = E.FromDateTime(As this).getMonth() + 1\n\n    member this.Day \n        with [<Inline; JavaScript>] get() = E.FromDateTime(As this).getDate()\n\n    member this.Hour \n        with [<Inline; JavaScript>] get() = E.FromDateTime(As this).getHours()\n                                                  \n    member this.Minute \n        with [<Inline; JavaScript>] get() = E.FromDateTime(As this).getMinutes()\n    \n    member this.Second \n        with [<Inline; JavaScript>] get() = E.FromDateTime(As this).getSeconds()\n\n    member this.Millisecond \n        with [<Inline; JavaScript>] get() = E.FromDateTime(As this).getMilliseconds()\n    \n    member this.DayOfWeek \n        with [<Inline; JavaScript>] get() = As<System.DayOfWeek>(E.FromDateTime(As this).getDay())\n\n    member this.Ticks\n        with [<Inline \"$this * 1E4\">] get() = X<int64>\n\n    [<Inline \"$this + $t\">]\n    member this.Add(t: TS) = X<D>\n                            \n    [<Inline \"$this - $t\">]\n    member this.Subtract(t: TS) = X<D>\n\n    [<Inline \"$this - $d\">]\n    member this.Subtract(d: D) = X<TS>\n\n    [<Inline; JavaScript>]\n    member this.AddYears(years: int) : D = DateTimeHelpers.AddYears(As this, years)\n\n    [<Inline; JavaScript>]\n    member this.AddMonths(months: int) : D = DateTimeHelpers.AddMonths(As this, months)\n\n    [<Inline; JavaScript>]\n    member this.AddDays(days: float) : D =\n        this.Add(TS.FromDays days)\n\n    [<Inline; JavaScript>]\n    member this.AddHours(hours: float) : D =\n        this.Add(TS.FromHours hours)\n\n    [<Inline; JavaScript>]\n    member this.AddMinutes(minutes: float) : D =\n        this.Add (TS.FromMinutes minutes)\n\n    [<Inline; JavaScript>]\n    member this.AddSeconds(seconds: float) : D =\n        this.Add (TS.FromSeconds seconds)\n\n    [<Inline; JavaScript>]\n    member this.AddMilliseconds(msec: float) : D =\n        this.Add (TS.FromMilliseconds msec)\n\n    [<Inline; JavaScript>]\n    member this.AddTicks(ticks: int64) : D =\n        this.Add (TS.FromTicks ticks)\n\n    [<Inline \"new Date($this).toLocaleString()\">]\n    override this.ToString() = X<string>\n\n    [<Inline \"new Date($this).toLocaleDateString()\">]\n    member this.ToShortDateString() = X<string>\n    \n    [<Inline; JavaScript>]\n    member this.ToLongDateString() = DateTimeHelpers.LongDate(this)\n    \n    [<Inline; JavaScript>]\n    member this.ToShortTimeString() = DateTimeHelpers.ShortTime(this)\n\n    [<Inline; JavaScript>]\n    member this.ToLongTimeString() = DateTimeHelpers.LongTime(this)\n\n    [<Inline; JavaScript>]\n    static member Parse(s) = As<D>(DateTimeHelpers.Parse(s))\n\n    static member MaxValue\n        with [<Inline \"8640000000000000\">] get () = X<int>\n\n    static member MinValue\n        with [<Inline \"-8640000000000000\">] get () = X<int>\n", "// $begin{copyright}\n//\n// This file is part of WebSharper\n//\n// Copyright (c) 2008-2015 IntelliFactory\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you\n// may not use this file except in compliance with the License.  You may\n// obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n// implied.  See the License for the specific language governing\n// permissions and limitations under the License.\n//\n// $end{copyright}\n\n/// Provides an `IEnumerable` implementation.\nmodule private WebSharper.Enumerable\n\nopen WebSharper.JavaScript\n\n/// Constructs an `IEnumerable`.\n[<JavaScript>]\nlet Of (getEnumerator: unit -> System.Collections.Generic.IEnumerator<'T>) =\n    let r = obj ()\n    r?GetEnumerator <- getEnumerator\n    As<seq<'T>> r\n", "// $begin{copyright}\n//\n// This file is part of WebSharper\n//\n// Copyright (c) 2008-2015 IntelliFactory\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you\n// may not use this file except in compliance with the License.  You may\n// obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n// implied.  See the License for the specific language governing\n// permissions and limitations under the License.\n//\n// $end{copyright}\n\n/// Provides an `IEnumerator` implementation.\nmodule private WebSharper.Enumerator\n\nopen WebSharper.JavaScript\ntype IE<'T> = System.Collections.Generic.IEnumerator<'T>\n\n/// Represents an unfolding enumerator.\n[<Name \"T\">]\n[<Sealed>]\ntype T<'S,'T> [<JavaScript>] (s: 'S, c: 'T, n: T<'S,'T> -> bool, d: T<'S,'T> -> unit) =\n    [<JavaScript>] \n    member this.MoveNext() = n this\n    member this.State with [<Inline; JavaScript>] get() = s and [<Inline; JavaScript>] set (v: 'S) = this?s <- v\n    member this.Current with [<JavaScript>] get() = c and [<Inline; JavaScript>] set (v: 'T) = this?c <- v\n    [<JavaScript>] \n    member this.Dispose() = d this\n\n/// Constructs a new `IEnumerator` by unfolding a function.\n[<Inline>]\n[<JavaScript>]\nlet New<'S,'T> (state: 'S) (next: T<'S,'T> -> bool) =\n    As<IE<'T>> (new T<'S,'T>(state, As null, next, ignore)) \n\n[<Inline>]\n[<JavaScript>]\nlet NewDisposing<'S,'T> (state: 'S) dispose (next: T<'S,'T> -> bool) =\n    As<IE<'T>> (new T<'S,'T>(state, As null, next, dispose))\n\n[<Inline \"$x.GetEnumerator()\">]\nlet getEnumerator (x: obj) : IE<'T> = X\n\n[<JavaScript>]\nlet Get (x: seq<'T>) : IE<'T> =\n    if JS.InstanceOf x JS.Global?Array then\n        let s = As<obj[]> x\n        New 0 (fun e ->\n            let i = e.State\n            if i < s.Length then\n                e.Current <- As s.[i]\n                e.State <- i + 1\n                true\n            else\n                false)\n    elif JS.TypeOf x = JS.String then\n        let s = As<string> x\n        New 0 (fun e ->\n            let i = e.State\n            if i < s.Length then\n                e.Current <- As s.[i]\n                e.State <- i + 1\n                true\n            else\n                false)\n    else\n        getEnumerator x\n\n", "// $begin{copyright}\n//\n// This file is part of WebSharper\n//\n// Copyright (c) 2008-2015 IntelliFactory\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you\n// may not use this file except in compliance with the License.  You may\n// obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n// implied.  See the License for the specific language governing\n// permissions and limitations under the License.\n//\n// $end{copyright}\n\n/// Defines operators and functions that are automatically available whenever\n/// `WebSharper` is open.\n[<AutoOpen>]\nmodule WebSharper.JavaScript.Pervasives\n\nopen WebSharper\nmodule M = WebSharper.Macro\n\n/// Casts an object to the desired type.\n[<Inline \"$x\">]\nlet As<'T> (x: obj) = X<'T>\n\n[<Inline \"$x * $y\">]\nlet ( *. ) x y = X<obj>\n\n[<Inline \"$x / $y\">]\nlet ( /. ) x y = X<obj>\n\n[<Inline \"$x % $y\">]\nlet ( %. ) x y = X<obj>\n\n[<Inline \"$x + $y\">]\nlet ( +. ) x y = X<obj>\n\n[<Inline \"$x - $y\">]\nlet ( -. ) x y = X<obj>\n\n[<Inline \"$x << $y\">]\nlet ( <<. ) x y = X<obj>\n\n[<Inline \"$x >> $y\">]\nlet ( >>. ) x y = X<obj>\n\n[<Inline \"$x >>> $y\">]\nlet ( >>>. ) x y = X<obj>\n\n[<Inline \"$x < $y\">]\nlet ( <. ) x y = X<bool>\n\n[<Inline \"$x > $y\">]\nlet ( >. ) x y = X<bool>\n\n[<Inline \"$x >= $y\">]\nlet ( >=. ) x y = X<bool>\n\n[<Inline \"$x <= $y\">]\nlet ( <=. ) x y = X<bool>\n\n[<Inline \"$x == $y\">]\nlet ( ==. ) x y = X<bool>\n\n[<Inline \"$x === $y\">]\nlet ( ===. ) x y = X<bool>\n\n[<Inline \"$x != $y\">]\nlet ( !=. ) x y = X<bool>\n\n[<Inline \"$x !== $y\">]\nlet ( !==. ) x y = X<bool>\n\n[<Inline \"$x | $y\">]\nlet ( |. ) x y = X<obj>\n\n[<Inline \"$x & $y\">]\nlet ( &. ) x y = X<obj>\n\n[<Inline \"$x ^ $y\">]\nlet ( ^. ) x y = X<obj>\n\n[<Inline \"$obj[$field]\">]\nlet ( ? ) (obj: obj) (field: string) = X<'T>\n\n[<Inline \"void ($obj[$key] = $value)\">]\nlet ( ?<- ) (obj: obj) (key: string) (value: obj) = X<unit>\n\n[<Inline \"[$x,$y]\">]\nlet ( => ) (x: string) (y: obj) = (x, y)\n\n[<JavaScript>]\nlet private NewFromList<'T> (fields: seq<string * obj>) : 'T =\n    let r = obj ()\n    for (k, v) in fields do\n        (?<-) r k v\n    As r\n\n/// Constructs a new object as if an object literal was used.\n[<Macro(typeof<M.New>)>]\nlet New<'T> (fields: seq<string * obj>) = X<'T>\n\n/// Constructs an proxy to a remote object instance.\n[<Inline \"null\">]\nlet Remote<'T> = X<'T>\n", "// $begin{copyright}\n//\n// This file is part of WebSharper\n//\n// Copyright (c) 2008-2015 IntelliFactory\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you\n// may not use this file except in compliance with the License.  You may\n// obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n// implied.  See the License for the specific language governing\n// permissions and limitations under the License.\n//\n// $end{copyright}\n\nmodule WebSharper.Json\n\nopen WebSharper.JavaScript\nmodule A = WebSharper.Core.Attributes\nmodule Js = WebSharper.Core.Json\nmodule Re = WebSharper.Core.Resources\n\ntype Resource() =\n    interface Re.IResource with\n        member this.Render ctx html =\n            let html = html Re.Scripts\n            html.WriteLine \"<!--[if lte IE 7.0]>\"\n            let name = if ctx.DebuggingEnabled then \"Json.js\" else \"Json.min.js\"\n            let ren = Re.Rendering.GetWebResourceRendering(ctx, typeof<Resource>, name)\n            ren.Emit(html, Re.Js)\n            html.WriteLine \"<![endif]-->\"\n\n[<A.Inline \"$obj[$field]\">]\nlet ( ? ) (obj: obj) (field: string) = X<'T>\n\n[<A.Inline \"void ($obj[$key] = $value)\">]\nlet ( ?<- ) (obj: obj) (key: string) (value: obj) = X<unit>\n\n[<A.Inline \"$x\">]\nlet As<'T> (x: obj) = X<'T>\n\n[<A.Inline \"JSON.parse($json)\">]\n[<A.Require(typeof<Resource>)>]\nlet Parse (json: string) = X<obj>\n\n[<A.Inline \"JSON.stringify($obj)\">]\n[<A.Require(typeof<Resource>)>]\nlet Stringify (obj: obj) = X<string>\n\n/// Lookups an object by its FQN.\n[<A.JavaScript>]\nlet lookup<'T> (x: string []) : obj =\n    let k = x.Length\n    let mutable r = JS.Global\n    let mutable i = 0\n    while i < k do\n        let n  = x.[i]\n        let rn = (?) r n\n        if JS.TypeOf rn <> JS.Undefined then\n            r <- rn\n            i <- i + 1\n        else\n            failwith (\"Invalid server reply. Failed to find type: \" + n)\n    r\n\n/// Does a shallow generic mapping over an object.\n[<A.JavaScript>]\nlet shallowMap (f: obj -> obj) (x: obj) : obj =\n    if JS.InstanceOf x JS.Global?Array then\n        As (Array.map f (As x))\n    else\n        match JS.TypeOf x with\n        | JS.Object ->\n            let r = obj ()\n            JS.ForEach x (fun y -> (?<-) r y (f ((?) x y)); false)\n            r\n        | _ ->\n            x\n\n[<A.JavaScript>]\n[<A.Require(typeof<Resource>)>]\nlet Activate<'T> (json: obj) : 'T =\n    let types = As<obj[]> ((?) json \"$TYPES\")\n    for i = 0 to types.Length - 1 do\n        types.[i] <- lookup (As types.[i])\n    let rec decode (x: obj) : obj =\n        if x = null then x else\n            match JS.TypeOf x with\n            | JS.Object ->\n                if JS.InstanceOf x JS.Global?Array then\n                    shallowMap decode x\n                else\n                    let o  = shallowMap decode ((?) x \"$V\")\n                    let ti = (?) x \"$T\"\n                    if JS.TypeOf ti = JS.Kind.Undefined then o else\n                        let r = JS.New types.[ti]\n                        JS.ForEach o (fun k -> (?<-) r k ((?) o k); false)\n                        r\n            | _ ->\n                x\n    As (decode ((?) json \"$DATA\"))\n\n", "// $begin{copyright}\n//\n// This file is part of WebSharper\n//\n// Copyright (c) 2008-2015 IntelliFactory\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you\n// may not use this file except in compliance with the License.  You may\n// obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n// implied.  See the License for the specific language governing\n// permissions and limitations under the License.\n//\n// $end{copyright}\n\n[<WebSharper.Core.Attributes.Name \"Lazy\">]\n[<WebSharper.Core.Attributes.Proxy\n    \"Microsoft.FSharp.Control.LazyExtensions, \\\n     FSharp.Core, Culture=neutral, \\\n     PublicKeyToken=b03f5f7f11d50a3a\">]\nmodule private WebSharper.LazyExtensionsProxy\n\nopen WebSharper.JavaScript\n\n[<JavaScript>]\nlet Create (f: unit -> 'T) : Lazy<'T> =\n    let x =\n        {\n            value    = Unchecked.defaultof<'T>\n            created  = false\n            eval     = f\n        }\n    let get () =\n        if x.created then\n            x.value\n        else\n            x.created <- true\n            x.value <- f ()\n            x.value\n    x.eval <- get\n    As x\n\n[<JavaScript>]\nlet CreateFromValue (v: 'T) : Lazy<'T> =\n    let x =\n        {\n            value   = v\n            created = true\n            eval    = fun () -> v\n        }\n    x.eval <- fun () -> v\n    As x\n\n[<JavaScript>]\nlet Force (x: Lazy<'T>) : 'T =\n    As<LazyProxy<'T>>(x).eval()\n", "// $begin{copyright}\n//\n// This file is part of WebSharper\n//\n// Copyright (c) 2008-2015 IntelliFactory\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you\n// may not use this file except in compliance with the License.  You may\n// obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n// implied.  See the License for the specific language governing\n// permissions and limitations under the License.\n//\n// $end{copyright}\n\nnamespace WebSharper\n\nopen WebSharper.JavaScript\nmodule M = WebSharper.Core.Macros\nmodule Q = WebSharper.Core.Quotations\nmodule J = WebSharper.Core.JavaScript.Core\nmodule R = WebSharper.Core.Reflection\n\ntype private ListMacro() =\n    let str x = !~(J.String x)\n    let int x = !~(J.Integer (int64 x))\n    let (==) x y = J.Binary(x, J.BinaryOperator.``==``, y)\n    let (?) x f = J.FieldGet(x, str f)\n    interface M.IMacro with\n        member this.Translate(q, tr) =\n            let ctor name g args =\n                let t = R.TypeDefinition.FromType typeof<ListProxy<_>>\n                let uc : Q.Concrete<_> =\n                    { Entity = R.UnionCase.Create t name; Generics = g }\n                tr (Q.NewUnionCase(uc, args))\n            match q with\n            | Q.CallOrCallModule ({Entity = m; Generics = g}, args) ->\n                match m.Name with\n                | \"Cons\" -> ctor \"Cons\" g args\n                | \"get_Empty\" -> ctor \"Empty\" g args\n                | \"get_IsEmpty\" -> (tr args.[0])?(\"$\") == int 0\n                | _ -> tr q\n            | Q.PropertyGet ({Entity = p; Generics = g}, args) ->\n                match p.Name with\n                | \"Empty\" -> ctor \"Empty\" g args\n                | \"IsEmpty\" -> (tr args.[0])?(\"$\") == int 0\n                | _ -> tr q\n            | q -> tr q\n\nand [<Name \"WebSharper.List.T\">]\n    [<Proxy(typeof<list<_>>)>]\n    [<Macro(typeof<ListMacro>)>]\n    [<RequireQualifiedAccess>]\n    private ListProxy<'T> =\n    | Empty\n    | Cons of 'T * List<'T>\n\n    member this.Head    with [<Inline \"$this.$0\">] get ()     = X<'T>\n    member this.Tail    with [<Inline \"$this.$1\">] get ()     = X<list<'T>>\n\n    [<JavaScript>]\n    member this.Length with get () = Seq.length (As this)\n\n    [<JavaScript>]\n    member this.Item with get (x: int) : 'T = Seq.nth x (As this)\n\n    [<JavaScript>]\n    member this.GetEnumerator() =\n        let data = As<list<'T>> this\n        Enumerator.New data (fun e ->\n            match e.State with\n            | x :: xs ->\n                e.Current <- x\n                e.State <- xs\n                true\n            | [] ->\n                false)\n\n    [<JavaScript>]\n    member this.GetSlice(start, finish) : list<'T> =\n        match start, finish with\n        | None, None -> As this\n        | Some i, None -> As this |> CollectionInternals.ListSkip i\n        | None, Some j -> As this |> Seq.take (j + 1) |> List.ofSeq  \n        | Some i, Some j -> As this |> CollectionInternals.ListSkip i |> Seq.take (j - i + 1) |> List.ofSeq        \n", "// $begin{copyright}\n//\n// This file is part of WebSharper\n//\n// Copyright (c) 2008-2015 IntelliFactory\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you\n// may not use this file except in compliance with the License.  You may\n// obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n// implied.  See the License for the specific language governing\n// permissions and limitations under the License.\n//\n// $end{copyright}\n\n[<WebSharper.Core.Attributes.Name \"List\">]\n[<WebSharper.Core.Attributes.Proxy\n    \"Microsoft.FSharp.Collections.ListModule, \\\n     FSharp.Core, Culture=neutral, \\\n     PublicKeyToken=b03f5f7f11d50a3a\">]\nmodule private WebSharper.ListModuleProxy\n\nopen WebSharper.JavaScript\nopen WebSharper.CollectionInternals\n\n[<JavaScript>]\n[<Name \"append\">]\nlet Append (x: list<_>) (y: list<_>) = List.ofSeq (Seq.append x y)\n\n[<Inline>]\n[<JavaScript>]\nlet inline Average (l: list<_>) = Seq.average l\n\n[<Inline>]\n[<JavaScript>]\nlet inline AverageBy f (l: list<_>) = Seq.averageBy f l\n\n[<JavaScript>]\n[<Name \"choose\">]\nlet Choose f (l: list<_>) = List.ofSeq (Seq.choose f l)\n\n[<JavaScript>]\n[<Name \"collect\">]\nlet Collect (f: _ -> list<_>) (l: list<_>) = List.ofSeq (Seq.collect f l)\n\n[<JavaScript>]\n[<Name \"concat\">]\nlet Concat (s: seq<list<_>>) = List.ofSeq (Seq.concat s)\n\n[<Inline>]\n[<JavaScript>]\nlet Empty<'T> : list<'T> = []\n\n[<Inline>]\n[<JavaScript>]\nlet Exists<'T> (p: 'T -> bool) (l: list<'T>) = Seq.exists p l\n\n[<JavaScript>]\n[<Name \"exists2\">]\nlet Exists2<'T1,'T2> (p : 'T1 -> 'T2 -> bool)\n                        (l1: list<'T1>)\n                        (l2: list<'T2>) =\n    Array.exists2 p (Array.ofSeq l1) (Array.ofSeq l2)\n\n[<JavaScript>]\n[<Name \"filter\">]\nlet Filter<'T> (p: 'T -> bool) (l: list<'T>) =\n    List.ofSeq (Seq.filter p l)\n\n[<Inline>]\n[<JavaScript>]\nlet Find p (l: list<_>) = Seq.find p l\n\n[<Inline>]\n[<JavaScript>]\nlet FindIndex p (l: list<_>) = Seq.findIndex p l\n\n[<Inline>]\n[<JavaScript>]\nlet Fold<'T,'S> (f: 'S -> 'T -> 'S) (s: 'S) (l: list<'T>) : 'S =\n    Seq.fold f s l\n\n[<JavaScript>]\n[<Name \"fold2\">]\nlet Fold2<'T1,'T2,'S> (f: 'S -> 'T1 -> 'T2 -> 'S)\n                        (s: 'S)\n                        (l1: list<'T1>)\n                        (l2: list<'T2>) : 'S =\n    Array.fold2 f s (Array.ofSeq l1) (Array.ofSeq l2)\n\n[<JavaScript>]\n[<Name \"foldBack\">]\nlet FoldBack f (l: list<_>) s =\n    Array.foldBack f (Array.ofSeq l) s\n\n[<JavaScript>]\n[<Name \"foldBack2\">]\nlet FoldBack2 f (l1: list<_>) (l2: list<_>) s =\n    Array.foldBack2 f (Array.ofSeq l1) (Array.ofSeq l2) s\n\n[<Inline>]\n[<JavaScript>]\nlet ForAll p (l: list<_>) = Seq.forall p l\n\n[<JavaScript>]\n[<Name \"forall2\">]\nlet ForAll2 p (l1: list<_>) (l2: list<_>) =\n    Array.forall2 p (Array.ofSeq l1) (Array.ofSeq l2)\n\n[<JavaScript>]\n[<Name \"head\">]\nlet Head (l: list<'T>) =\n    match l with \n    | h :: _ -> h\n    | _ -> failwith \"The input list was empty.\"\n\n[<JavaScript>]\n[<Name \"init\">]\nlet Initialize s f = List.ofArray (Array.init s f)\n\n[<Inline \"$l.$ == 0\">]\nlet IsEmpty (l: list<_>) = X<bool>\n\n[<Inline>]\n[<JavaScript>]\nlet Iterate f (l: list<_>) = Seq.iter f l\n\n[<JavaScript>]\n[<Name \"iter2\">]\nlet Iterate2 f (l1: list<_>) (l2: list<_>) =\n    Array.iter2 f (Array.ofSeq l1) (Array.ofSeq l2)\n\n[<Inline>]\n[<JavaScript>]\nlet IterateIndexed f (l: list<_>) = Seq.iteri f l\n\n[<JavaScript>]\n[<Name \"iteri2\">]\nlet IterateIndexed2 f (l1: list<_>) (l2: list<_>) =\n    Array.iteri2 f (Array.ofSeq l1) (Array.ofSeq l2)\n\n[<Inline>]\n[<JavaScript>]\nlet Length (l: list<_>) = Seq.length l\n\n[<JavaScript>]\n[<Name \"map\">]\nlet Map f (l: list<_>) = List.ofSeq (Seq.map f l)\n\n[<JavaScript>]\n[<Name \"map2\">]\nlet Map2 f (l1: list<_>) (l2: list<_>) =\n    List.ofArray (Array.map2 f (Array.ofSeq l1) (Array.ofSeq l2))\n\n[<JavaScript>]\n[<Inline>]\nlet Map3 f (l1: list<_>) (l2: list<_>) (l3: list<_>) =\n    ListMap3 f l1 l2 l3\n\n[<JavaScript>]\n[<Name \"mapi\">]\nlet MapIndexed f (l: list<_>) = List.ofSeq (Seq.mapi f l)\n\n[<JavaScript>]\n[<Name \"mapi2\">]\nlet MapIndexed2 f (l1: list<_>) (l2: list<_>) =\n    List.ofArray (Array.mapi2 f (Array.ofSeq l1) (Array.ofSeq l2))\n\n[<JavaScript>]\n[<Name \"max\">]\nlet Max (l: list<_>) = Seq.reduce max l\n\n[<JavaScript>]\n[<Name \"maxBy\">]\nlet MaxBy f (l: list<_>) =\n    Seq.reduce (fun x y -> if f x > f y then x else y) l\n\n[<JavaScript>]\n[<Name \"min\">]\nlet Min (l: list<_>) = Seq.reduce min l\n\n[<JavaScript>]\n[<Name \"minBy\">]\nlet MinBy f (l: list<_>) =\n    Seq.reduce (fun x y -> if f x < f y then x else y) l\n\n[<Inline>]\n[<JavaScript>]\nlet Get (l: list<_>) ix = Seq.nth ix l\n\n[<Inline>]\n[<JavaScript>]\nlet Item ix (l: list<_>) = Seq.nth ix l\n\n[<JavaScript>]\n[<Name \"ofArray\">]\nlet OfArray<'T> (arr: 'T []) =\n    let mutable r = []\n    for i = 0 to arr.Length - 1 do\n        r <- arr.[arr.Length - i - 1] :: r\n    r\n\n[<JavaScript>]\n[<Name \"ofSeq\">]\nlet OfSeq (s: seq<'T>) =\n    let res = [] : list<'T>\n    let mutable last = res\n    use e = Enumerator.Get s\n    while e.MoveNext() do\n        JS.Set last \"$\" 1\n        let next = [] : list<'T>\n        JS.Set last \"$0\" e.Current \n        JS.Set last \"$1\" next\n        last <- next\n    JS.Set last \"$\" 0\n    res\n\n[<JavaScript>]\n[<Name \"partition\">]\nlet Partition p (l: list<_>) =\n    let (a, b) = Array.partition p (Array.ofSeq l)\n    (List.ofArray a, List.ofArray b)\n\n[<JavaScript>]\n[<Name \"permute\">]\nlet Permute f (l: list<_>) =\n    List.ofArray (Array.permute f (Array.ofSeq l))\n\n[<Inline>]\n[<JavaScript>]\nlet Pick f (l: list<_>) = Seq.pick f l\n\n[<Inline>]\n[<JavaScript>]\nlet Reduce (f: 'T -> 'T -> 'T) (list: list<'T>) : 'T =\n    Seq.reduce f list\n\n[<JavaScript>]\n[<Name \"reduceBack\">]\nlet ReduceBack f (l: list<_>) =\n    Array.reduceBack f (Array.ofSeq l)\n\n[<JavaScript>]\n[<Name \"replicate\">]\nlet Replicate size value =\n    List.ofArray (Array.create size value)\n\n[<JavaScript>]\n[<Name \"rev\">]\nlet Reverse (l: list<'T>) =\n    let a = Array.ofSeq l\n    System.Array.Reverse a\n    List.ofArray a\n\n[<JavaScript>]\n[<Name \"scan\">]\nlet Scan<'T,'S> (f: 'S -> 'T -> 'S) (s: 'S) (l: list<'T>) : list<'S> =\n    List.ofSeq (Seq.scan f s l)\n\n[<JavaScript>]\n[<Name \"scanBack\">]\nlet ScanBack f (l: list<_>) s =\n    List.ofArray (Array.scanBack f (Array.ofSeq l) s)\n\n[<JavaScript>]\n[<Name \"sort\">]\nlet Sort (l: list<_>) =\n    let a = Array.ofSeq l\n    Array.sortInPlace a\n    List.ofArray a\n\n[<JavaScript>]\n[<Name \"sortBy\">]\nlet SortBy f (l: list<_>) =\n    List.sortWith (fun x y -> compare (f x) (f y)) l\n\n[<JavaScript>]\n[<Name \"sortByDescending\">]\nlet SortByDescending f (l: list<_>) =\n    List.sortWith (fun x y -> - compare (f x) (f y)) l\n\n[<JavaScript>]\n[<Name \"sortDescending\">]\nlet SortDescending (l: list<_>) =\n    let a = Array.ofSeq l\n    ArraySortInPlaceByDescending id a\n    List.ofArray a\n\n[<JavaScript>]\n[<Name \"sortWith\">]\nlet SortWith f (l: list<_>) =\n    let a = Array.ofSeq l\n    Array.sortInPlaceWith f a\n    List.ofArray a\n\n[<Inline>]\n[<JavaScript>]\nlet inline Sum (l: list<'T>) : 'T = Seq.sum l\n\n[<Inline>]\n[<JavaScript>]\nlet inline SumBy (f: 'T -> 'U) (l: list<'T>) : 'U = Seq.sumBy f l\n\n[<JavaScript>]\n[<Name \"tail\">]\nlet Tail (l: list<'T>) = \n    match l with \n    | _ :: t -> t\n    | _ -> failwith \"The input list was empty.\"\n\n[<Inline>]\n[<JavaScript>]\nlet ToArray (l: list<_>) = Array.ofSeq l\n\n[<Inline \"$x\">]\nlet ToSeq<'T> (x: list<'T>) : seq<'T> = x :> _\n\n[<Inline>]\n[<JavaScript>]\nlet TryFind p (l: list<_>) = Seq.tryFind p l\n\n[<Inline>]\n[<JavaScript>]\nlet TryFindIndex p (l: list<_>) = Seq.tryFindIndex p l\n\n[<Inline>]\n[<JavaScript>]\nlet TryPick p (l: list<_>) = Seq.tryPick p l\n\n[<JavaScript>]\n[<Name \"unzip\">]\nlet Unzip (l: list<_>) =\n    let x = System.Collections.Generic.Queue<_>()\n    let y = System.Collections.Generic.Queue<_>()\n    for (a, b) in l do\n        x.Enqueue a\n        y.Enqueue b\n    (List.ofArray (x.ToArray()), List.ofArray (y.ToArray()))\n\n[<JavaScript>]\n[<Name \"unzip3\">]\nlet Unzip3 (l: list<_>) =\n    let x = System.Collections.Generic.Queue<_>()\n    let y = System.Collections.Generic.Queue<_>()\n    let z = System.Collections.Generic.Queue<_>()\n    for (a, b, c) in l do\n        x.Enqueue a\n        y.Enqueue b\n        z.Enqueue c\n    (\n        List.ofArray (x.ToArray()),\n        List.ofArray (y.ToArray()),\n        List.ofArray (z.ToArray())\n    )\n\n[<JavaScript>]\n[<Name \"zip\">]\nlet Zip (l1: list<_>) (l2: list<_>) =\n    List.ofArray (Array.zip (Array.ofSeq l1) (Array.ofSeq l2))\n\n[<JavaScript>]\n[<Name \"zip3\">]\nlet Zip3 (l1: list<_>) (l2: list<_>) (l3: list<_>) =\n    List.ofArray (Array.zip3 (Array.ofSeq l1)\n        (Array.ofSeq l2) (Array.ofSeq l3))\n\n[<JavaScript>]\n[<Name \"chunkBySize\">]\nlet ChunkBySize size list =\n    SeqChunkBySize size (List.toSeq list)\n    |> Seq.toList\n    |> List.map Array.toList\n\n[<JavaScript>]\n[<Name \"compareWith\">]\nlet CompareWith  (f: 'T -> 'T -> int) (l1: list<'T>) (l2: list<'T>) : int =\n    SeqCompareWith f (List.toSeq l1) (List.toSeq l2)\n\n[<JavaScript>]\n[<Name \"countBy\">]\nlet CountBy (f: 'T -> 'K) (l: list<'T>) : list<'K * int> =\n    SeqCountBy f (List.toSeq l)\n    |> Seq.toList\n\n[<JavaScript>]\n[<Name \"distinct\">]\nlet Distinct<'T when 'T : equality> (l: list<'T>) : list<'T> =\n    SeqDistinct (List.toSeq l)\n    |> Seq.toList\n\n[<JavaScript>]\n[<Name \"distinctBy\">]\nlet DistinctBy<'T,'K when 'K : equality>\n        (f: 'T -> 'K) (l: list<'T>) : list<'T> =\n    SeqDistinctBy f (List.toSeq l)\n    |> Seq.toList\n\n[<JavaScript>]\n[<Name \"splitInto\">]\nlet SplitInto count (list: list<'T>) =\n    ArraySplitInto count (List.toArray list)\n    |> Array.toList\n    |> List.map Array.toList\n\n[<JavaScript>]\n[<Name \"except\">]\nlet Except (itemsToExclude: seq<'T>) (l: list<'T>) =\n    SeqExcept itemsToExclude (List.toSeq l)\n    |> Seq.toList\n\n[<JavaScript>]\n[<Name \"tryFindBack\">]\nlet TryFindBack ok (l: list<_>) =\n    ArrayTryFindBack ok (Array.ofList l)\n\n[<JavaScript>]\n[<Name \"findBack\">]\nlet FindBack p (s: list<_>) =\n    match TryFindBack p s with\n    | Some x -> x\n    | None   -> failwith \"KeyNotFoundException\"\n\n[<JavaScript>]\n[<Inline>]\nlet TryFindIndexBack ok (l: list<_>) =\n    ArrayTryFindIndexBack ok (Array.ofList l) \n\n[<JavaScript>]\n[<Name \"findIndexBack\">]\nlet FindIndexBack p (s: list<_>) =\n    match TryFindIndexBack p s with\n    | Some x -> x\n    | None   -> failwith \"KeyNotFoundException\"\n\n[<JavaScript>]\n[<Name \"groupBy\">]\nlet GroupBy (f: 'T -> 'K when 'K : equality)\n            (l: list<'T>) : list<'K * list<'T>> =\n    SeqGroupBy f (List.toSeq l)\n    |> Seq.toList\n    |> List.map (fun (k, s) ->\n        (k, Seq.toList s)\n    )\n\n[<JavaScript>]\n[<Name \"last\">]\nlet Last (list : list<'T>) : 'T =\n    SeqLast (List.toSeq list)\n\n[<JavaScript>]\n[<Name \"contains\">]\nlet Contains (el: 'T) (l: list<'T>) =\n    SeqContains el (List.toSeq l)\n\n[<JavaScript>]\n[<Name \"mapFold\">]\nlet MapFold f zero list =\n    ArrayMapFold f zero (List.toArray list)\n    |> (fun (x, y) ->\n        (Array.toList x, y)\n    )\n\n[<JavaScript>]\n[<Name \"mapFoldBack\">]\nlet MapFoldBack f list zero =\n    ArrayMapFoldBack f (List.toArray list) zero\n    |> (fun (x, y) ->\n        (Array.toList x, y)\n    )\n\n[<JavaScript>]\n[<Name \"pairwise\">]\nlet Pairwise (l: list<'T>) : list<'T * 'T> =\n    SeqPairwise (List.toSeq l)\n    |> Seq.toList\n\n[<JavaScript>]\n[<Name \"indexed\">]\nlet Indexed (list : list<'T>) : list<int * 'T> =\n    List.mapi (fun a b -> (a, b)) list\n\n[<JavaScript>]\n[<Name \"singleton\">]\nlet Singleton<'T> (x: 'T) =\n    [x]\n\n[<JavaScript>]\n[<Inline>]\nlet Skip<'T> i (l : list<'T>) = ListSkip i l\n\n[<JavaScript>]\n[<Inline>]\nlet SkipWhile<'T> (predicate : 'T -> bool) (list : list<'T>) : list<'T> =\n    ListSkipWhile predicate list\n\n[<JavaScript>]\n[<Inline>]\nlet Take<'T> n (list: list<'T>) =\n    Seq.take n list |> List.ofSeq\n\n[<JavaScript>]\n[<Inline>]\nlet TakeWhile<'T> (predicate : 'T -> bool) (list: list<'T>) =\n    Seq.takeWhile predicate list |> List.ofSeq\n\n[<JavaScript>]\n[<Inline>]\nlet Truncate<'T> n (list: list<'T>) =\n    Seq.truncate n list |> List.ofSeq\n\n[<JavaScript>]\n[<Name \"tryHead\">]\nlet TryHead<'T> (list: list<'T>) =\n    match list with\n    | head :: _ ->\n        Some head\n    | [] ->\n        None\n\n[<JavaScript>]\n[<Name \"tryItem\">]\nlet rec TryItem<'T> n (list: list<'T>) =\n    SeqTryItem n list \n\n[<JavaScript>]\n[<Name \"tryLast\">]\nlet TryLast<'T> (list: list<'T>) =\n    SeqTryLast list\n\n[<JavaScript>]\n[<Name \"exactlyOne\">]\nlet ExactlyOne (list : 'T list) =\n    match list with\n    | head :: [] ->\n        head\n    | _ ->\n        failwith \"The input does not have precisely one element.\"\n\n[<JavaScript>]\n[<Name \"unfold\">]\nlet Unfold (f: 'S -> option<'T * 'S>) (s: 'S) : list<'T> =\n    SeqUnfold f s\n    |> Seq.toList\n\n[<JavaScript>]\n[<Inline>]\nlet Where (predicate : 'T -> bool) (s : 'T list) : 'T list =\n    Filter predicate s\n\n[<JavaScript>]\n[<Name \"windowed\">]\nlet Windowed (windowSize: int) (s: 'T list) : list<list<'T>> =\n    SeqWindowed windowSize (List.toSeq s)\n    |> Seq.map List.ofArray |> Seq.toList\n\n[<JavaScript>]\n[<Name \"splitAt\">]\nlet SplitAt (n: int) (list: 'T list) =\n    (Take n list, Skip n list)\n", "// $begin{copyright}\n//\n// This file is part of WebSharper\n//\n// Copyright (c) 2008-2015 IntelliFactory\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you\n// may not use this file except in compliance with the License.  You may\n// obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n// implied.  See the License for the specific language governing\n// permissions and limitations under the License.\n//\n// $end{copyright}\n\nnamespace WebSharper\n\nopen WebSharper.JavaScript\n\nmodule Nullable =\n    [<JavaScript>]\n    let get (x: obj) =\n        if x ==. null then failwith \"Nullable object must have a value.\" else x\n\n//    [<JavaScript>]\n//    let getOrDefault<'T> (x: 'T) =\n//        if x ==. null then Unchecked.defaultof<'T> else x     \n\n    [<JavaScript>]\n    let getOrValue<'T> (x: 'T) (v: 'T)  =\n        if x ==. null then v else x     \n\n[<Proxy(typeof<System.Nullable<_>>)>]\ntype private NullableProxy<'T> =\n    \n    [<Inline \"null\">]\n    new () = {}\n\n    [<Inline \"$v\">]\n    new (v: 'T) = {}\n\n    member this.Value \n        with [<JavaScript; Inline>] get(): 'T = As<'T>(Nullable.get this)\n\n    member this.HasValue\n        with [<JavaScript; Inline>] get() = this !=. null\n\n//    [<Inline>]\n//    [<JavaScript>]\n//    member this.GetValueOrDefault() : 'T = Nullable.getOrDefault (As<'T> this)\n\n    [<Inline>]\n    [<JavaScript>]\n    member this.GetValueOrDefault(v: 'T) : 'T = Nullable.getOrValue (As<'T> this) v\n", "// $begin{copyright}\n//\n// This file is part of WebSharper\n//\n// Copyright (c) 2008-2015 IntelliFactory\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you\n// may not use this file except in compliance with the License.  You may\n// obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n// implied.  See the License for the specific language governing\n// permissions and limitations under the License.\n//\n// $end{copyright}\n\n[<WebSharper.Core.Attributes.Name \"Operators\">]\n[<WebSharper.Core.Attributes.Proxy\n    \"Microsoft.FSharp.Core.Operators, \\\n     FSharp.Core, Culture=neutral, \\\n     PublicKeyToken=b03f5f7f11d50a3a\">]\nmodule private WebSharper.OperatorsProxy\n\n#nowarn \"86\"\n\nopen WebSharper.JavaScript\n\nmodule M = WebSharper.Macro\n\n[<JavaScript>]\n[<Name \"range\">]\nlet ( .. ) (min: 'T) (max: 'T) : seq<'T> =\n    let count = 1 + As max - As min\n    if count <= 0 then Seq.empty\n    else Seq.init count (fun x -> As (x + As min))\n\n[<JavaScript>]\n[<Name \"step\">]\nlet ( .. .. ) (min: 'T1) (step: 'T2) (max: 'T1) : seq<'T1> =\n    let s = sign (As<int> step)\n    Seq.initInfinite (fun k -> As<int> min + k * As<int> step)\n    |> Seq.takeWhile (fun k -> s * (As<int> max - As<int> k) >= 0)\n    |> As\n\n[<Inline \"$r[0]\">]\nlet ( ! ) (r: ref<'T>) = X<'T>\n\n[<Inline \"$a % $b\">]\nlet ( % ) (a: 'T1) (b: 'T2) = X<'T3>\n\n[<Inline \"$a & $b\">]\nlet ( &&& ) (a: 'T1) (b: 'T1) = X<'T1>\n\n[<Inline \"$a * $b\">]\nlet ( * ) (a: 'T1) (b: 'T2) = X<'T3>\n\n[<Inline \"Math.pow($a, $b)\">]\nlet ( ** ) (a: 'T1) (b: 'T2) = X<'T1>\n\n[<Inline \"Math.pow($a, $p)\">]\nlet PowInteger (a: 'T, p: int) = X<'T>\n\n[<Macro(typeof<M.Add>)>]\nlet ( + ) (a: 'T1) (b: 'T2) = X<'T3>\n\n[<Macro(typeof<M.Sub>)>]\nlet ( - ) (a: 'T1) (b: 'T2) = X<'T3>\n\n[<Macro(typeof<M.Division>)>]\nlet ( / ) (x: 'T1) (y: 'T2) = X<'T3>\n\n[<Inline \"void ($a[0] = $b)\">]\nlet ( := ) (a: ref<'T>) (b: 'T) = X<unit>\n\n[<Inline \"function (x) { return $f($g(x)); }\">]\nlet ( << ) (f: 'T1 -> 'T2) (g: 'T3 -> 'T1) = X<'T3 -> 'T2>\n\n[<Inline \"$a << $b\">]\nlet inline ( <<< ) (a: 'T) (b: int) = X<'T>\n\n[<Inline \"$f($x)\">]\nlet ( <| ) (f: 'T -> 'TR) (x: 'T) = X<'TR>\n\n[<Inline \"$f($x)($y)\">]\nlet ( <|| ) (f: 'T1 -> 'T2 -> 'TR) (x: 'T1, y: 'T2) = X<'TR>\n\n[<Inline \"$f($x)($y)($z)\">]\nlet ( <||| ) (f: 'T1 -> 'T2 -> 'T3 -> 'TR)\n             (x: 'T1, y: 'T2, z: 'T3) = X<'TR>\n\n[<Macro(typeof<M.EQ>)>]\nlet ( = ) (a: 'T) (b: 'T) = X<bool>\n\n[<Macro(typeof<M.NE>)>]\nlet ( <> ) (a: 'T) (b: 'T) =  X<bool>\n\n[<Macro(typeof<M.LT>)>]\nlet ( < ) (a: 'T) (b: 'T) = X<bool>\n\n[<Macro(typeof<M.GT>)>]\nlet ( > ) (a: 'T) (b: 'T) = X<bool>\n\n[<Macro(typeof<M.LE>)>]\nlet ( <= ) (a: 'T) (b: 'T) = X<bool>\n\n[<Macro(typeof<M.GE>)>]\nlet ( >= ) (a: 'T) (b: 'T) = X<bool>\n\n[<Inline \"function (x) {return $g($f(x))}\">]\nlet ( >> ) (f: 'T1 -> 'T2) (g: 'T2 -> 'T3) = X<'T1->'T3>\n\n[<Inline \"$a >> $b\">]\nlet inline ( >>> ) (a: 'T) (b: int) : 'T = a >>> b\n\n[<Inline>]\n[<JavaScript>]\nlet ( @ ) a b = List.append a b\n\n[<Inline \"$a + $b\">]\nlet ( ^ ) (a: string) (b: string) = a + b\n\n[<Inline \"$a ^ $b\">]\nlet ( ^^^ ) (a: 'T) (b: 'T) = X<'T>\n\n[<Inline \"$f($x)\">]\n[<Name \"pipe\">]\nlet ( |> ) (x: 'T1) (f: 'T1 -> 'T2) = X<'T2>\n\n[<Inline \"$f($x)($y)\">]\n[<Name \"pipe2\">]\nlet ( ||> ) (x: 'T1, y: 'T2) (f: 'T1 -> 'T2 -> 'TR) = X<'TR>\n\n[<Inline \"$a | $b\">]\nlet ( ||| ) (a: 'T) (b: 'T) = X<'T>\n\n[<Inline \"$f($x)($y)($z)\">]\nlet ( |||> ) (x: 'T1, y: 'T2, z: 'T3)\n             (f: 'T1 -> 'T2 -> 'T3 -> 'TR) = X<'TR>\n\n[<Inline \"+ $x\">]\nlet ( ~+ ) (x: 'T) = X<'T>\n\n[<Inline \"- $x\">]\nlet ( ~- ) (x: 'T) = X<'T>\n\n[<Inline \"~ $x\">]\nlet ( ~~~ ) (x: 'T) = X<'T>\n\n[<Inline \"Math.abs($x)\">]\nlet Abs (x: 'T) = X<'T>\n\n[<Inline \"Math.acos($x)\">]\nlet Acos (x: 'T) = X<'T>\n\n[<Inline \"Math.asin($x)\">]\nlet Asin (x: 'T) = X<'T>\n\n[<Inline \"Math.atan($x)\">]\nlet Atan (x: 'T) = X<'T>\n\n[<Inline \"Math.atan2($x, $y)\">]\nlet Atan2 (x: 'T1) (y: 'T1) = X<'T2>\n\n[<Inline \"$x\">]\nlet Box (x: 'T) = X<obj>\n\n[<Inline \"Math.ceil($x)\">]\nlet Ceiling (x: 'T) = X<'T>\n\n[<Macro(typeof<M.Char>)>]\nlet ToChar (x: 'T) = X<char>\n\n[<JavaScript>]\nlet Compare<'T> (a: 'T) (b: 'T) = Unchecked.compare a b\n\n[<Inline \"Math.cos($x)\">]\nlet Cos (x: 'T) = X<'T>\n\n[<Inline \"(Math.exp($x)+Math.exp(-$x))/2\">]\nlet Cosh<'T> (x: 'T) = X<'T>\n\n[<Direct \"void ($x[0]--)\">]\n[<Name \"WebSharper.Ref.decr\">]\nlet Decrement (x: ref<int>) = ()\n\n[<JavaScript>]\nlet DefaultArg x d =\n    match x with\n    | Some x -> x\n    | None   -> d\n\n[<Inline \"$x\">]\nlet Enum<'T when 'T : enum<int>> (x: 'T) = X<'T>\n\n[<Inline \"Number($x)\">]\nlet ToDouble (x: 'T) = X<double>\n\n[<Inline \"Math.exp($x)\">]\nlet inline Exp (x: 'T) = X<'T>\n\n[<JavaScript>]\nlet FailWith (msg: string) : 'T = raise (exn msg)\n\n[<Inline \"Number($x)\">]\nlet ToFloat (x: 'T) = X<'T>\n\n[<Inline \"Math.floor($x)\">]\nlet Floor (x: 'T) = X<'T>\n\n[<Inline \"$x[0]\">]\nlet Fst (x: System.Tuple<'T1,'T2>) = X<'T1>\n\n[<Inline>]\n[<JavaScript>]\nlet Hash<'T when 'T : equality> (x: 'T) = Unchecked.hash x\n\n[<Inline \"$x\">]\nlet Identity (x: 'T) = X<'T>\n\n[<Inline \"void $x\">]\nlet Ignore (x: 'T) = X<unit>\n\n[<Direct \"void ($x[0]++)\">]\n[<Name \"WebSharper.Ref.incr\">]\nlet Increment (x: ref<int>) = ()\n\n[<Inline \"Infinity\">]\nlet Infinity = Unchecked.defaultof<double>\n\n[<Inline \"($x << 0)\">]\nlet ToInt (x: 'T) = X<int>\n\n[<Inline \"Number($x)\">]\nlet ToSingle (x: 'T) = X<'T>\n\n[<Inline \"($x << 0)\">]\nlet ToInt32 (x: 'T) = X<int32>\n\n[<Inline \"$x\">]\nlet ToEnum<'T> (x: 'T) = X<'T>\n\n[<Inline \"Math.floor($x)\">]\nlet ToInt64 (x: 'T) = X<int64>\n\n[<Inline \"Math.log($x)\">]\nlet Log (x: 'T) = X<'T>\n\n[<Inline \"Math.log($x)/Math.log(10)\">]\nlet Log10 (x: 'T) = X<'T>\n\n[<JavaScript>]\nlet Max<'T when 'T : comparison> (a: 'T) (b: 'T) =\n    if a > b then a else b\n\n[<JavaScript>]\nlet Min<'T when 'T : comparison> (a: 'T) (b: 'T) =\n    if a < b then a else b\n\n[<Inline \"Infinity\">]\nlet InfinitySingle = single infinity\n\n[<Inline \"NaN\">]\nlet NaNSingle = single nan\n\n[<Inline \"NaN\">]\nlet NaN = nan\n\n[<Inline \"!$x\">]\nlet Not (x: bool) = X<bool>\n\n[<JavaScript>]\nlet Pown<'T> (a: 'T) (n: int) =\n    let a = box a :?> double\n    let rec p n =\n        match n with\n        | 1 ->\n            a\n        | n when n % 2 = 0 ->\n            let b = p (n / 2)\n            b * b\n        | n ->\n            a * (p (n - 1))\n    p n\n\n[<Direct \"throw $e\">]\nlet Raise (e: exn) = X<'T>\n\n[<Inline \"[$x]\">]\nlet Ref (x: 'T) = X<ref<'T>>\n\n[<Inline \"Math.round($x)\">]\nlet Round (x: 'T) = X<'T>\n\n[<Inline \"$x\">]\nlet CreateSequence (x: seq<'T>) = X<seq<'T>>\n\n[<JavaScript>]\nlet Sign<'T> (x: 'T) =\n    match As<int> x with\n    | 0            -> 0\n    | n when n < 0 -> -1\n    | _            -> 1\n\n[<Inline \"Math.sin($x)\">]\nlet Sin (x: 'T) = X<'T>\n\n[<Inline \"(Math.exp($x)-Math.exp(-$x))/2\">]\nlet Sinh (x: 'T) = x\n\n[<Inline \"$x[1]\">]\nlet Snd (x: System.Tuple<'T1,'T2>) = X<'T2>\n\n[<Inline \"Math.sqrt($x)\">]\nlet Sqrt (x: 'T1) = X<'T2>\n\n[<Macro(typeof<M.String>)>]\nlet ToString (x: 'T) = X<string>\n\n[<Inline \"Math.tan($x)\">]\nlet inline Tan (x: 'T) = X<'T>\n\n[<Inline \"(Math.exp(2*$x)-1)/(Math.exp(2*$x)+1)\">]\nlet Tanh (x: 'T) = X<'T>\n\n[<JavaScript>]\nlet inline Truncate<'T> (x: 'T) =\n    if x <. 0 then Ceiling x else Floor x\n\n[<Inline \"$x\">]\nlet Unbox (x: obj) = X<'T>\n\n[<Inline>]\n[<JavaScript>]\nlet IsNull (x: obj) = x = null\n\n[<JavaScript>]\nlet Using t f =\n    try f t finally (t :> System.IDisposable).Dispose()\n\n[<JavaScript>]\n[<Name \"KeyValue\">]\nlet KeyValuePattern (kvp: System.Collections.Generic.KeyValuePair<_,_>) =\n    (kvp.Key, kvp.Value)\n\n", "// $begin{copyright}\n//\n// This file is part of WebSharper\n//\n// Copyright (c) 2008-2015 IntelliFactory\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you\n// may not use this file except in compliance with the License.  You may\n// obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n// implied.  See the License for the specific language governing\n// permissions and limitations under the License.\n//\n// $end{copyright}\n\n[<WebSharper.Core.Attributes.NameAttribute \"Option\">]\n[<WebSharper.Core.Attributes.Proxy\n    \"Microsoft.FSharp.Core.OptionModule, \\\n     FSharp.Core, Culture=neutral, \\\n     PublicKeyToken=b03f5f7f11d50a3a\">]\nmodule private WebSharper.OptionModuleProxy\n\nopen WebSharper.JavaScript\n\n[<JavaScript>]\n[<Name \"bind\">]\nlet Bind f x =\n    match x with\n    | Some x -> f x\n    | None   -> None\n\n[<Inline \"$x.$\">]\nlet Count (x: option<_>) = X<int>\n\n[<JavaScript>]\n[<Name \"exists\">]\nlet Exists p x =\n    match x with\n    | Some x -> p x\n    | None   -> false\n\n[<JavaScript>]\n[<Name \"fold\">]\nlet Fold<'T,'S> (f: 'S -> 'T -> 'S) (s: 'S) (x: option<'T>) : 'S =\n    match x with\n    | Some x -> f s x\n    | None   -> s\n\n[<JavaScript>]\n[<Name \"foldBack\">]\nlet FoldBack f x s =\n    match x with\n    | Some x -> f x s\n    | None   -> s\n\n[<JavaScript>]\n[<Name \"forall\">]\nlet ForAll p x =\n    match x with\n    | Some x -> p x\n    | None   -> true\n\n[<Inline \"$x.$0\">]\nlet GetValue (x: option<'T>) = X<'T>\n\n[<Inline \"$x.$==0\">]\nlet IsNone (x: option<'T>) = false\n\n[<Inline \"$x.$==1\">]\nlet IsSome (x: option<'T>) =  false\n\n[<JavaScript>]\n[<Name \"iter\">]\nlet Iterate p x =\n    match x with\n    | Some x -> p x\n    | None   -> ()\n\n[<JavaScript>]\n[<Name \"map\">]\nlet Map f x =\n    match x with\n    | Some x    -> Some (f x)\n    | None      -> None\n\n[<JavaScript>]\n[<Name \"toArray\">]\nlet ToArray x =\n    match x with\n    | Some x -> [|x|]\n    | None   -> [||]\n\n[<JavaScript>]\n[<Name \"toList\">]\nlet ToList x =\n    match x with\n    | Some x -> [x]\n    | None   -> []\n\n[<JavaScript>]\n[<Name \"ofObj\">]\nlet OfObj o = \n    if o ==. null then None else Some o\n\n[<JavaScript>]\n[<Name \"toObj\">]\nlet ToObj o = \n    match o with\n    | Some v -> v\n    | None -> null\n\n\n[<JavaScript>]\n[<Inline>]\nlet OfNullable o = OfObj o                         \n\n[<JavaScript>]\n[<Inline>]\nlet ToNullable o = ToObj o \n\n[<JavaScript>]\n[<Name \"filter\">]\nlet Filter f o =\n    match o with\n    | None -> None\n    | Some v -> if f v then Some v else None\n", "// $begin{copyright}\n//\n// This file is part of WebSharper\n//\n// Copyright (c) 2008-2015 IntelliFactory\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you\n// may not use this file except in compliance with the License.  You may\n// obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n// implied.  See the License for the specific language governing\n// permissions and limitations under the License.\n//\n// $end{copyright}\n\n/// Defines macros used by proxy definitions.\nmodule private WebSharper.PrintfHelpers\n\nopen WebSharper.JavaScript\n\n[<JavaScript>]\nlet toSafe (s: string) =\n    if s ==. null then \"\" else s  \n\n[<JavaScript>]\nlet plusForPos (n: obj, s) =\n    if 0 <=. n then \"+\" + s else s     \n\n[<JavaScript>]\nlet spaceForPos (n: obj, s) =\n    if 0 <=. n then \" \" + s else s      \n\n[<Inline \"$s.substr(1)\">]\nlet skip1 (s: string) = X<string>\n\n[<JavaScript>]\nlet padNumLeft (s: string, l) =\n    let f = (As<string[]> s).[0]\n    if f = \" \" || f = \"+\" || f = \"-\" then\n        f + (skip1 s).PadLeft(l - 1, '0')\n    else s.PadLeft(l, '0')\n\n[<JavaScript>]\nlet printList (p: obj -> string, o: obj list) =\n     \"[\" + (o |> Seq.map p |> String.concat \"; \") + \"]\" \n\n[<JavaScript>]\nlet printArray (p: obj -> string, o: obj[]) =\n     \"[|\" + (o |> Array.map p |> String.concat \"; \") + \"|]\" \n\n[<JavaScript>]\nlet printArray2D (p: obj -> string, o: obj[,]) =\n     \"[[\" + (\n        seq {\n            let l2 = Array2D.length2 o\n            for i in 0 .. Array2D.length1 o - 1 ->\n                seq { for j in 0 .. l2 - 1 -> p o.[i, j] } \n                |> String.concat \"; \"\n        }\n        |> String.concat \"][\"\n     ) + \"]]\" \n\n[<JavaScript>]\nlet rec prettyPrint (o: obj) =\n    let printObject (o: obj) =\n        let s = string o\n        if s = \"[object Object]\" then\n            \"{\" + (JS.GetFields o |> Array.map (fun (k, v) -> k + \" = \" + prettyPrint v) |> String.concat \"; \") + \"}\"\n        else s\n    let t = JS.TypeOf o\n    if t  ==. JS.String then\n        \"\\\"\" + As o + \"\\\"\"\n    elif t  ==. JS.Object then\n        if JS.InstanceOf o JS.Global?Array then\n            \"[|\" + (As o |> Array.map prettyPrint |> String.concat \"; \") + \"|]\"\n        else printObject o\n    else string o\n", "// $begin{copyright}\n//\n// This file is part of WebSharper\n//\n// Copyright (c) 2008-2015 IntelliFactory\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you\n// may not use this file except in compliance with the License.  You may\n// obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n// implied.  See the License for the specific language governing\n// permissions and limitations under the License.\n//\n// $end{copyright}\n\n[<WebSharper.Core.Attributes.Name \"Queue\">]\nmodule private WebSharper.QueueProxy\n\nopen WebSharper.JavaScript\n\n[<Inline \"$arr.splice($offset,$len)\">]\nlet splice (arr: obj) (offset: int) (len: int) = X<unit>\n\n[<JavaScript>]\nlet Clear (a: obj) =\n    splice a 0 (a :?> obj []).Length\n\n[<JavaScript>]\nlet Contains (a: obj) (el: 'T) =\n    Seq.exists ((=) el) (a :?> seq<'T>)\n\n[<JavaScript>]\nlet CopyTo (a: obj) (array: 'T[]) (index: int) =\n    Array.blit (a :?> 'T []) 0 array index (a :?> 'T[]).Length\n\n[<Proxy(typeof<System.Collections.Generic.Queue<_>>)>]\ntype private QueueProxy<'T when 'T : equality>\n\n    [<Inline \"$data\">] (data: 'T []) =\n\n    [<Inline \"[]\">]\n    new () = QueueProxy [||]\n\n    member this.Count with [<Inline \"$this.length\">] get () = X<int>\n\n    [<Inline>]\n    [<JavaScript>]\n    member this.Clear() = Clear this\n\n    [<Inline>]\n    [<JavaScript>]\n    member this.Contains(x: 'T) = Contains this x\n\n    [<Inline>]\n    [<JavaScript>]\n    member this.CopyTo(array: 'T [], index: int) = CopyTo this array index\n\n    [<Inline \"$this[0]\">]\n    member this.Peek() = X<'T>\n\n    [<Inline \"$this.shift()\">]\n    member this.Dequeue() = X<'T>\n\n    [<Inline \"$this.push($x)\">]\n    member this.Enqueue(x: 'T) = X<unit>\n\n    [<Inline \"$this.slice(0)\">]\n    member this.ToArray() = data\n\n", "// $begin{copyright}\n//\n// This file is part of WebSharper\n//\n// Copyright (c) 2008-2015 IntelliFactory\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you\n// may not use this file except in compliance with the License.  You may\n// obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n// implied.  See the License for the specific language governing\n// permissions and limitations under the License.\n//\n// $end{copyright}\n\nnamespace WebSharper\n\nopen WebSharper.JavaScript\n\n[<AutoOpen>]\nmodule RandomHelpers =\n    [<Inline \"Math.floor(Math.random() * 2147483648)\">]\n    let Next() = X<int>\n    \n    [<Inline \"Math.floor(Math.random() * $maxValue)\">]\n    let NextMax (maxValue: int) = X<int>\n\n[<Name \"Random\">]\n[<Proxy(typeof<System.Random>)>]\n[<JavaScript>]\ntype RandomProxy() =\n    member this.Next() = Next()\n\n    member this.Next maxValue =\n        if maxValue < 0 then\n            failwith \"'maxValue' must be greater than zero.\"\n        else NextMax maxValue\n\n    member this.Next (minValue: int, maxValue: int) =\n        if minValue > maxValue then\n            failwith \"'minValue' cannot be greater than maxValue.\"\n        else minValue + NextMax (maxValue - minValue)\n\n    member this.NextBytes (buffer: byte[]) =\n        for i = 0 to buffer.Length - 1 do\n            buffer.[i] <- As (NextMax 256)\n\n    [<Inline \"Math.random()\">]\n    member this.NextDouble() = X<float>\n", "// $begin{copyright}\n//\n// This file is part of WebSharper\n//\n// Copyright (c) 2008-2015 IntelliFactory\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you\n// may not use this file except in compliance with the License.  You may\n// obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n// implied.  See the License for the specific language governing\n// permissions and limitations under the License.\n//\n// $end{copyright}\n\nmodule WebSharper.Remoting\n\nopen WebSharper.JavaScript\n\nmodule A = WebSharper.Core.Attributes\nmodule R = WebSharper.Core.Remoting\n\n[<A.JavaScript>]\nlet mutable EndPoint = \"?\"\n\n[<A.JavaScript>]\nlet UseHttps() =\n    try\n        if not (JS.Window.Location.Href.StartsWith \"https://\") then\n            EndPoint <- JS.Window.Location.Href.Replace(\"http://\", \"https://\")\n            true\n        else false\n    with _ ->\n        // This function is intended to be callable from the top-level in a module,\n        // which means that it will be (unnecessarily) called on the server too\n        // and throw NotImplementedException. Just silence it.\n        false\n\ntype Data = string\ntype Headers = obj\ntype Url = string\n\ntype IAjaxProvider =\n    abstract member Async : Url -> Headers -> Data -> (Data -> unit) ->\n        (exn -> unit) -> unit\n\n    abstract member Sync : Url -> Headers -> Data -> Data\n\n[<A.Direct @\"\n    var xhr = new XMLHttpRequest();\n    var csrf = document.cookie.replace(new RegExp('(?:(?:^|.*;)\\\\s*csrftoken\\\\s*\\\\=\\\\s*([^;]*).*$)|^.*$'), '$1');\n    xhr.open('POST', $url, $async);\n    if ($async == true) {\n        xhr.withCredentials = true;\n    }\n    for (var h in $headers) {\n        xhr.setRequestHeader(h, $headers[h]);\n    }\n    if (csrf) {\n        xhr.setRequestHeader('x-csrftoken', csrf);\n    }\n    function k() {\n        if (xhr.status == 200) {\n            $ok(xhr.responseText)\n        } else if ($csrf && xhr.status == 403 && xhr.responseText == 'CSRF') {\n            $csrf();\n        } else {\n            var msg = 'Response status is not 200: ';\n            $err(new Error(msg + xhr.status));\n        }\n    }\n    if ('onload' in xhr) {\n        xhr.onload = xhr.onerror = xhr.onabort = k;\n    } else {\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState == 4) {\n                k();\n            }\n        };\n    }\n    xhr.send($data);\n\">]\nlet private ajax (async: bool) (url: Url) (headers: Headers) (data: Data)\n    (ok: Data -> unit) (err: exn -> unit) (csrf: unit -> unit) = ()\n\ntype XhrProvider [<A.JavaScript>] () =\n    interface IAjaxProvider with\n\n        [<A.JavaScript>]\n        member this.Async url headers data ok err =\n            ajax true url headers data ok err\n                (fun () -> ajax true url headers data ok err JS.Undefined)\n\n        [<A.JavaScript>]\n        member this.Sync url headers data =\n            let res = ref Unchecked.defaultof<_>\n            ajax false url headers data\n                (fun x -> res := x)\n                (fun e -> raise e)\n                (fun () ->\n                    ajax false url headers data\n                        (fun x -> res := x)\n                        (fun e -> raise e)\n                        JS.Undefined)\n            !res\n\n[<A.JavaScript>]\nlet mutable AjaxProvider = XhrProvider() :> IAjaxProvider\n\n[<A.Inline \"void ($obj[$key] = $value)\">]\nlet ( ?<- ) (obj: obj) (key: string) (value: obj) =\n    X<unit>\n\n[<A.JavaScript>]\nlet makeHeaders (m: string) =\n    let headers = obj ()\n    (?<-) headers \"content-type\" \"application/json\"\n    (?<-) headers \"x-websharper-rpc\" m\n    headers\n\n[<A.JavaScript>]\nlet makePayload (data: obj []) =\n    Json.Stringify data\n\ntype IRemotingProvider =\n    abstract member Sync : string -> obj[] -> obj\n    abstract member Async : string -> obj[] -> Async<obj>\n    abstract member Send : string -> obj[] -> unit\n\n[<A.JavaScript>]\n[<Sealed>]\ntype AjaxRemotingProvider =\n\n    static member Sync m data : obj =\n        let data = AjaxProvider.Sync EndPoint (makeHeaders m) (makePayload data)\n        Json.Activate (Json.Parse data)\n\n    static member Async m data : Async<obj> =\n        let headers = makeHeaders m\n        let payload = makePayload data\n        async {\n            let! token = Async.CancellationToken\n            return! Async.FromContinuations (fun (ok, err, cc) ->\n                let waiting = ref true\n                let reg =\n                    token.Register(fun () ->\n                        if !waiting then\n                            waiting := false\n                            cc (new System.OperationCanceledException())\n                    )\n                let ok (x: Data) = \n                    if !waiting then\n                        waiting := false\n                        reg.Dispose()\n                        ok (Json.Activate (Json.Parse x))\n                let err (e: exn) =\n                    if !waiting then\n                        waiting := false\n                        reg.Dispose()\n                        err e\n                AjaxProvider.Async EndPoint headers payload ok err)\n        }\n\n    static member Send m data =\n        Async.Start (Async.Ignore (AjaxRemotingProvider.Async m data))\n", "// $begin{copyright}\n//\n// This file is part of WebSharper\n//\n// Copyright (c) 2008-2015 IntelliFactory\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you\n// may not use this file except in compliance with the License.  You may\n// obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n// implied.  See the License for the specific language governing\n// permissions and limitations under the License.\n//\n// $end{copyright}\n\n[<WebSharper.Core.Attributes.Name \"Seq\">]\n[<WebSharper.Core.Attributes.Proxy\n    \"Microsoft.FSharp.Collections.SeqModule, \\\n     FSharp.Core, Culture=neutral, \\\n     PublicKeyToken=b03f5f7f11d50a3a\">]\nmodule private WebSharper.SeqModuleProxy\n\nopen WebSharper.JavaScript\nopen WebSharper.CollectionInternals\n\n[<JavaScript>]\n[<Inline>]\nlet safeDispose (x: System.IDisposable) =\n    if x <> null then x.Dispose()\n\n[<JavaScript>]\n[<Name \"append\">]\nlet Append (s1: seq<'T>) (s2: seq<'T>) : seq<'T> =\n    Enumerable.Of (fun () ->\n        let e1 = Enumerator.Get s1\n        let first = ref true\n        Enumerator.NewDisposing e1 (fun x -> safeDispose x.State) (fun x ->\n            if x.State.MoveNext() then\n                x.Current <- x.State.Current\n                true\n            else \n                safeDispose x.State\n                x.State <- null\n                if !first then\n                    first := false\n                    x.State <- Enumerator.Get s2\n                    if x.State.MoveNext() then\n                        x.Current <- x.State.Current\n                        true\n                    else\n                        x.State.Dispose()\n                        x.State <- null\n                        false\n                else \n                    false)) \n\n[<JavaScript>]\n[<Name \"average\">]\nlet Average<'T> (s: seq<'T>) : 'T =\n    let (count, sum) =\n        Seq.fold\n            (fun (n, s) x -> (n + 1, s + As<float> x))\n            (0, 0.)\n            s\n    As<'T> (sum / As<float> count)\n\n[<JavaScript>]\n[<Name \"averageBy\">]\nlet AverageBy<'T,'U> (f: 'T -> 'U) (s: seq<'T>) : 'U =\n    let (count, sum) =\n        Seq.fold\n            (fun (n, s) x -> (n + 1, s + As<float> (f x)))\n            (0, 0.)\n            s\n    As<'U> (sum / As<float> count)\n\n[<JavaScript>]\n[<Name \"cache\">]\nlet Cache<'T> (s: seq<'T>) : seq<'T> =\n    let cache = new System.Collections.Generic.Queue<'T>()\n    let enum  = ref (Enumerator.Get s)\n    Enumerable.Of <| fun () ->\n        let next (e: Enumerator.T<_,_>) =\n            if e.State + 1 < cache.Count then\n                e.State   <- e.State + 1\n                e.Current <- (?) cache (As e.State)\n                true\n            else\n                let en = !enum\n                if en = null then false\n                elif en.MoveNext() then\n                    e.State   <- e.State + 1\n                    e.Current <- en.Current\n                    cache.Enqueue e.Current\n                    true\n                else\n                    en.Dispose()\n                    enum := null\n                    false\n        Enumerator.New 0 next\n\n/// IEnumerable is not supported.\n[<Inline \"$i\">]\nlet Cast<'T> (i: System.Collections.IEnumerable) = X<seq<'T>>\n\n[<JavaScript>]\n[<Inline>]\nlet Contains (el: 'T) (s: seq<'T>) =\n    SeqContains el s\n\n[<JavaScript>]\n[<Name \"choose\">]\nlet Choose (f: 'T -> option<'U>) (s: seq<'T>) : seq<'U> =\n    s\n    |> Seq.collect (fun x ->\n        match f x with\n        | Some v -> [v]\n        | None   -> [])\n\n[<JavaScript>]\n[<Inline>]\nlet ChunkBySize (size: int) (s: seq<'T>) = SeqChunkBySize size s\n\n[<JavaScript>]\n[<Name \"collect\">]\nlet Collect f s = Seq.concat (Seq.map f s)\n\n[<JavaScript>]\n[<Inline>]\nlet CompareWith  (f: 'T -> 'T -> int) (s1: seq<'T>) (s2: seq<'T>) : int =\n    SeqCompareWith f s1 s2\n\n[<JavaScript>]\n[<Name \"concat\">]\nlet Concat (ss: seq<#seq<'T>>) : seq<'T> =\n    Enumerable.Of (fun () ->\n        let outerE = Enumerator.Get ss\n        let rec next (st: Enumerator.T<Enumerator.IE<'T>,'T>) =\n            match st.State with\n            | null ->\n                if outerE.MoveNext() then\n                    st.State <- Enumerator.Get outerE.Current\n                    next st\n                else\n                    outerE.Dispose()\n                    false\n            | innerE ->\n                if innerE.MoveNext() then\n                    st.Current <- innerE.Current\n                    true\n                else\n                    st.Dispose()\n                    st.State <- null\n                    next st\n        Enumerator.NewDisposing null (fun st -> \n            safeDispose st.State \n            safeDispose outerE) \n            next)\n\n[<JavaScript>]\n[<Inline>]\nlet CountBy (f: 'T -> 'K) (s: seq<'T>) : seq<'K * int> =\n    SeqCountBy f s\n\n[<JavaScript>]\n[<Name \"delay\">]\nlet Delay<'T> (f: unit -> seq<'T>) : seq<'T> =\n    Enumerable.Of (fun () -> Enumerator.Get(f()))\n\n[<JavaScript>]\n[<Inline>]\nlet Distinct<'T when 'T : equality> (s: seq<'T>) : seq<'T> =\n    SeqDistinct s\n\n[<JavaScript>]\n[<Inline>]\nlet DistinctBy<'T,'K when 'K : equality>\n        (f: 'T -> 'K) (s: seq<'T>) : seq<'T> =\n    SeqDistinctBy f s\n\n[<JavaScript>]\n[<Name \"splitInto\">]\nlet SplitInto count (s: seq<'T>) =\n    if count <= 0 then failwith \"Count must be positive\"\n    Seq.delay (fun () -> ArraySplitInto count (Array.ofSeq s) |> Seq.ofArray)   \n\n[<JavaScript>]\n[<Name \"empty\">]\nlet Empty<'T> : seq<'T> = [||] :> _\n\n[<JavaScript>]\n[<Inline>]\nlet Except (itemsToExclude: seq<'T>) (s: seq<'T>) =\n    SeqExcept itemsToExclude s\n\n[<JavaScript>]\n[<Name \"exists\">]\nlet Exists p (s: seq<_>) =\n    use e = Enumerator.Get s\n    let mutable r = false\n    while not r && e.MoveNext() do\n        r <- p e.Current\n    r\n\n[<JavaScript>]\n[<Name \"exists2\">]\nlet Exists2 p (s1: seq<_>) (s2: seq<_>) =\n    use e1 = Enumerator.Get s1\n    use e2 = Enumerator.Get s2\n    let mutable r = false\n    while not r && e1.MoveNext() && e2.MoveNext() do\n        r <- p e1.Current e2.Current\n    r\n\n[<JavaScript>]\n[<Name \"filter\">]\nlet Filter (f: 'T -> bool) (s: seq<'T>) =\n    Enumerable.Of <| fun () ->\n        let enum = Enumerator.Get s\n        Enumerator.NewDisposing () (fun _ -> enum.Dispose()) <| fun e ->\n            let mutable loop = enum.MoveNext()\n            let mutable c    = enum.Current\n            let mutable res  = false\n            while loop do\n                if f c then\n                    e.Current <- c\n                    res       <- true\n                    loop      <- false\n                else\n                    if enum.MoveNext() then\n                        c <- enum.Current\n                    else\n                        loop <- false\n            res\n\n[<JavaScript>]\n[<Name \"find\">]\nlet Find p (s: seq<_>) =\n    match Seq.tryFind p s with\n    | Some x -> x\n    | None   -> failwith \"KeyNotFoundException\"\n\n[<JavaScript>]\n[<Name \"findIndex\">]\nlet FindIndex p (s: seq<_>) =\n    match Seq.tryFindIndex p s with\n    | Some x -> x\n    | None   -> failwith \"KeyNotFoundException\"\n\n[<JavaScript>]\n[<Name \"fold\">]\nlet Fold<'T,'S> (f: 'S -> 'T -> 'S) (x: 'S) (s: seq<'T>) : 'S =\n    let mutable r = x\n    use e = Enumerator.Get s\n    while e.MoveNext() do\n        r <- f r e.Current\n    r\n\n[<JavaScript>]\n[<Name \"forall\">]\nlet ForAll p s =\n    not (Seq.exists (fun x -> not (p x)) s)\n\n[<JavaScript>]\n[<Name \"forall2\">]\nlet ForAll2 p s1 s2 =\n    not (Seq.exists2 (fun x y -> not (p x y)) s1 s2)\n\n[<JavaScript>]\n[<Inline>]\nlet GroupBy (f: 'T -> 'K when 'K : equality)\n            (s: seq<'T>) : seq<'K * seq<'T>> =\n    SeqGroupBy f s\n\n[<JavaScript>]\n[<Name \"head\">]\nlet Head (s: seq<'T>) : 'T =\n    use e = Enumerator.Get s\n    if e.MoveNext() then e.Current else InsufficientElements()\n\n[<JavaScript>]\n[<Name \"init\">]\nlet Initialize (n: int) (f: int -> 'T) : seq<'T> =\n    Seq.take n (Seq.initInfinite f)\n\n[<JavaScript>]\n[<Name \"initInfinite\">]\nlet InitializeInfinite (f: int -> 'T) : seq<'T> =\n    Enumerable.Of <| fun () ->\n        Enumerator.New 0 <| fun e ->\n            e.Current <- f e.State\n            e.State   <- e.State + 1\n            true\n\n[<JavaScript>]\n[<Name \"isEmpty\">]\nlet IsEmpty (s: seq<'T>) : bool =\n    use e = Enumerator.Get s\n    not (e.MoveNext())\n\n[<JavaScript>]\n[<Name \"iter\">]\nlet Iterate p (s: seq<_>) =\n    Seq.iteri (fun _ x -> p x) s\n\n[<JavaScript>]\n[<Name \"iter2\">]\nlet Iterate2 p (s1: seq<_>) (s2: seq<_>) =\n    use e1 = Enumerator.Get s1\n    use e2 = Enumerator.Get s2\n    while e1.MoveNext() && e2.MoveNext() do\n        p e1.Current e2.Current\n\n[<JavaScript>]\n[<Name \"iteri\">]\nlet IterateIndexed p (s: seq<_>) =\n    let mutable i = 0\n    use e = Enumerator.Get s\n    while e.MoveNext() do\n        p i e.Current\n        i <- i + 1\n\n[<JavaScript>]\n[<Inline>]\nlet Last (s: seq<_>) =\n    SeqLast s\n\n[<JavaScript>]\n[<Name \"length\">]\nlet Length (s: seq<_>) =\n    let mutable i = 0\n    use e = Enumerator.Get s\n    while e.MoveNext() do\n        i <- i + 1\n    i\n\n[<JavaScript>]\n[<Name \"map\">]\nlet Map (f: 'T -> 'U) (s: seq<'T>) : seq<'U> =\n    Enumerable.Of <| fun () ->\n        let en = Enumerator.Get s\n        Enumerator.NewDisposing () (fun _ -> en.Dispose()) <| fun e ->\n            if en.MoveNext() then\n                e.Current <- f en.Current\n                true\n            else\n                false\n\n[<JavaScript>]\n[<Name \"mapi\">]\nlet MapIndexed (f: int -> 'T -> 'U) (s: seq<'T>) : seq<'U> =\n    Seq.map2 f (Seq.initInfinite id) s\n\n[<JavaScript>]\n[<Name \"map2\">]\nlet Map2 (f: 'T -> 'U -> 'V) (s1: seq<'T>) (s2: seq<'U>) : seq<'V> =\n    Enumerable.Of <| fun () ->\n        let e1 = Enumerator.Get s1\n        let e2 = Enumerator.Get s2\n        Enumerator.NewDisposing () (fun _ -> e1.Dispose(); e2.Dispose()) <| fun e ->\n            if e1.MoveNext() && e2.MoveNext() then\n                e.Current <- f e1.Current e2.Current\n                true\n            else\n                false\n\n[<JavaScript>]\n[<Name \"maxBy\">]\nlet MaxBy (f: 'T -> 'U) (s: seq<'T>) : 'T =\n    Seq.reduce (fun x y -> if f x >= f y then x else y) s\n\n[<JavaScript>]\n[<Name \"minBy\">]\nlet MinBy (f: 'T -> 'U) (s: seq<'T>) : 'T =\n    Seq.reduce (fun x y -> if f x <= f y then x else y) s\n\n[<JavaScript>]\n[<Name \"max\">]\nlet Max (s: seq<'T>) : 'T =\n    Seq.reduce (fun x y -> if x >= y then x else y) s\n\n[<JavaScript>]\n[<Name \"min\">]\nlet Min (s: seq<'T>) : 'T =\n    Seq.reduce (fun x y -> if x <= y then x else y) s\n\n[<JavaScript>]\n[<Name \"nth\">]\nlet Get index (s: seq<'T>) =\n    if index < 0 then\n        failwith \"negative index requested\"\n    let mutable pos = -1\n    use e = Enumerator.Get s\n    while pos < index do\n        if not (e.MoveNext()) then\n            InsufficientElements()\n        pos <- pos + 1\n    e.Current\n\n[<JavaScript>]\n[<Inline>]\nlet Item index (s: seq<'T>) = Get index s\n\n[<Inline \"$a\">]\n[<Name \"ofArray\">]\nlet OfArray (a: 'T[]) = X<seq<'T>>\n\n[<Inline \"$l\">]\n[<Name \"ofList\">]\nlet OfList (l: list<'T>) = X<seq<'T>>\n\n[<JavaScript>]\n[<Inline>]\nlet Pairwise (s: seq<'T>) : seq<'T * 'T> =\n    SeqPairwise s\n\n[<JavaScript>]\n[<Name \"pick\">]\nlet Pick p (s: seq<_>) =\n    match Seq.tryPick p s with\n    | Some x -> x\n    | None   -> failwith \"KeyNotFoundException\"\n\n[<JavaScript>]\n[<Name \"readOnly\">]\nlet ReadOnly (s: seq<'T>) : seq<'T> =\n    Enumerable.Of (fun () -> Enumerator.Get s)\n\n[<JavaScript>]\n[<Name \"reduce\">]\nlet Reduce (f: 'T -> 'T -> 'T) (source: seq<'T>) : 'T =\n    use e = Enumerator.Get source\n    if not (e.MoveNext()) then\n        failwith \"The input sequence was empty\"\n    let mutable r = e.Current\n    while e.MoveNext() do\n        r <- f r e.Current\n    r\n\n[<JavaScript>]\n[<Name \"scan\">]\nlet Scan<'T,'S> (f: 'S -> 'T -> 'S) (x: 'S) (s: seq<'T>) : seq<'S> =\n    Enumerable.Of <| fun () ->\n        let en = Enumerator.Get s\n        Enumerator.NewDisposing false (fun _ -> en.Dispose()) <| fun e ->\n            if e.State then\n                if en.MoveNext() then\n                    e.Current <- f e.Current en.Current\n                    true\n                else\n                    false\n            else\n                e.Current <- x\n                e.State <- true\n                true\n\n[<Inline \"[$x]\">]\n[<Name \"singleton\">]\nlet Singleton<'T> (x: 'T) = X<seq<'T>>\n\n[<JavaScript>]\n[<Name \"skip\">]\nlet Skip (n: int) (s: seq<'T>) : seq<'T> =\n    Enumerable.Of (fun () ->\n        let enum = Enumerator.Get s\n        Enumerator.NewDisposing true (fun _ -> enum.Dispose()) (fun e ->\n            if e.State then\n                for i = 1 to n do\n                    if not (enum.MoveNext()) then\n                        InsufficientElements()\n                e.State <- false\n            if enum.MoveNext() then\n                e.Current <- enum.Current\n                true\n            else\n                false))\n\n[<JavaScript>]\n[<Name \"skipWhile\">]\nlet SkipWhile (f: 'T -> bool) (s: seq<'T>) : seq<'T> =\n    Enumerable.Of (fun () ->\n        let enum = Enumerator.Get s\n        Enumerator.NewDisposing true (fun _ -> enum.Dispose()) (fun e ->\n            if e.State then\n                let mutable go = true\n                let mutable empty = false\n                while go do\n                    if enum.MoveNext() then\n                        if not (f enum.Current) then go <- false \n                    else \n                        go <-false\n                        empty <- true\n                e.State <- false\n                if empty then \n                    false \n                else\n                    e.Current <- enum.Current\n                    true\n            else\n                if enum.MoveNext() then\n                    e.Current <- enum.Current\n                    true\n                else\n                    false))\n\n[<JavaScript>]\n[<Name \"sort\">]\nlet Sort<'T when 'T : comparison> (s: seq<'T>) =\n    Seq.sortBy id s\n\n[<JavaScript>]\n[<Name \"sortBy\">]\nlet SortBy<'T, 'U when 'U: comparison>\n        (f: 'T -> 'U) (s: seq<'T>) : seq<'T> =\n    Seq.delay (fun () ->\n        let array = Array.ofSeq s\n        Array.sortInPlaceBy f array\n        array :> _)\n\n[<JavaScript>]\n[<Name \"sortByDescending\">]\nlet SortByDescending<'T, 'U when 'U: comparison>\n        (f: 'T -> 'U) (s: seq<'T>) : seq<'T> =\n    Seq.delay (fun () ->\n        let array = Array.ofSeq s\n        ArraySortInPlaceByDescending f array\n        array :> _)\n\n[<JavaScript>]\n[<Name \"sortDescending\">]\nlet SortDescending<'T when 'T : comparison> (s: seq<'T>) =\n    SortByDescending id s\n\n[<JavaScript>]\n[<Name \"sum\">]\nlet Sum<'T> (s: seq<'T>) : 'T =\n    box (Seq.fold (fun s x -> s + (box x :?> _)) 0. s) :?> _\n\n[<JavaScript>]\n[<Name \"sumBy\">]\nlet SumBy<'T,'U> (f: 'T -> 'U) (s: seq<'T>) : 'U =\n    box (Seq.fold (fun s x -> s + (box (f x) :?> _)) 0. s) :?> _\n\n[<JavaScript>]\n[<Name \"take\">]\nlet Take (n: int) (s: seq<'T>) : seq<'T> =\n    if n < 0 then\n        InputMustBeNonNegative()\n    Enumerable.Of (fun () ->\n        let e = ref (Enumerator.Get s)\n        Enumerator.NewDisposing 0 (fun _ -> safeDispose !e) (fun enum ->\n            enum.State <- enum.State + 1\n            if enum.State > n then false else\n            let en = !e\n            if en = null then InsufficientElements()\n            elif en.MoveNext() then\n                enum.Current <- en.Current\n                if enum.State = n then\n                    en.Dispose()\n                    e := null\n                true\n            else\n                en.Dispose()\n                e := null\n                InsufficientElements()\n        )\n    )\n\n[<JavaScript>]\n[<Name \"takeWhile\">]\nlet TakeWhile (f: 'T -> bool) (s: seq<'T>) : seq<'T> =\n    seq {\n        use e = Enumerator.Get s\n        while e.MoveNext() && f e.Current do\n            yield e.Current\n    }\n\n[<JavaScript>]\n[<Name \"toArray\">]\nlet ToArray (s: seq<'T>) =\n    let q = new System.Collections.Generic.Queue<'T>()\n    for e in s do q.Enqueue e\n    q.ToArray()\n\n[<JavaScript>]\n[<Name \"toList\">]\nlet ToList (s: seq<'T>) = List.ofSeq s\n\n[<JavaScript>]\n[<Inline>]\nlet Truncate (n: int) (s: seq<'T>) : seq<'T> =\n    SeqTruncate n s\n\n[<JavaScript>]\n[<Name \"tryFind\">]\nlet TryFind ok (s: seq<_>) =\n    use e = Enumerator.Get s\n    let mutable r = None\n    while r.IsNone && e.MoveNext() do\n        let x = e.Current\n        if ok x then\n            r <- Some x\n    r\n\n[<JavaScript>]\n[<Inline>]\nlet TryFindBack ok (s: seq<_>) =\n    ArrayTryFindBack ok (Array.ofSeq s) \n\n[<JavaScript>]\n[<Inline>]\nlet TryHead (s: seq<'T>) = SeqTryHead s\n\n[<JavaScript>]\n[<Inline>]\nlet TryItem i (s: seq<'T>) = SeqTryItem i s\n\n[<JavaScript>]\n[<Inline>]\nlet TryLast (s: seq<'T>) =  SeqTryLast s\n\n[<JavaScript>]\n[<Name \"findBack\">]\nlet FindBack p (s: seq<_>) =\n    match TryFindBack p s with\n    | Some x -> x\n    | None   -> failwith \"KeyNotFoundException\"\n\n[<JavaScript>]\n[<Name \"tryFindIndex\">]\nlet TryFindIndex ok (s: seq<_>) =\n    use e = Enumerator.Get s\n    let mutable loop = true\n    let mutable i = 0\n    while loop && e.MoveNext() do\n        let x = e.Current\n        if ok x then\n            loop <- false\n        else\n            i <- i + 1\n    if loop then None else Some i\n\n[<JavaScript>]\n[<Inline>]\nlet TryFindIndexBack ok (s: seq<_>) =\n    ArrayTryFindIndexBack ok (Array.ofSeq s) \n\n[<JavaScript>]\n[<Name \"findIndexBack\">]\nlet FindIndexBack p (s: seq<_>) =\n    match TryFindIndexBack p s with\n    | Some x -> x\n    | None   -> failwith \"KeyNotFoundException\"\n\n[<JavaScript>]\n[<Name \"tryPick\">]\nlet TryPick f (s: seq<_>) =\n    use e = Enumerator.Get s\n    let mutable r = None\n    while r = None && e.MoveNext() do\n        r <- f e.Current\n    r\n\n[<JavaScript>]\n[<Inline>]\nlet Unfold (f: 'S -> option<'T * 'S>) (s: 'S) : seq<'T> =\n    SeqUnfold f s\n\n[<JavaScript>]\n[<Inline>]\nlet Windowed (windowSize: int) (s: seq<'T>) : seq<'T []> =\n    SeqWindowed windowSize s\n\n[<JavaScript>]\n[<Name \"zip\">]\nlet Zip (s1: seq<'T>) (s2: seq<'U>) =\n    Seq.map2 (fun x y -> x, y) s1 s2\n\n[<JavaScript>]\n[<Name \"zip3\">]\nlet Zip3 (s1: seq<'T>) (s2: seq<'U>) (s3: seq<'V>) : seq<'T * 'U * 'V> =\n    Seq.map2 (fun x (y, z) -> (x, y, z)) s1 (Seq.zip s2 s3)\n\n[<JavaScript>]\n[<Name \"fold2\">]\nlet Fold2<'T1,'T2,'S> (f: 'S -> 'T1 -> 'T2 -> 'S)\n                        (s: 'S)\n                        (s1: seq<'T1>)\n                        (s2: seq<'T2>) : 'S =\n    Array.fold2 f s (Array.ofSeq s1) (Array.ofSeq s2)\n\n[<JavaScript>]\n[<Name \"foldBack\">]\nlet FoldBack f (s: seq<_>) state =\n    Array.foldBack f (Array.ofSeq s) state\n\n[<JavaScript>]\n[<Name \"foldBack2\">]\nlet FoldBack2 f (s1: seq<_>) (s2: seq<_>) s =\n    Array.foldBack2 f (Array.ofSeq s1) (Array.ofSeq s2) s\n\n[<JavaScript>]\n[<Name \"iteri2\">]\nlet IterateIndexed2 f (s1: seq<_>) (s2: seq<_>) =\n    Array.iteri2 f (Array.ofSeq s1) (Array.ofSeq s2)\n\n[<JavaScript>]\n[<Name \"map3\">]\nlet Map3 f (s1: seq<_>) (s2: seq<_>) (s3: seq<_>) =\n    Enumerable.Of <| fun () ->\n        let e1 = Enumerator.Get s1\n        let e2 = Enumerator.Get s2\n        let e3 = Enumerator.Get s3\n        Enumerator.NewDisposing () (fun _ -> e1.Dispose(); e2.Dispose(); e3.Dispose()) <| fun e ->\n            if e1.MoveNext() && e2.MoveNext() && e3.MoveNext() then\n                e.Current <- f e1.Current e2.Current e3.Current\n                true\n            else\n                false\n\n[<JavaScript>]\n[<Name \"mapi2\">]\nlet MapIndexed2 f (s1: seq<_>) (s2: seq<_>) =\n    Map3 f (Seq.initInfinite id) s1 s2\n\n[<JavaScript>]\n[<Name \"mapFold\">]\nlet MapFold f zero s =\n    ArrayMapFold f zero (Seq.toArray s)\n    |> (fun (x, y) ->\n        (Array.toSeq x, y)\n    )\n\n[<JavaScript>]\n[<Name \"mapFoldBack\">]\nlet MapFoldBack f s zero =\n    ArrayMapFoldBack f (Seq.toArray s) zero\n    |> (fun (x, y) ->\n        (Array.toSeq x, y)\n    )\n\n[<JavaScript>]\n[<Name \"permute\">]\nlet Permute f (s: seq<_>) =\n    Seq.delay (fun () -> Seq.ofArray (Array.permute f (Array.ofSeq s)))\n\n[<JavaScript>]\n[<Name \"reduceBack\">]\nlet ReduceBack f (s: seq<_>) =\n    Array.reduceBack f (Array.ofSeq s)\n\n[<JavaScript>]\n[<Name \"replicate\">]\nlet Replicate size value =\n    if size < 0 then InputMustBeNonNegative()\n    seq { for i in 0 .. size - 1 -> value }\n\n[<JavaScript>]\n[<Name \"rev\">]\nlet Reverse (s: seq<'T>) =\n    Seq.delay (fun () -> Array.rev (Seq.toArray s) |> Array.toSeq)\n    \n[<JavaScript>]\n[<Name \"scanBack\">]\nlet ScanBack f (l: seq<_>) s =\n    Seq.delay (fun () -> Seq.ofArray (Array.scanBack f (Array.ofSeq l) s))\n\n[<JavaScript>]\n[<Name \"indexed\">]\nlet Indexed (s : seq<'T>) : seq<int * 'T> =\n    Seq.mapi (fun a b -> (a, b)) s\n\n[<JavaScript>]\n[<Name \"sortWith\">]\nlet SortWith f (s: seq<_>) =\n    Seq.delay (fun () -> \n        let a = Array.ofSeq s\n        Array.sortInPlaceWith f a\n        Seq.ofArray a)\n\n[<JavaScript>]\n[<Name \"tail\">]\nlet Tail<'T> (s : seq<'T>) : seq<'T> =\n    Seq.skip 1 s\n\n[<JavaScript>]\n[<Inline>]\nlet Where (predicate : 'T -> bool) (s : seq<'T>) : seq<'T> =\n    Filter predicate s\n", "// $begin{copyright}\n//\n// This file is part of WebSharper\n//\n// Copyright (c) 2008-2015 IntelliFactory\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you\n// may not use this file except in compliance with the License.  You may\n// obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n// implied.  See the License for the specific language governing\n// permissions and limitations under the License.\n//\n// $end{copyright}\n\n[<WebSharper.Core.Attributes.Name \"Slice\">]\n[<WebSharper.Core.Attributes.Proxy\n    \"Microsoft.FSharp.Core.Operators+OperatorIntrinsics, \\\n     FSharp.Core, Culture=neutral, \\\n     PublicKeyToken=b03f5f7f11d50a3a\">]\nmodule private WebSharper.OperatorIntrinsicsProxy \n\nopen WebSharper.JavaScript\n\n[<Inline \"$s.slice($st,$e)\">]\nlet Slice (s: 'T) (st: int) (e: int) = X<'T>\n\n[<Inline \"$s.slice($st)\">]\nlet SliceStart (s: 'T) (st: int) = X<'T>\n\n[<JavaScript>]\n[<Name \"string\">]\nlet GetStringSlice (source: string) (start: int option) (finish: int option) =\n    match start, finish with\n    | Some s, Some f -> Slice source s (f + 1)\n    | Some s, None -> SliceStart source s\n    | None, Some f -> Slice source 0 (f + 1)\n    | _ -> \"\"\n\n[<JavaScript>]\n[<Name \"array\">]\nlet GetArraySlice<'T> (source: 'T[]) (start: int option) (finish: int option) =\n    match start, finish with\n    | Some s, Some f -> Slice source s (f + 1)\n    | Some s, None -> SliceStart source s\n    | None, Some f -> Slice source 0 (f + 1)\n    | _ -> [||]\n\nmodule F = WebSharper.IntrinsicFunctionProxy\n\n[<JavaScript>]\n[<Name \"setArray\">]\nlet SetArraySlice (dst: _[]) start finish (src:_[]) = \n    let start  = (match start with None -> 0 | Some n -> n) \n    let finish = (match finish with None -> Array.length dst - 1 | Some n -> n) \n    F.SetArraySub dst start (finish - start + 1) src\n\n[<JavaScript>]\n[<Name \"array2D\">]\nlet GetArraySlice2D (arr: _[,]) start1 finish1 start2 finish2 = \n    let start1  = (match start1 with None -> 0 | Some n -> n) \n    let start2  = (match start2 with None -> 0 | Some n -> n) \n    let finish1 = (match finish1 with None -> F.GetArray2DLength1 arr - 1 | Some n -> n) \n    let finish2 = (match finish2 with None -> F.GetArray2DLength2 arr - 1 | Some n -> n) \n    let len1 = (finish1 - start1 + 1)\n    let len2 = (finish2 - start2 + 1)\n    F.GetArray2DSub arr start1 start2 len1 len2\n\n[<JavaScript>]\n[<Name \"array2Dfix1\">]\nlet GetArraySlice2DFixed1 (arr: _[,]) fixed1 start2 finish2 = \n    let start2  = (match start2 with None -> 0 | Some n -> n) \n    let finish2 = (match finish2 with None -> F.GetArray2DLength2 arr - 1 | Some n -> n) \n    let len2 = (finish2 - start2 + 1)\n    let dst = Array.zeroCreate len2\n    for j = 0 to len2 - 1 do \n        F.SetArray dst j (F.GetArray2D arr fixed1 (start2+j))\n    dst\n\n[<JavaScript>]\n[<Name \"array2Dfix2\">]\nlet GetArraySlice2DFixed2 (arr: _[,]) start1 finish1 fixed2 = \n    let start1  = (match start1 with None -> 0 | Some n -> n) \n    let finish1 = (match finish1 with None -> F.GetArray2DLength1 arr - 1 | Some n -> n) \n    let len1 = (finish1 - start1 + 1)\n    let dst = Array.zeroCreate len1\n    for i = 0 to len1 - 1 do \n        F.SetArray dst i (F.GetArray2D arr (start1+i) fixed2)\n    dst\n\n[<JavaScript>]\n[<Name \"setArray2Dfix1\">]\nlet SetArraySlice2DFixed1 (dst: _[,]) fixed1 start2 finish2 (src:_[]) = \n    let start2  = (match start2 with None -> 0 | Some n -> n) \n    let finish2 = (match finish2 with None -> F.GetArray2DLength2 dst - 1 | Some n -> n) \n    let len2 = (finish2 - start2 + 1)\n    for j = 0 to len2 - 1 do\n        F.SetArray2D dst fixed1 (start2+j) (F.GetArray src j)\n\n[<JavaScript>]\n[<Name \"setArray2Dfix2\">]\nlet SetArraySlice2DFixed2 (dst: _[,]) start1 finish1 fixed2 (src:_[]) = \n    let start1  = (match start1 with None -> 0 | Some n -> n) \n    let finish1 = (match finish1 with None -> F.GetArray2DLength1 dst - 1 | Some n -> n) \n    let len1 = (finish1 - start1 + 1)\n    for i = 0 to len1 - 1 do\n        F.SetArray2D dst (start1+i) fixed2 (F.GetArray src i)\n\n[<JavaScript>]\n[<Name \"setArray2D\">]\nlet SetArraySlice2D (dst: _[,]) start1 finish1 start2 finish2 (src:_[,]) = \n    let start1  = (match start1 with None -> 0 | Some n -> n) \n    let start2  = (match start2 with None -> 0 | Some n -> n) \n    let finish1 = (match finish1 with None -> F.GetArray2DLength1 dst - 1 | Some n -> n) \n    let finish2 = (match finish2 with None -> F.GetArray2DLength2 dst - 1 | Some n -> n) \n    F.SetArray2DSub dst start1 start2 (finish1 - start1 + 1) (finish2 - start2 + 1) src\n", "// $begin{copyright}\n//\n// This file is part of WebSharper\n//\n// Copyright (c) 2008-2015 IntelliFactory\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you\n// may not use this file except in compliance with the License.  You may\n// obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n// implied.  See the License for the specific language governing\n// permissions and limitations under the License.\n//\n// $end{copyright}\n\n[<WebSharper.Core.Attributes.Name \"Stack\">]\nmodule private WebSharper.StackProxy\n\nopen WebSharper.JavaScript\n\n[<Inline \"$arr.splice($offset,$len)\">]\nlet splice (arr: obj) (offset: int) (len: int) = X<unit>\n\n[<JavaScript>]\nlet Clear (stack: obj) =\n    splice stack 0 (stack :?> obj []).Length\n\n[<JavaScript>]\nlet Contains (stack: obj) (el: 'T) =\n    Seq.exists ((=) el) (stack :?> 'T[])\n\n[<JavaScript>]\nlet CopyTo (stack: obj) (array: 'T[]) (index: int) =\n    Array.blit array 0 array index (stack :?> 'T[]).Length\n\n[<Proxy(typeof<System.Collections.Generic.Stack<_>>)>]\ntype private StackProxy<'T when 'T : equality> =\n\n    [<Inline \"[].concat($s).reverse()\">]\n    new (s: 'T []) = {}\n\n    [<Inline \"[]\">]\n    new () = {}\n\n    member this.Count with [<Inline \"$this.length\">] get () = X<int>\n\n    [<Inline>]\n    [<JavaScript>]\n    member this.Clear() = Clear this\n\n    [<Inline>]\n    [<JavaScript>]\n    member this.Contains(x: 'T) : bool = Contains this x\n\n    [<Inline>]\n    [<JavaScript>]\n    member this.CopyTo(array: 'T [], index) = CopyTo this array index\n\n    [<Inline \"$this[0]\">]\n    member this.Peek() = X<'T>\n\n    [<Inline \"$this.shift()\">]\n    member this.Pop() = X<'T>\n\n    [<Inline \"$this.unshift($x)\">]\n    member this.Push(x: 'T) = X<unit>\n\n    [<Inline \"$this.slice(0)\">]\n    member this.ToArray() = X<'T[]>\n\n", "// $begin{copyright}\n//\n// This file is part of WebSharper\n//\n// Copyright (c) 2008-2015 IntelliFactory\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you\n// may not use this file except in compliance with the License.  You may\n// obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n// implied.  See the License for the specific language governing\n// permissions and limitations under the License.\n//\n// $end{copyright}\n\n[<WebSharper.Core.Attributes.Name \"Strings\">]\n[<WebSharper.Core.Attributes.Proxy\n    \"Microsoft.FSharp.Core.StringModule, \\\n     FSharp.Core, Culture=neutral, \\\n     PublicKeyToken=b03f5f7f11d50a3a\">]\nmodule private WebSharper.StringProxy\n\nopen WebSharper.JavaScript\n\n[<JavaScript>]\nlet Compare (x: string) (y: string) = compare x y\n\n[<JavaScript>]\nlet CopyTo (s: string) (o: int) (d: char []) (off: int) (ct: int) =\n    Array.blit (s.ToCharArray()) o d off ct\n\n[<Direct \"$x.substring($x.length - $s.length) == $s\">]\nlet EndsWith (x: string) (s: string) = X<bool>\n\n[<Direct \"$s.indexOf(String.fromCharCode($c),$i)\">]\nlet IndexOf (s: string) (c: char) (i: int) = X<int>\n\n[<Direct \"$x.substring(0,$index-1)+$s+$x.substring($index)\">]\nlet Insert (x: string) (index: int) (s: string) = X<string>\n\n[<Direct \"$x == null || $x == ''\">]\nlet IsNullOrEmpty (x: string) = X<bool>\n\n[<Direct \"\"\"$x == null || /^\\s*$/.test($x)\"\"\">]\nlet IsNullOrWhiteSpace (x: string) = X<bool>\n\n[<Direct \"$s.lastIndexOf(String.fromCharCode($c),$i)\">]\nlet LastIndexOf (s: string) (c: char) (i: int) = X<int>\n\n[<Direct \"$n>$s.length?Array($n-$s.length+1).join(String.fromCharCode($c))+$s:$s\">]\nlet PadLeftWith (s: string) (n: int) (c: char) = X<string>\n\n[<JavaScript>]\nlet PadLeft (s: string) (n: int) =\n    PadLeftWith s n ' '\n\n[<Direct \"$n>$s.length?$s+Array($n-$s.length+1).join(String.fromCharCode($c)):$s\">]\nlet PadRightWith (s: string) (n: int) (c: char) = X<string>\n\n[<JavaScript>]\nlet PadRight (s: string) (n: int) =\n    PadRightWith s n ' '\n\n[<Direct \"$x.substring(0,$ix) + $x.substring($ix+$ct)\">]\nlet Remove (x: string) (ix: int) (ct: int) = X<string>\n\n[<Direct \"$string.replace($search,$replace)\">]\nlet ReplaceOnce string search replace = X<string>\n\n[<JavaScript>]\nlet Replace (subject: string) (search: string) (replace: string) =\n    let rec replaceLoop (subj: string) =\n        let index = subj.IndexOf(search)\n        if index <> -1 then\n            let replaced = ReplaceOnce subj search replace\n            let nextStartIndex = index + replace.Length\n            (replaced.Substring(0, index + replace.Length)) +\n                (replaceLoop (replaced.Substring(nextStartIndex)))\n        else subj\n    replaceLoop subject\n\n[<JavaScript>]\nlet ReplaceChar (s: string) (oldC: char) (newC: char) =\n    Replace s (string oldC) (string newC)\n\n[<Direct \"$s.substr($ix,$ct)\">]\nlet Substring (s: string) (ix: int) (ct: int) = X<string>\n\n[<Direct \"$t.substring(0,$s.length) == $s\">]\nlet StartsWith (t: string) (s: string) = X<bool>\n\n[<JavaScript>]\nlet ToCharArray (s: string) = Array.init s.Length (fun x -> s.[x])\n\n[<JavaScript>]\nlet ToCharArrayRange (s: string) (startIndex: int) (length: int) =\n    Array.init length (fun i -> s.[startIndex + i])\n\n[<Direct @\"$s.replace(/^\\s+/,'').replace(/\\s+$/,'')\">]\nlet Trim (s: string) = X<string>\n\n[<Direct @\"$s.replace(/^\\s+/,'')\">]\nlet TrimStart (s: string) = X<string>\n\n[<Direct @\"$s.replace(/\\s+$/,'')\">]\nlet TrimEnd (s: string) = X<string>\n\n[<Direct \"$values.join($sep)\">]\nlet Join (sep: string) (values: string []) = X<string>\n\n[<Direct \"$str.split($pat)\">]\nlet SplitWith (str: string) (pat: obj) = X<string[]>\n\n[<Inline \"new RegExp($pat)\">]\nlet MakeRegexp (pat: string) = X<obj>\n\n[<Direct @\"$s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&')\">]\nlet RegexEscape (s: string) = X<string>\n\n[<JavaScript>]\nlet Split (s: string) (pat: obj) (opts: System.StringSplitOptions) =\n    let res = SplitWith s pat\n    if opts ===. System.StringSplitOptions.RemoveEmptyEntries then\n        Array.filter (fun x -> x !==. \"\") res\n    else\n        res\n\n[<JavaScript>]\nlet SplitChars (s: string) (sep: char[]) (opts: System.StringSplitOptions) =\n    let re = \"[\" + RegexEscape (new System.String(sep)) + \"]\"\n    Split s (MakeRegexp re) opts\n\n[<JavaScript>]\nlet SplitStrings (s: string) (sep: string[]) (opts: System.StringSplitOptions) =\n    let re = String.concat \"|\" (Array.map RegexEscape sep)\n    Split s (MakeRegexp re) opts\n\n[<JavaScript>]\nlet Filter f (s: string) =\n    System.String.Concat(s |> Seq.choose (fun c -> if f c then Some (string c) else None) |> Array.ofSeq)\n\n[<Proxy(typeof<string>)>]\ntype private StringProxy =\n\n    [<Inline \"''\">]\n    new () = {}\n\n    [<Inline \"String.fromCharCode.apply(undefined,$chars)\">]\n    new (chars: char []) = {}\n\n    member this.Chars  with [<Inline \"$this.charCodeAt($pos)\">]\n                            get (pos: int) = X<char>\n\n    [<Inline \"$this\">]\n    member this.Clone() = this\n\n    [<Inline>]\n    [<JavaScript>]\n    static member Compare(x: string, y: string) =\n        Unchecked.compare x y\n\n    [<Inline>]\n    [<JavaScript>]\n    member this.CompareTo(s: string) =\n        Unchecked.compare (this :> obj) (s :> obj)\n\n    [<Inline>]\n    [<JavaScript>]\n    static member Concat(strings: string seq) =\n        Join \"\" (Array.ofSeq strings)\n\n    [<Inline \"$strings.join('')\">]\n    static member Concat([<System.ParamArray>] strings: string[]) = X<string>\n\n    [<Inline \"$this.indexOf($s) != -1\">]\n    member this.Contains(s: string) = X<bool>\n\n    [<Inline>]\n    [<JavaScript>]\n    member this.CopyTo(s: int, d: char [], off: int, ct: int) =\n        CopyTo (As this) s d off ct\n\n    static member Empty with [<Inline \"''\">] get () = X<string>\n\n    [<Inline>]\n    [<JavaScript>]\n    member this.EndsWith(other: string) = EndsWith (As this) other\n\n    [<Inline \"$x === $y\">]\n    static member Equals(x: string, y: string) = X<bool>\n\n    [<Inline>]\n    [<JavaScript>]\n    member this.GetEnumerator() = Enumerator.Get (unbox<seq<char>> this)\n\n    [<Inline \"$this.indexOf($s)\">]\n    member this.IndexOf(s: string) = X<int>\n\n    [<Inline \"$this.indexOf(String.fromCharCode($c))\">]\n    member this.IndexOf(c: char) = X<int>\n\n    [<Inline \"$this.indexOf($s,$i)\">]\n    member this.IndexOf(s: string, i: int) = X<int>\n\n    [<Inline>]\n    [<JavaScript>]\n    member this.IndexOf(c: char, i: int) = IndexOf (As this) c i\n\n    [<Inline>]\n    [<JavaScript>]\n    static member IsNullOrEmpty(x: string) = IsNullOrEmpty x\n\n    [<Inline>]\n    [<JavaScript>]\n    static member IsNullOrWhiteSpace(x: string) = IsNullOrWhiteSpace x\n\n    member this.Item\n        with    [<Inline \"$this.charCodeAt($pos)\">]\n                get (pos: int) = X<char>\n\n    [<Inline>]\n    [<JavaScript>]\n    static member Join(sep: string, values: string seq) =\n        Join sep (Array.ofSeq values)\n\n    [<Inline>]\n    [<JavaScript>]\n    static member Join(sep: string, [<System.ParamArray>] values: string[]) =\n        Join sep values\n\n    [<Inline \"$this.lastIndexOf($s)\">]\n    member this.LastIndexOf(s: string) = X<int>\n\n    [<Inline \"$this.lastIndexOf(String.fromCharCode($c))\">]\n    member this.LastIndexOf(c: char) = X<int>\n\n    [<Inline \"$this.lastIndexOf($s,$i)\">]\n    member this.LastIndexOf(s: string, i: int) = X<int>\n\n    [<Inline>]\n    [<JavaScript>]\n    member this.LastIndexOf(c: char, i: int) =\n        LastIndexOf (As this) c i\n\n    member this.Length with [<Inline \"$this.length\">]\n                            get () = X<int>\n\n    [<Inline>]\n    [<JavaScript>]\n    member this.PadLeft(i: int) =\n        PadLeft (As this) i\n\n    [<Inline>]\n    [<JavaScript>]\n    member this.PadLeft(i: int, c: char) =\n        PadLeftWith (As this) i c\n\n    [<Inline>]\n    [<JavaScript>]\n    member this.PadRight(i: int) =\n        PadRight (As this) i\n\n    [<Inline>]\n    [<JavaScript>]\n    member this.PadRight(i: int, c: char) =\n        PadRightWith (As this) i c\n\n    [<Inline \"$this.substring(0,$ix)\">]\n    member this.Remove(ix: int) = X<string>\n\n    [<Inline>]\n    [<JavaScript>]\n    member this.Remove(ix: int, count: int) = Remove (As this) ix count\n\n    [<Inline>]\n    [<JavaScript>]\n    member this.ToCharArray() = ToCharArray (As this)\n\n    [<Inline>]\n    [<JavaScript>]\n    member this.Replace(subj: string, repl: string) =\n        Replace (As this) subj repl\n\n    [<Inline>]\n    [<JavaScript>]\n    member this.Replace(subj: char, repl: char) =\n        ReplaceChar (As this) subj repl\n\n    [<Inline>]\n    [<JavaScript>]\n    member this.Split([<System.ParamArray>] sep: char[]) =\n        SplitChars (As this) sep  System.StringSplitOptions.RemoveEmptyEntries\n\n    [<Inline>]\n    [<JavaScript>]\n    member this.Split(sep: char[], opts: System.StringSplitOptions) =\n        SplitChars (As this) sep opts\n\n    [<Inline>]\n    [<JavaScript>]\n    member this.Split(sep: string[], opts: System.StringSplitOptions) =\n        SplitStrings (As this) sep opts\n\n    [<Inline>]\n    [<JavaScript>]\n    member this.StartsWith(s: string) =\n        StartsWith (As this) s\n\n    [<Inline \"$this.substring($ix)\">]\n    member this.Substring(ix: int) = X<string>\n\n    [<Inline>]\n    [<JavaScript>]\n    member this.Substring(ix: int, ct: int) =\n        Substring (As this) ix ct\n\n    [<Inline>]\n    [<JavaScript>]\n    member this.ToCharArray(i: int, l: int) =\n        ToCharArrayRange (As this) i l\n\n    [<Inline \"$this.toLowerCase()\">]\n    member this.ToLower() = X<string>\n\n    [<Inline \"$this.toUpperCase()\">]\n    member this.ToUpper() = X<string>\n\n    [<Inline>]\n    [<JavaScript>]\n    member this.Trim() = Trim (As this)\n\n    [<Inline>]\n    [<JavaScript>]\n    member this.TrimStart() = TrimStart (As this)\n\n    [<Inline>]\n    [<JavaScript>]\n    member this.TrimEnd() = TrimEnd (As this)\n\n[<JavaScript>]\nlet protect (s : string) =\n    if s = null then \"\" else s\n\n[<Inline \"$strings.join($sep)\">]\nlet join (strings: string[]) (sep: string) = X<string>\n\n[<JavaScript>]\n[<Name \"collect\">]\nlet Collect (f: char -> string) (s: string) : string =\n    System.String.Concat(Array.init s.Length (fun i -> f s.[i]))\n\n[<JavaScript>]\n[<Name \"concat\">]\nlet Concat (separator: string) (strings: seq<string>) : string =\n    join (Seq.toArray strings) separator\n\n[<JavaScript>]\n[<Name \"exists\">]\nlet Exists (f: char -> bool) (s: string) : bool =\n    Seq.exists f (protect s)\n\n[<JavaScript>]\n[<Name \"forall\">]\nlet ForAll (f: char -> bool) (s: string) : bool =\n    Seq.forall f (protect s)\n\n[<JavaScript>]\n[<Name \"init\">]\nlet Initialize (count: int) (f: int -> string) : string =\n    System.String.Concat(Array.init count f)\n\n[<JavaScript>]\n[<Name \"iter\">]\nlet Iterate (f: char -> unit) (s: string) : unit =\n    Seq.iter f (protect s)\n\n[<JavaScript>]\n[<Name \"iteri\">]\nlet IterateIndexed (f: int -> char -> unit) (s: string) : unit =\n    Seq.iteri f (protect s)\n\n[<JavaScript>]\n[<Name \"length\">]\nlet Length (s: string) : int =\n    (protect s).Length\n\n[<JavaScript>]\n[<Name \"map\">]\nlet Map (f: char -> char) (s: string) : string =\n    Collect (fun x -> string (f x)) (protect s)\n\n[<JavaScript>]\n[<Name \"mapi\">]\nlet MapIndexed (f: int -> char -> char) (s: string) : string =\n    System.String.Concat (Seq.toArray (Seq.mapi (fun i x -> string (f i x)) s))\n\n[<JavaScript>]\n[<Name \"replicate\">]\nlet Replicate (count: int) (s: string) : string =\n    Initialize count (fun _ -> s)\n", "// $begin{copyright}\n//\n// This file is part of WebSharper\n//\n// Copyright (c) 2008-2015 IntelliFactory\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you\n// may not use this file except in compliance with the License.  You may\n// obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n// implied.  See the License for the specific language governing\n// permissions and limitations under the License.\n//\n// $end{copyright}\n\n/// Implements generic comparison, equality and hashing.\n[<WebSharper.Core.Attributes.Name \"Unchecked\">]\n[<WebSharper.Core.Attributes.Proxy\n    \"Microsoft.FSharp.Core.Operators+Unchecked, \\\n     FSharp.Core, Culture=neutral, \\\n     PublicKeyToken=b03f5f7f11d50a3a\">]\nmodule private WebSharper.UncheckedProxy\n\nopen WebSharper.JavaScript\n\n[<Inline \"$a.CompareTo($b)\">]\nlet compareTo (a: obj) (b: obj) = X<int>\n\n[<Inline \"$a instanceof Array\">]\nlet isArray (a: obj) = X<bool>\n\n[<Inline \"$a instanceof Date\">]\nlet isDate (a: obj) = X<bool>\n\n[<JavaScript>]\nlet rec compareArrays (a: obj []) (b: obj []) =\n    if a.Length < b.Length   then -1\n    elif a.Length > b.Length then 1\n    else\n        let mutable cmp = 0\n        let mutable i = 0\n        while cmp = 0 && i < a.Length do\n            cmp <- Unchecked.compare a.[i] b.[i]\n            i <- i + 1\n        cmp\n\n[<Inline \"$d.getTime()\">]\nlet getTime (d: obj) : int = X\n\n[<JavaScript>]\nlet rec compareDates (a: obj) (b: obj) =\n    compare (getTime a) (getTime b)\n\n/// Compares two values generically.\n[<JavaScript>]\nlet Compare<'T> (a: 'T) (b: 'T) : int =\n    let objCompare (a: obj) (b: obj) =\n        let cmp = ref 0\n        JS.ForEach a (fun k ->\n            if not (JS.HasOwnProperty a k) then\n                false\n            elif not (JS.HasOwnProperty b k) then\n                cmp := 1; true\n            else\n                cmp := Unchecked.compare a?(k) b?(k); !cmp <> 0)\n        if !cmp = 0 then\n            JS.ForEach b (fun k ->\n                if not (JS.HasOwnProperty b k) then\n                    false\n                elif not (JS.HasOwnProperty a k) then\n                    cmp := -1; true\n                else false)\n        !cmp\n    if a ===. b then 0 else\n        match JS.TypeOf a with\n        | JS.Undefined ->\n            match JS.TypeOf b with\n            | JS.Undefined -> 0\n            | _ -> -1\n        | JS.Function ->\n            failwith \"Cannot compare function values.\"\n        | JS.Boolean | JS.Number | JS.String ->\n            if a <. b then -1 else 1\n        | JS.Object ->\n            if a ===. null then -1\n            elif b ===. null then 1\n            elif JS.In \"CompareTo\" a then compareTo a b\n            elif isArray a && isArray b then compareArrays (As a) (As b)\n            elif isDate a && isDate b then compareDates a b\n            else objCompare a b\n\n/// Produces an undefined value.\n[<Inline \"undefined\">]\nlet DefaultOf<'T> = X<'T>\n\n[<Inline \"$a.Equals($b)\">]\nlet private equals (a: obj) (b: obj) = X<bool>\n\n[<JavaScript>]\nlet arrayEquals (a: obj []) (b: obj []) =\n    if a.Length = b.Length then\n        let mutable eq = true\n        let mutable i = 0\n        while eq && i < a.Length do\n            if not (Unchecked.equals a.[i] b.[i]) then\n                eq <- false\n            i <- i + 1\n        eq\n    else\n        false\n\n[<JavaScript>]\nlet dateEquals a b =\n    getTime a ===. getTime b\n\n/// Tests if two values are equal.\n[<JavaScript>]\nlet Equals (a: 'T) (b: 'T) : bool =\n    let objEquals (a: obj) (b: obj) =\n        let eqR = ref true\n        JS.ForEach a (fun k ->\n            eqR := not (JS.HasOwnProperty a k) || JS.HasOwnProperty b k && Unchecked.equals a?(k) b?(k)\n            not !eqR)\n        if !eqR then\n            JS.ForEach b (fun k ->\n                eqR := not (JS.HasOwnProperty b k) || JS.HasOwnProperty a k\n                not !eqR)\n        !eqR\n    if a ===. b then true else\n        match JS.TypeOf a with\n        | JS.Object ->\n            if a ===. null || a ===. JS.Undefined || b ===. null || b ===. JS.Undefined then false\n            elif JS.In \"Equals\" a then equals a b\n            elif isArray a && isArray b then arrayEquals (As a) (As b)\n            elif isDate a && isDate b then dateEquals a b\n            else objEquals a b\n        | _ ->\n            false\n\n[<JavaScript>]\nlet hashMix (x: int) (y: int) : int =\n    (x <<< 5) + x + y\n\n[<Inline \"$o.GetHashCode()\">]\nlet getHashCode(o: obj) = X<int>\n\n[<JavaScript>]\nlet hashArray (o: obj []) =\n    let mutable h = -34948909\n    for i in 0 .. o.Length - 1 do\n        h <- hashMix h (Unchecked.hash o.[i])\n    h\n\n[<JavaScript>]\nlet hashString (s: string) : int =\n    if s ===. null then 0 else\n        let mutable hash = 5381\n        for i = 0 to s.Length - 1 do\n            hash <- hashMix hash (int s.[i])\n        hash\n\n[<JavaScript>]\nlet hashObject (o: obj) =\n    if JS.In \"GetHashCode\" o then getHashCode o else\n        let (++) = hashMix\n        let h = ref 0\n        JS.ForEach o (fun key ->\n            h := !h ++ hashString key ++ Unchecked.hash ((?) o key)\n            false)\n        !h\n\n/// Computes the hash of an object.\n[<JavaScript>]\nlet Hash<'T> (o: 'T) : int =\n    match JS.TypeOf o with\n    | JS.Undefined -> 0\n    | JS.Function  -> 0\n    | JS.Boolean   -> if As o then 1 else 0\n    | JS.Number    -> As o\n    | JS.String    -> hashString (As o)\n    | JS.Object    -> if o ==. null then 0\n                      elif isArray o then hashArray (As o)\n                      else hashObject o\n\n", "// $begin{copyright}\n//\n// This file is part of WebSharper\n//\n// Copyright (c) 2008-2015 IntelliFactory\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you\n// may not use this file except in compliance with the License.  You may\n// obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n// implied.  See the License for the specific language governing\n// permissions and limitations under the License.\n//\n// $end{copyright}\n\n[<WebSharper.Core.Attributes.Name \"Util\">]\n[<WebSharper.Core.Attributes.Proxy\n    \"Microsoft.FSharp.Control.CommonExtensions, \\\n     FSharp.Core, Culture=neutral, \\\n     PublicKeyToken=b03f5f7f11d50a3a\">]\nmodule private WebSharper.CommonExtensionsProxy\n\nopen WebSharper.JavaScript\n\n[<Inline \"$event.Subscribe($obs)\">]\nlet subscribe (event: System.IObservable<'T>) (obs: System.IObserver<'T>) =\n    X<System.IDisposable>\n\n[<JavaScript>]\nlet observer (h: 'T -> unit) : System.IObserver<'T> =\n    New [\n        \"OnCompleted\" => ignore\n        \"OnError\" => ignore\n        \"OnNext\" => h\n    ]\n\n[<JavaScript>]\n[<Name \"addListener\">]\nlet AddToObservable<'T> (event: System.IObservable<'T>) (h: 'T -> unit) =\n    ignore (subscribe event (observer h))\n\n[<JavaScript>]\n[<Name \"subscribeTo\">]\nlet SubscribeToObservable<'T> (event: System.IObservable<'T>) (h: 'T -> unit) =\n    subscribe event (observer h)\n"],
"names": ["arr", "c", "i", "l", "Unchecked", "item", "Array", "zero", "f", "acc", "Arrays", "patternInput", "r", "a", "b", "len", "j", "Operators", "x", "y", "count", "res", "startIndex", "minChunkSize", "func", "arg1", "l1", "l2", "l3", "List", "array", "t", "list", "rest", "predicate", "size", "Enumerator", "s", "enum", "e", "T", "next", "dispose", "Enumerable", "getEnumerator", "s1", "s2", "loop", "e1", "e2", "matchValue", "el", "k", "d", "h", "keys", "mapping", "Seq", "generator", "seen", "cont", "add", "cur", "has", "itemsToExclude", "enumerator", "d1", "value", "source", "n", "Ref", "go", "windowSize", "q", "Activator", "document", "meta", "jQuery", "Json", "JSON", "text", "tupledArg", "v", "p", "old", "JSModule", "obj", "action", "AggregateException", "innerExceptions", "Exception", "message", "ArgumentException", "Number", "arr1", "start1", "length", "arr2", "start2", "n1", "n2", "IndexOutOfRangeException", "start", "a1", "a2", "xs", "rows", "ar", "accum", "ret1", "ret2", "ret", "offset", "src", "len1", "len2", "dst", "src1", "src2", "comparer", "z", "m", "arr3", "Arrays2D", "count1", "count2", "Concurrency", "chooser", "errors", "throwOnFirstException", "Option", "clearTimeout", "handle", "option", "setTimeout", "this", "delay", "arg0", "CancellationTokenSource", "t1", "t2", "cts", "tokens", "Char", "Util", "Lazy", "sub", "creg", "_arg1", "mk", "ie", "continued", "subscribe", "once", "cs", "o", "run", "accept", "ct", "callback", "Date", "ms", "pending", "exn", "ctOpt", "cached", "queue", "c2", "r2", "cc", "comp", "g", "Scheduler", "remove", "create", "args", "months", "years", "SingleNode", "node", "InvalidOperationException", "fields", "forLoopVar", "json", "types", "decode", "ti", "rn", "get", "finish", "head", "last", "ok", "line", "column", "OperationCanceledException", "msg", "kvp", "Math", "max", "min", "step", "Strings", "PrintfHelpers", "strings", "printObject", "index", "maxValue", "minValue", "buffer", "XhrProvider", "Remoting", "data", "AsyncProxy", "waiting", "reg", "err", "arg00", "headers", "payload", "AjaxRemotingProvider", "arg10", "arg20", "window", "url", "first", "sum", "cache", "en", "ss", "st", "outerE", "state", "s3", "e3", "pos", "empty", "finish1", "finish2", "fixed1", "fixed2", "stack", "off", "String", "subj", "search", "replace", "replaced", "replaceLoop", "nextStartIndex", "subject", "oldC", "newC", "pat", "opts", "sep", "re", "separator", "cmp", "objCompare", "eqR", "objEquals", "eq", "op_PlusPlus", "key", "hash", "event"],
"mappings": "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"
}
